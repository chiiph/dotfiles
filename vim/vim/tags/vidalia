!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	/Users/chiiph/Code/vidalia/src/tools/script_extension/templates.pyc	/^#define ${/;"	d	file:
$	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/network-wired.png	/^µè˙Q~ì#%EvQ∏'¬•¢íÜ—>TUUÈëÃUÙâÖCË£·√√√À‹‘8£°ì'O£øüñQÔ§Exë7z‹Îpw+›ªwü¢‰~SRR2NüHÏ>~≈ä3¬≥ƒØ]MÆ∆&rkl§$,√CDœ≥wÔﬁXT¨ÇhÊ¿πsÁtÀó\/\/úûÖ+“ù;w(ßÜÄ/;"	v
$	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/co.png	/^/;"	v
$	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/to.png	/^–/;"	v
A	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bj.png	/^e`jKxpo T'u''p'!\\!*f*8É88Ç82o2AÖA;x;HêHPòPFÖFPóPWùWWôW^¢^YòYdßdh™he•ej¨jj´j0|\/0{\/Aâ@f¶eEÄMÑ/;"	v
A	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ir.png	/^/;"	v
A	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/kw.png	/^/;"	v
AA	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/nc.png	/^à Õê –ô''”$$ƒ%%√!!§))«00ÿ++ƒ00Õ**Æ88›88‹22∏99 AA‚:;√;:√HHËFF—PPÌWWÒNN’^^ıYYÂdd˘dd¯hg˙eeÛfeÛjj˙eeÂyyÛÑÑ¯««À√√«¬¬∆◊◊€œœ”ŒŒ“ﬁﬁ·∆∆…ÔÔ€€‹˙˝˛Œ””»ÕÕ∆ÀÀÈÓÓ˘˝˝ı˘˘Û˜˜ﬂ„„÷⁄⁄ÂÊÊ““œ——ŒÀÀ»……∆ÏÏÍ··ﬂÿÿ÷ÀÀ…ﬁﬁ›ŸŸÿ“ﬂ!!€$$§¨!!È\/\/Ø##µ&&Â32∏((Ï55ª**Ω,,√..¿--«00…21∆00Œ44À33Û>>ıBBÔAA’::˜FF€?>–<<·BB˘JJ˙MMÂFFÍII˙OO˜NN˙PPÓLLÒNN‡HH¯QQ˜QQÙPP˘VVÌSSˆXX«∞∞Õ∂∂’øøﬂ……È‘‘Ú››Ô€€„––˜„„ˆ‚‚»««˚˚˚˜˜˜ˆˆˆÏÏÏ‚‚‚”””–––ÕÕÕÃÃÃ   »»»«««ˇˇˇ/;"	v
ADD_PROTOTYPE	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^#define ADD_PROTOTYPE(/;"	d
ADD_TO_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define ADD_TO_FILTER(/;"	d	file:
ADD_TO_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define ADD_TO_FILTER(/;"	d	file:
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/server.html	/^  <td>ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑÿ™ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÅŸàÿ±Ÿä ŸÖÿ´ŸÑ MSN Messenger, AIM, ICQ, Ÿà Jabber<\/td>$/;"	v
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^  <td>–û–±–º–µ–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Ç–∞–∫–∏–µ –∫–∞–∫ MSN Messenger, AIM, ICQ, –∏ Jabber<\/td>$/;"	v
AIM	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
ARG_DATADIR	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_DATADIR /;"	d	file:
ARG_GUISTYLE	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_GUISTYLE /;"	d	file:
ARG_HELP	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_HELP /;"	d	file:
ARG_LANGUAGE	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_LANGUAGE /;"	d	file:
ARG_LOGFILE	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_LOGFILE /;"	d	file:
ARG_LOGLEVEL	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_LOGLEVEL /;"	d	file:
ARG_PIDFILE	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_PIDFILE /;"	d	file:
ARG_READ_PASSWORD_FROM_STDIN	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_READ_PASSWORD_FROM_STDIN /;"	d	file:
ARG_RESET	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^#define ARG_RESET /;"	d	file:
ATTRIBUTE_TOPIC_HTML	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ATTRIBUTE_TOPIC_HTML /;"	d	file:
ATTRIBUTE_TOPIC_ID	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ATTRIBUTE_TOPIC_ID /;"	d	file:
ATTRIBUTE_TOPIC_NAME	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ATTRIBUTE_TOPIC_NAME /;"	d	file:
ATTRIBUTE_TOPIC_SECTION	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ATTRIBUTE_TOPIC_SECTION /;"	d	file:
AboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.cpp	/^AboutDialog::AboutDialog(QWidget *parent, Qt::WindowFlags flags)$/;"	f	class:AboutDialog	signature:(QWidget *parent, Qt::WindowFlags flags)
AboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^  AboutDialog(QWidget *parent = 0, Qt::WindowFlags flags = 0);$/;"	p	class:AboutDialog	access:public	signature:(QWidget *parent = 0, Qt::WindowFlags flags = 0)
AboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^class AboutDialog : public QDialog$/;"	c	inherits:QDialog
AboutDialog::AboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.cpp	/^AboutDialog::AboutDialog(QWidget *parent, Qt::WindowFlags flags)$/;"	f	class:AboutDialog	signature:(QWidget *parent, Qt::WindowFlags flags)
AboutDialog::AboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^  AboutDialog(QWidget *parent = 0, Qt::WindowFlags flags = 0);$/;"	p	class:AboutDialog	access:public	signature:(QWidget *parent = 0, Qt::WindowFlags flags = 0)
AboutDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^  Ui::AboutDialog ui; \/**< Qt Designer generated QObject **\/$/;"	m	class:AboutDialog	access:private
AbstractTorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::AbstractTorSettings(const QString &group,$/;"	f	class:AbstractTorSettings	signature:(const QString &group, TorControl *torControl)
AbstractTorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  AbstractTorSettings(const QString &group, TorControl *torControl = 0);$/;"	p	class:AbstractTorSettings	access:public	signature:(const QString &group, TorControl *torControl = 0)
AbstractTorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^class AbstractTorSettings : public VSettings$/;"	c	inherits:VSettings
AbstractTorSettings::AbstractTorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::AbstractTorSettings(const QString &group,$/;"	f	class:AbstractTorSettings	signature:(const QString &group, TorControl *torControl)
AbstractTorSettings::AbstractTorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  AbstractTorSettings(const QString &group, TorControl *torControl = 0);$/;"	p	class:AbstractTorSettings	access:public	signature:(const QString &group, TorControl *torControl = 0)
AbstractTorSettings::_backupSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  QMap<QString, QVariant> _backupSettings;$/;"	m	class:AbstractTorSettings	access:private
AbstractTorSettings::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  TorControl* _torControl;$/;"	m	class:AbstractTorSettings	access:private
AbstractTorSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual bool apply(QString *errmsg) = 0;$/;"	p	class:AbstractTorSettings	access:public	signature:(QString *errmsg)
AbstractTorSettings::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::changedSinceLastApply() const$/;"	f	class:AbstractTorSettings	signature:() const
AbstractTorSettings::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual bool changedSinceLastApply() const;$/;"	p	class:AbstractTorSettings	access:public	signature:() const
AbstractTorSettings::isEmptyValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::isEmptyValue(const QVariant &value) const$/;"	f	class:AbstractTorSettings	signature:(const QVariant &value) const
AbstractTorSettings::isEmptyValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  bool isEmptyValue(const QVariant &value) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QVariant &value) const
AbstractTorSettings::localValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::localValue(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
AbstractTorSettings::localValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant localValue(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
AbstractTorSettings::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::revert()$/;"	f	class:AbstractTorSettings	signature:()
AbstractTorSettings::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void revert();$/;"	p	class:AbstractTorSettings	access:public	signature:()
AbstractTorSettings::setChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setChanged(bool changed)$/;"	f	class:AbstractTorSettings	signature:(bool changed)
AbstractTorSettings::setChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  void setChanged(bool changed);$/;"	p	class:AbstractTorSettings	access:public	signature:(bool changed)
AbstractTorSettings::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setValue(const QString &key, const QVariant &value)$/;"	f	class:AbstractTorSettings	signature:(const QString &key, const QVariant &value)
AbstractTorSettings::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void setValue(const QString &key, const QVariant &value);$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key, const QVariant &value)
AbstractTorSettings::setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setVolatileValue(const QString &key, const QVariant &value)$/;"	f	class:AbstractTorSettings	signature:(const QString &key, const QVariant &value)
AbstractTorSettings::setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void setVolatileValue(const QString &key, const QVariant &value);$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key, const QVariant &value)
AbstractTorSettings::torControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  TorControl* torControl() const { return _torControl; };$/;"	f	class:AbstractTorSettings	access:protected	signature:() const
AbstractTorSettings::torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::torValue(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
AbstractTorSettings::torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant torValue(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
AbstractTorSettings::value	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::value(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
AbstractTorSettings::value	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant value(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
Accept	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    Accept, \/**< Connections matching this policy will be accepted. *\/$/;"	e	enum:Policy::Action
AcceptAll	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    AcceptAll, \/**< Accepts all connections. Equivalent to "accept *:*". *\/$/;"	e	enum:Policy::SpecialPolicy
Action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  enum Action {$/;"	g	class:Policy	access:public
AddData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^} AddData;$/;"	t	typeref:struct:s_AddData	file:
AddPortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    AddPortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
AddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  AddressMap()$/;"	f	class:AddressMap	access:public	signature:()
AddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^class AddressMap : public QHash<QString, AddressMapEntry>$/;"	c	inherits:QHash
AddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    AddressMap    = (1u << 10),$/;"	e	enum:TorEvents::Event
AddressMap::AddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  AddressMap()$/;"	f	class:AddressMap	access:public	signature:()
AddressMap::AddressMapAll	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapAll,    \/**< All address mapping types. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMap::AddressMapCache	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapCache,  \/**< Address mappings cached by Tor. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMap::AddressMapConfig	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapConfig, \/**< Address mappings set in the torrc. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMap::AddressMapControl	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapControl \/**< Address mappings set by a controller. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMap::AddressMapType	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  enum AddressMapType {$/;"	g	class:AddressMap	access:public
AddressMap::add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::add(const QString &from, const QString &to,$/;"	f	class:AddressMap	signature:(const QString &from, const QString &to, const QDateTime &expires)
AddressMap::add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::add(const QString &mapping)$/;"	f	class:AddressMap	signature:(const QString &mapping)
AddressMap::add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  void add(const QString &from, const QString &to, const QDateTime &expires);$/;"	p	class:AddressMap	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
AddressMap::add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  void add(const QString &mapping);$/;"	p	class:AddressMap	access:public	signature:(const QString &mapping)
AddressMap::isExpired	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::isExpired(const AddressMapEntry &entry) const$/;"	f	class:AddressMap	signature:(const AddressMapEntry &entry) const
AddressMap::isExpired	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  bool isExpired(const AddressMapEntry &entry) const;$/;"	p	class:AddressMap	access:private	signature:(const AddressMapEntry &entry) const
AddressMap::isMapped	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::isMapped(const QString &addr) const$/;"	f	class:AddressMap	signature:(const QString &addr) const
AddressMap::isMapped	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  bool isMapped(const QString &addr) const;$/;"	p	class:AddressMap	access:public	signature:(const QString &addr) const
AddressMap::mappedTo	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::mappedTo(const QString &addr) const$/;"	f	class:AddressMap	signature:(const QString &addr) const
AddressMap::mappedTo	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  QString mappedTo(const QString &addr) const;$/;"	p	class:AddressMap	access:public	signature:(const QString &addr) const
AddressMap::reverse	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::reverse() const$/;"	f	class:AddressMap	signature:() const
AddressMap::reverse	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  AddressMap reverse() const;$/;"	p	class:AddressMap	access:public	signature:() const
AddressMapAll	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapAll,    \/**< All address mapping types. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMapCache	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapCache,  \/**< Address mappings cached by Tor. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMapConfig	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapConfig, \/**< Address mappings set in the torrc. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMapControl	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^    AddressMapControl \/**< Address mappings set by a controller. *\/$/;"	e	enum:AddressMap::AddressMapType
AddressMapEntry	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^typedef QPair<QString, QDateTime> AddressMapEntry;$/;"	t
AddressMapType	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  enum AddressMapType {$/;"	g	class:AddressMap	access:public
Advanced	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Advanced      \/** Advanced configuration page. *\/$/;"	e	enum:ConfigDialog::Page
AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::AdvancedPage(QWidget *parent)$/;"	f	class:AdvancedPage	signature:(QWidget *parent)
AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  AdvancedPage(QWidget *parent = 0);$/;"	p	class:AdvancedPage	access:public	signature:(QWidget *parent = 0)
AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^class AdvancedPage : public ConfigPage$/;"	c	inherits:ConfigPage
AdvancedPage::AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::AdvancedPage(QWidget *parent)$/;"	f	class:AdvancedPage	signature:(QWidget *parent)
AdvancedPage::AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  AdvancedPage(QWidget *parent = 0);$/;"	p	class:AdvancedPage	access:public	signature:(QWidget *parent = 0)
AdvancedPage::ConfigGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  enum ConfigGroup {$/;"	g	class:AdvancedPage	access:public
AdvancedPage::ConfigurationFile	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    ConfigurationFile,$/;"	e	enum:AdvancedPage::ConfigGroup
AdvancedPage::Control	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    Control,$/;"	e	enum:AdvancedPage::ConfigGroup
AdvancedPage::DataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    DataDirectory,$/;"	e	enum:AdvancedPage::ConfigGroup
AdvancedPage::Panic	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    Panic$/;"	e	enum:AdvancedPage::ConfigGroup
AdvancedPage::_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  TorSettings* _settings;$/;"	m	class:AdvancedPage	access:private
AdvancedPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::apply(QString &errmsg)$/;"	f	class:AdvancedPage	signature:(QString &errmsg)
AdvancedPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:AdvancedPage	access:public	signature:(QString &errmsg)
AdvancedPage::authMethodChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::authMethodChanged(int index)$/;"	f	class:AdvancedPage	signature:(int index)
AdvancedPage::authMethodChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void authMethodChanged(int index);$/;"	p	class:AdvancedPage	access:private	signature:(int index)
AdvancedPage::authMethodToIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::authMethodToIndex(TorSettings::AuthenticationMethod method)$/;"	f	class:AdvancedPage	signature:(TorSettings::AuthenticationMethod method)
AdvancedPage::authMethodToIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  int authMethodToIndex(TorSettings::AuthenticationMethod method);$/;"	p	class:AdvancedPage	access:private	signature:(TorSettings::AuthenticationMethod method)
AdvancedPage::browsePanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browsePanicPath()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::browsePanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browsePanicPath();$/;"	p	class:AdvancedPage	access:private	signature:()
AdvancedPage::browseSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseSocketPath()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::browseSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseSocketPath();$/;"	p	class:AdvancedPage	access:private	signature:()
AdvancedPage::browseTorConfig	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseTorConfig()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::browseTorConfig	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseTorConfig();$/;"	p	class:AdvancedPage	access:private	signature:()
AdvancedPage::browseTorDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseTorDataDirectory()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::browseTorDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseTorDataDirectory();$/;"	p	class:AdvancedPage	access:private	signature:()
AdvancedPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::changedSinceLastApply()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool changedSinceLastApply();$/;"	p	class:AdvancedPage	access:public	signature:()
AdvancedPage::displayTorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::displayTorrcDialog()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::displayTorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void displayTorrcDialog();$/;"	p	class:AdvancedPage	access:private	signature:()
AdvancedPage::displayWarning	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::displayWarning(bool checked)$/;"	f	class:AdvancedPage	signature:(bool checked)
AdvancedPage::displayWarning	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void displayWarning(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
AdvancedPage::hideGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::hideGroup(ConfigGroup group)$/;"	f	class:AdvancedPage	signature:(ConfigGroup group)
AdvancedPage::hideGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void hideGroup(ConfigGroup group);$/;"	p	class:AdvancedPage	access:public	signature:(ConfigGroup group)
AdvancedPage::indexToAuthMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::indexToAuthMethod(int index)$/;"	f	class:AdvancedPage	signature:(int index)
AdvancedPage::indexToAuthMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  TorSettings::AuthenticationMethod indexToAuthMethod(int index);$/;"	p	class:AdvancedPage	access:private	signature:(int index)
AdvancedPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::load()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void load();$/;"	p	class:AdvancedPage	access:public	signature:()
AdvancedPage::restartTor	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void restartTor();$/;"	p	class:AdvancedPage	access:public	signature:()
AdvancedPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::retranslateUi()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  virtual void retranslateUi();$/;"	p	class:AdvancedPage	access:public	signature:()
AdvancedPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::revert()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void revert();$/;"	p	class:AdvancedPage	access:public	signature:()
AdvancedPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::save(QString &errmsg)$/;"	f	class:AdvancedPage	signature:(QString &errmsg)
AdvancedPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool save(QString &errmsg);$/;"	p	class:AdvancedPage	access:public	signature:(QString &errmsg)
AdvancedPage::toggleAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::toggleAuto(bool)$/;"	f	class:AdvancedPage	signature:(bool)
AdvancedPage::toggleAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void toggleAuto(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
AdvancedPage::toggleControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::toggleControl(bool)$/;"	f	class:AdvancedPage	signature:(bool)
AdvancedPage::toggleControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void toggleControl(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
AdvancedPage::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  Ui::AdvancedPage ui;$/;"	m	class:AdvancedPage	access:private
AdvancedPage::~AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::~AdvancedPage()$/;"	f	class:AdvancedPage	signature:()
AdvancedPage::~AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  ~AdvancedPage();$/;"	p	class:AdvancedPage	access:public	signature:()
Appearance	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Appearance,   \/** Appearance configuration page. *\/$/;"	e	enum:ConfigDialog::Page
AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::AppearancePage(QWidget *parent)$/;"	f	class:AppearancePage	signature:(QWidget *parent)
AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  AppearancePage(QWidget *parent = 0);$/;"	p	class:AppearancePage	access:public	signature:(QWidget *parent = 0)
AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^class AppearancePage : public ConfigPage$/;"	c	inherits:ConfigPage
AppearancePage::AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::AppearancePage(QWidget *parent)$/;"	f	class:AppearancePage	signature:(QWidget *parent)
AppearancePage::AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  AppearancePage(QWidget *parent = 0);$/;"	p	class:AppearancePage	access:public	signature:(QWidget *parent = 0)
AppearancePage::_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  VidaliaSettings* _settings;$/;"	m	class:AppearancePage	access:private
AppearancePage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::load()$/;"	f	class:AppearancePage	signature:()
AppearancePage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  void load();$/;"	p	class:AppearancePage	access:public	signature:()
AppearancePage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::retranslateUi()$/;"	f	class:AppearancePage	signature:()
AppearancePage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  virtual void retranslateUi();$/;"	p	class:AppearancePage	access:public	signature:()
AppearancePage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::save(QString &errmsg)$/;"	f	class:AppearancePage	signature:(QString &errmsg)
AppearancePage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  bool save(QString &errmsg);$/;"	p	class:AppearancePage	access:public	signature:(QString &errmsg)
AppearancePage::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  Ui::AppearancePage ui;$/;"	m	class:AppearancePage	access:private
AppearancePage::~AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::~AppearancePage()$/;"	f	class:AppearancePage	signature:()
AppearancePage::~AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  ~AppearancePage();$/;"	p	class:AppearancePage	access:public	signature:()
AreaGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^    AreaGraph       \/**< Plot bandwidth as alpha blended area graphs. *\/$/;"	e	enum:GraphFrame::GraphStyle
AsnDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    AsnDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
Authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Authenticated,  \/**< Vidalia has authenticated to Tor. *\/$/;"	e	enum:MainWindow::TorStatus
Authenticating	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Authenticating, \/**< Vidalia is authenticating to Tor. *\/$/;"	e	enum:MainWindow::TorStatus
AuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  enum AuthenticationMethod {$/;"	g	class:TorSettings	access:public
Authority	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Authority    = 0x0001,$/;"	e	enum:RouterStatus::Flag
B	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bn.png	/^/;"	v
B	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ve.png	/^/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/128x128/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/128x128/tor-off.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/128x128/tor-on.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/128x128/tor-starting.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/128x128/tor-stopping.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/16x16/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/16x16/tor-off.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/16x16/tor-on.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/16x16/tor-starting.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/16x16/tor-stopping.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-off.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-on.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-starting.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-stopping.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/tor-off.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/tor-on.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/tor-starting.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/tor-stopping.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/tor-off.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/tor-on.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/tor-starting.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/tor-stopping.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
B1n	/Users/chiiph/Code/vidalia/src/vidalia/res/64x64/tor-logo.png	/^Ì%b°Ω0„ã>ˇ3·o‡ã~ˆ¸@˛€z/;"	v
BACK_COLOR	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define BACK_COLOR /;"	d
BF	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/jo.png	/^/;"	v
BWGRAPH_LINE_RECV	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define BWGRAPH_LINE_RECV /;"	d	file:
BWGRAPH_LINE_SEND	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define BWGRAPH_LINE_SEND /;"	d	file:
BadDirectory	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    BadDirectory = 0x0004,$/;"	e	enum:RouterStatus::Flag
BadExit	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    BadExit      = 0x0002,$/;"	e	enum:RouterStatus::Flag
BadSocksHostnameError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    BadSocksHostnameError \/**< Application provided an invalid hostname. *\/$/;"	e	enum:tc::SocksError
Bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    Bandwidth     = (1u << 0),$/;"	e	enum:TorEvents::Event
BandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::BandwidthGraph(QStatusBar *st, QWidget *parent)$/;"	f	class:BandwidthGraph	signature:(QStatusBar *st, QWidget *parent)
BandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  BandwidthGraph(QStatusBar *st = 0, QWidget *parent = 0);$/;"	p	class:BandwidthGraph	access:public	signature:(QStatusBar *st = 0, QWidget *parent = 0)
BandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^class BandwidthGraph : public VidaliaTab$/;"	c	inherits:VidaliaTab
BandwidthGraph::BandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::BandwidthGraph(QStatusBar *st, QWidget *parent)$/;"	f	class:BandwidthGraph	signature:(QStatusBar *st, QWidget *parent)
BandwidthGraph::BandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  BandwidthGraph(QStatusBar *st = 0, QWidget *parent = 0);$/;"	p	class:BandwidthGraph	access:public	signature:(QStatusBar *st = 0, QWidget *parent = 0)
BandwidthGraph::_settings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  VidaliaSettings* _settings;$/;"	m	class:BandwidthGraph	access:private
BandwidthGraph::_statusBar	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  QStatusBar *_statusBar;$/;"	m	class:BandwidthGraph	access:private
BandwidthGraph::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  TorControl* _torControl;$/;"	m	class:BandwidthGraph	access:private
BandwidthGraph::cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::cancelChanges()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void cancelChanges();$/;"	p	class:BandwidthGraph	access:private	signature:()
BandwidthGraph::createActions	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::createActions()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::createActions	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void createActions();$/;"	p	class:BandwidthGraph	access:private	signature:()
BandwidthGraph::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::loadSettings()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void loadSettings();$/;"	p	class:BandwidthGraph	access:private	signature:()
BandwidthGraph::reset	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::reset()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::reset	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void reset();$/;"	p	class:BandwidthGraph	access:private	signature:()
BandwidthGraph::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::retranslateUi()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  virtual void retranslateUi();$/;"	p	class:BandwidthGraph	access:protected	signature:()
BandwidthGraph::saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::saveChanges()$/;"	f	class:BandwidthGraph	signature:()
BandwidthGraph::saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void saveChanges();$/;"	p	class:BandwidthGraph	access:private	signature:()
BandwidthGraph::setOpacity	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::setOpacity(int value)$/;"	f	class:BandwidthGraph	signature:(int value)
BandwidthGraph::setOpacity	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void setOpacity(int value);$/;"	p	class:BandwidthGraph	access:private	signature:(int value)
BandwidthGraph::showSettingsFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::showSettingsFrame(bool show)$/;"	f	class:BandwidthGraph	signature:(bool show)
BandwidthGraph::showSettingsFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void showSettingsFrame(bool show);$/;"	p	class:BandwidthGraph	access:private	signature:(bool show)
BandwidthGraph::ui	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  Ui::BandwidthGraph ui;$/;"	m	class:BandwidthGraph	access:private
BandwidthGraph::updateGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::updateGraph(quint64 bytesRead, quint64 bytesWritten)$/;"	f	class:BandwidthGraph	signature:(quint64 bytesRead, quint64 bytesWritten)
BandwidthGraph::updateGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void updateGraph(quint64 bytesRead, quint64 bytesWritten);$/;"	p	class:BandwidthGraph	access:private	signature:(quint64 bytesRead, quint64 bytesWritten)
Boolean	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Boolean,$/;"	e	enum:TorOpt::OptType
BooleanAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    BooleanAuto,$/;"	e	enum:TorOpt::OptType
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::BootstrapStatus()$/;"	f	class:BootstrapStatus	signature:()
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::BootstrapStatus(tc::Severity severity, Status status,$/;"	f	class:BootstrapStatus	signature:(tc::Severity severity, Status status, int percentComplete, const QString &description, const QString &warning, tc::ConnectionStatusReason reason, Recommendation action)
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  BootstrapStatus();$/;"	p	class:BootstrapStatus	access:public	signature:()
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  BootstrapStatus(tc::Severity severity,$/;"	p	class:BootstrapStatus	access:public	signature:(tc::Severity severity, Status status, int percentComplete, const QString &description, const QString &warning = QString(), tc::ConnectionStatusReason reason = tc::UnrecognizedReason, Recommendation action = UnrecognizedRecommendation)
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^Q_DECLARE_METATYPE(BootstrapStatus);$/;"	v
BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^class BootstrapStatus$/;"	c
BootstrapStatus::BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::BootstrapStatus()$/;"	f	class:BootstrapStatus	signature:()
BootstrapStatus::BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::BootstrapStatus(tc::Severity severity, Status status,$/;"	f	class:BootstrapStatus	signature:(tc::Severity severity, Status status, int percentComplete, const QString &description, const QString &warning, tc::ConnectionStatusReason reason, Recommendation action)
BootstrapStatus::BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  BootstrapStatus();$/;"	p	class:BootstrapStatus	access:public	signature:()
BootstrapStatus::BootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  BootstrapStatus(tc::Severity severity,$/;"	p	class:BootstrapStatus	access:public	signature:(tc::Severity severity, Status status, int percentComplete, const QString &description, const QString &warning = QString(), tc::ConnectionStatusReason reason = tc::UnrecognizedReason, Recommendation action = UnrecognizedRecommendation)
BootstrapStatus::BootstrappingDone	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    BootstrappingDone$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::ConnectingToDirMirror	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    ConnectingToDirMirror,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::ConnectingToEntryGuard	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    ConnectingToEntryGuard,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::CreatingOneHopCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    CreatingOneHopCircuit,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::EstablishingCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    EstablishingCircuit,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::HandshakingWithDirMirror	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    HandshakingWithDirMirror,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::HandshakingWithEntryGuard	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    HandshakingWithEntryGuard,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::LoadingAuthorityCertificates	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingAuthorityCertificates,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::LoadingDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingDescriptors,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::LoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingNetworkStatus,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::RecommendIgnore	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RecommendIgnore,$/;"	e	enum:BootstrapStatus::Recommendation
BootstrapStatus::RecommendWarn	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RecommendWarn$/;"	e	enum:BootstrapStatus::Recommendation
BootstrapStatus::Recommendation	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  enum Recommendation {$/;"	g	class:BootstrapStatus	access:public
BootstrapStatus::RequestingDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RequestingDescriptors,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::RequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RequestingNetworkStatus,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::Status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  enum Status {$/;"	g	class:BootstrapStatus	access:public
BootstrapStatus::UnrecognizedRecommendation	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    UnrecognizedRecommendation,$/;"	e	enum:BootstrapStatus::Recommendation
BootstrapStatus::UnrecognizedStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    UnrecognizedStatus,$/;"	e	enum:BootstrapStatus::Status
BootstrapStatus::_action	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Recommendation _action;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_description	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString _description;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_percentComplete	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  int _percentComplete;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_reason	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::ConnectionStatusReason _reason;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_severity	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::Severity _severity;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Status _status;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::_warning	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString _warning;$/;"	m	class:BootstrapStatus	access:private
BootstrapStatus::actionFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::actionFromString(const QString &str)$/;"	f	class:BootstrapStatus	signature:(const QString &str)
BootstrapStatus::actionFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  static Recommendation actionFromString(const QString &str);$/;"	p	class:BootstrapStatus	access:public	signature:(const QString &str)
BootstrapStatus::description	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString description() const { return _description; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::isValid() const$/;"	f	class:BootstrapStatus	signature:() const
BootstrapStatus::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  bool isValid() const;$/;"	p	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::percentComplete	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  int percentComplete() const { return _percentComplete; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::reason	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::ConnectionStatusReason reason() const { return _reason; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::recommendedAction	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Recommendation recommendedAction() const { return _action; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::severity	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::Severity severity() const { return _severity; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Status status() const { return _status; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapStatus::statusFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::statusFromString(const QString &str)$/;"	f	class:BootstrapStatus	signature:(const QString &str)
BootstrapStatus::statusFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  static Status statusFromString(const QString &tag);$/;"	p	class:BootstrapStatus	access:public	signature:(const QString &tag)
BootstrapStatus::warning	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString warning() const { return _warning; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::BootstrapTestCase(TorControl * tc,$/;"	f	class:BootstrapTestCase	signature:(TorControl * tc, QObject *parent)
BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestCase(TorControl * tc, QObject * parent = 0);$/;"	p	class:BootstrapTestCase	access:public	signature:(TorControl * tc, QObject * parent = 0)
BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^class BootstrapTestCase : public QObject$/;"	c	inherits:QObject
BootstrapTestCase::BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::BootstrapTestCase(TorControl * tc,$/;"	f	class:BootstrapTestCase	signature:(TorControl * tc, QObject *parent)
BootstrapTestCase::BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestCase(TorControl * tc, QObject * parent = 0);$/;"	p	class:BootstrapTestCase	access:public	signature:(TorControl * tc, QObject * parent = 0)
BootstrapTestCase::Failure	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Failure,  \/\/!< test failed$/;"	e	enum:BootstrapTestCase::TestResult
BootstrapTestCase::Running	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Running,  \/\/!< test still running$/;"	e	enum:BootstrapTestCase::TestResult
BootstrapTestCase::Success	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Success,  \/\/!< test finished with success$/;"	e	enum:BootstrapTestCase::TestResult
BootstrapTestCase::TestResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  enum TestResult{$/;"	g	class:BootstrapTestCase	access:public
BootstrapTestCase::Timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Timeout   \/\/!< test case timedout$/;"	e	enum:BootstrapTestCase::TestResult
BootstrapTestCase::_mainWindow	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  MainWindow * _mainWindow;$/;"	m	class:BootstrapTestCase	access:private
BootstrapTestCase::_testResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TestResult _testResult;$/;"	m	class:BootstrapTestCase	access:private
BootstrapTestCase::_timer	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  QTimer _timer;$/;"	m	class:BootstrapTestCase	access:private
BootstrapTestCase::_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestCase	access:private
BootstrapTestCase::_torKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestTorKiller * _torKiller;$/;"	m	class:BootstrapTestCase	access:private
BootstrapTestCase::clearCache	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::clearCache()$/;"	f	class:BootstrapTestCase	signature:()
BootstrapTestCase::clearCache	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void clearCache();$/;"	p	class:BootstrapTestCase	access:private	signature:()
BootstrapTestCase::lastResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::lastResult() const$/;"	f	class:BootstrapTestCase	signature:() const
BootstrapTestCase::lastResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TestResult lastResult() const;$/;"	p	class:BootstrapTestCase	access:public	signature:() const
BootstrapTestCase::runTest	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^runTest(BootstrapStatus::Status phaseToTest)$/;"	f	class:BootstrapTestCase	signature:(BootstrapStatus::Status phaseToTest)
BootstrapTestCase::runTest	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void runTest(BootstrapStatus::Status phaseToTest);$/;"	p	class:BootstrapTestCase	access:public	signature:(BootstrapStatus::Status phaseToTest)
BootstrapTestCase::testDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testDone();$/;"	p	class:BootstrapTestCase	access:public	signature:()
BootstrapTestCase::testFinished	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::testFinished()$/;"	f	class:BootstrapTestCase	signature:()
BootstrapTestCase::testFinished	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testFinished();$/;"	p	class:BootstrapTestCase	access:private	signature:()
BootstrapTestCase::timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::timeout()$/;"	f	class:BootstrapTestCase	signature:()
BootstrapTestCase::timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void timeout();$/;"	p	class:BootstrapTestCase	access:private	signature:()
BootstrapTestCase::torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::torStopped()$/;"	f	class:BootstrapTestCase	signature:()
BootstrapTestCase::torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torStopped();$/;"	p	class:BootstrapTestCase	access:private	signature:()
BootstrapTestCase::~BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::~BootstrapTestCase(){$/;"	f	class:BootstrapTestCase	signature:()
BootstrapTestCase::~BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  ~BootstrapTestCase();$/;"	p	class:BootstrapTestCase	access:public	signature:()
BootstrapTestSuite	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::BootstrapTestSuite(QObject *parent)$/;"	f	class:BootstrapTestSuite	signature:(QObject *parent)
BootstrapTestSuite	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestSuite(QObject * parent = NULL);$/;"	p	class:BootstrapTestSuite	access:public	signature:(QObject * parent = NULL)
BootstrapTestSuite	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^class BootstrapTestSuite : public QObject$/;"	c	inherits:QObject
BootstrapTestSuite::BootstrapTestSuite	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::BootstrapTestSuite(QObject *parent)$/;"	f	class:BootstrapTestSuite	signature:(QObject *parent)
BootstrapTestSuite::BootstrapTestSuite	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestSuite(QObject * parent = NULL);$/;"	p	class:BootstrapTestSuite	access:public	signature:(QObject * parent = NULL)
BootstrapTestSuite::_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestSuite	access:private
BootstrapTestSuite::testBootstrapDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testBootstrapDone()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testBootstrapDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testBootstrapDone();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testConnectDirMirror	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testConnectDirMirror()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testConnectDirMirror	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testConnectDirMirror();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testConnectToEntryGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testConnectToEntryGuard()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testConnectToEntryGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testConnectToEntryGuard();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testCreateOneHopCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testCreateOneHopCircuit()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testCreateOneHopCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testCreateOneHopCircuit();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testEstabilishCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testEstabilishCircuit()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testEstabilishCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testEstabilishCircuit();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testHandshake	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testHandshake()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testHandshake	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testHandshake();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testHandshakeGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testHandshakeGuard()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testHandshakeGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testHandshakeGuard();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testLoadingCerts	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingCerts()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testLoadingCerts	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingCerts();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testLoadingDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingDescriptors()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testLoadingDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingDescriptors();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testLoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingNetworkStatus()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testLoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingNetworkStatus();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testRequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testRequestingNetworkStatus()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testRequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testRequestingNetworkStatus();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testRequestringDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testRequestringDescriptors()$/;"	f	class:BootstrapTestSuite	signature:()
BootstrapTestSuite::testRequestringDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testRequestringDescriptors();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
BootstrapTestSuite::testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testStatus(BootstrapStatus::Status status)$/;"	f	class:BootstrapTestSuite	signature:(BootstrapStatus::Status status)
BootstrapTestSuite::testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool testStatus(BootstrapStatus::Status status);$/;"	p	class:BootstrapTestSuite	access:private	signature:(BootstrapStatus::Status status)
BootstrapTestTorKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::BootstrapTestTorKiller(BootstrapStatus::Status bs,$/;"	f	class:BootstrapTestTorKiller	signature:(BootstrapStatus::Status bs, TorControl * tc, QObject * parent)
BootstrapTestTorKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestTorKiller(BootstrapStatus::Status bs,$/;"	p	class:BootstrapTestTorKiller	access:public	signature:(BootstrapStatus::Status bs, TorControl * tc = 0, QObject * parent = 0)
BootstrapTestTorKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^class BootstrapTestTorKiller : public QObject$/;"	c	inherits:QObject
BootstrapTestTorKiller::BootstrapTestTorKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::BootstrapTestTorKiller(BootstrapStatus::Status bs,$/;"	f	class:BootstrapTestTorKiller	signature:(BootstrapStatus::Status bs, TorControl * tc, QObject * parent)
BootstrapTestTorKiller::BootstrapTestTorKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestTorKiller(BootstrapStatus::Status bs,$/;"	p	class:BootstrapTestTorKiller	access:public	signature:(BootstrapStatus::Status bs, TorControl * tc = 0, QObject * parent = 0)
BootstrapTestTorKiller::Q_DISABLE_COPY	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  Q_DISABLE_COPY(BootstrapTestTorKiller);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(BootstrapTestTorKiller)
BootstrapTestTorKiller::_testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapStatus::Status _testStatus;$/;"	m	class:BootstrapTestTorKiller	access:private
BootstrapTestTorKiller::_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestTorKiller	access:private
BootstrapTestTorKiller::_torKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool _torKilled;$/;"	m	class:BootstrapTestTorKiller	access:private
BootstrapTestTorKiller::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::bootstrapStatusChanged(const BootstrapStatus &bs)$/;"	f	class:BootstrapTestTorKiller	signature:(const BootstrapStatus &bs)
BootstrapTestTorKiller::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void bootstrapStatusChanged(const BootstrapStatus &bs);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(const BootstrapStatus &bs)
BootstrapTestTorKiller::isTorKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::isTorKilled() const$/;"	f	class:BootstrapTestTorKiller	signature:() const
BootstrapTestTorKiller::isTorKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool isTorKilled() const;$/;"	p	class:BootstrapTestTorKiller	access:public	signature:() const
BootstrapTestTorKiller::torCrashed	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torCrashed();$/;"	p	class:BootstrapTestTorKiller	access:public	signature:()
BootstrapTestTorKiller::torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::torStopped(int exitCode, QProcess::ExitStatus status)$/;"	f	class:BootstrapTestTorKiller	signature:(int exitCode, QProcess::ExitStatus status)
BootstrapTestTorKiller::torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torStopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(int exitCode, QProcess::ExitStatus exitStatus)
BootstrappingDone	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    BootstrappingDone$/;"	e	enum:BootstrapStatus::Status
Boston	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$/;"	v
Both	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Both,$/;"	e	enum:VidaliaSettings::IconPosition
BridgeUsageDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::BridgeUsageDialog(QWidget *parent)$/;"	f	class:BridgeUsageDialog	signature:(QWidget *parent)
BridgeUsageDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  BridgeUsageDialog(QWidget *parent = 0);$/;"	p	class:BridgeUsageDialog	access:public	signature:(QWidget *parent = 0)
BridgeUsageDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^class BridgeUsageDialog : public QDialog$/;"	c	inherits:QDialog
BridgeUsageDialog::BridgeUsageDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::BridgeUsageDialog(QWidget *parent)$/;"	f	class:BridgeUsageDialog	signature:(QWidget *parent)
BridgeUsageDialog::BridgeUsageDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  BridgeUsageDialog(QWidget *parent = 0);$/;"	p	class:BridgeUsageDialog	access:public	signature:(QWidget *parent = 0)
BridgeUsageDialog::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::showEvent(QShowEvent *e)$/;"	f	class:BridgeUsageDialog	signature:(QShowEvent *e)
BridgeUsageDialog::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  void showEvent(QShowEvent *e);$/;"	p	class:BridgeUsageDialog	access:protected	signature:(QShowEvent *e)
BridgeUsageDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  Ui::BridgeUsageDialog ui;$/;"	m	class:BridgeUsageDialog	access:private
BridgeUsageDialog::update	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::update(const QDateTime &timeStarted,$/;"	f	class:BridgeUsageDialog	signature:(const QDateTime &timeStarted, const QHash<QString,int> &countrySummary)
BridgeUsageDialog::update	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  void update(const QDateTime &timeStarted,$/;"	p	class:BridgeUsageDialog	access:public	signature:(const QDateTime &timeStarted, const QHash<QString,int> &countrySummary)
Browse	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Browse$/;"	e	enum:VMessageBox::Button
BuildFlag	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum BuildFlag {$/;"	g	class:Circuit	access:public
Built	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Built,     \/**< All hops finished *\/$/;"	e	enum:Circuit::Status
BundleInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  enum BundleInfo {$/;"	g	class:UpdateProcess	access:public
Button	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  enum Button {$/;"	g	class:VMessageBox	access:public
BwRateIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  enum BwRateIndex {$/;"	g	class:ServerPage	access:private
CABLE256_AVG_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE256_AVG_RATE /;"	d	file:
CABLE256_MAX_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE256_MAX_RATE /;"	d	file:
CABLE512_AVG_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE512_AVG_RATE /;"	d	file:
CABLE512_MAX_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE512_MAX_RATE /;"	d	file:
CABLE768_AVG_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE768_AVG_RATE /;"	d	file:
CABLE768_MAX_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define CABLE768_MAX_RATE /;"	d	file:
CIF	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service CIF;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
CIRCLEQ_EMPTY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_EMPTY(/;"	d
CIRCLEQ_END	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_END(/;"	d
CIRCLEQ_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_ENTRY(/;"	d
CIRCLEQ_FIRST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_FIRST(/;"	d
CIRCLEQ_FOREACH	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_FOREACH(/;"	d
CIRCLEQ_FOREACH_REVERSE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_FOREACH_REVERSE(/;"	d
CIRCLEQ_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_HEAD(/;"	d
CIRCLEQ_HEAD_INITIALIZER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_HEAD_INITIALIZER(/;"	d
CIRCLEQ_INIT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_INIT(/;"	d
CIRCLEQ_INSERT_AFTER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_INSERT_AFTER(/;"	d
CIRCLEQ_INSERT_BEFORE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_INSERT_BEFORE(/;"	d
CIRCLEQ_INSERT_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_INSERT_HEAD(/;"	d
CIRCLEQ_INSERT_TAIL	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_INSERT_TAIL(/;"	d
CIRCLEQ_LAST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_LAST(/;"	d
CIRCLEQ_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_NEXT(/;"	d
CIRCLEQ_PREV	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_PREV(/;"	d
CIRCLEQ_REMOVE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	CIRCLEQ_REMOVE(/;"	d
CIRCLEQ_REPLACE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define CIRCLEQ_REPLACE(/;"	d
CIRCUIT_NORMAL_PEN	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^#define CIRCUIT_NORMAL_PEN /;"	d	file:
CIRCUIT_SELECTED_PEN	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^#define CIRCUIT_SELECTED_PEN /;"	d	file:
CLOSED_CIRCUIT_REMOVE_DELAY	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define CLOSED_CIRCUIT_REMOVE_DELAY /;"	d	file:
CLOSED_STREAM_REMOVE_DELAY	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define CLOSED_STREAM_REMOVE_DELAY /;"	d	file:
CODELENGTH	/Users/chiiph/Code/vidalia/src/miniupnpc/codelength.h	/^#define CODELENGTH(/;"	d
COL_MESG	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^#define COL_MESG /;"	d	file:
COL_MESG	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^#define COL_MESG /;"	d	file:
COL_TIME	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^#define COL_TIME /;"	d	file:
COL_TIME	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^#define COL_TIME /;"	d	file:
COL_TIME_WIDTH	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^#define COL_TIME_WIDTH /;"	d	file:
COL_TYPE	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^#define COL_TYPE /;"	d	file:
COL_TYPE	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^#define COL_TYPE /;"	d	file:
COL_TYPE_WIDTH	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^#define COL_TYPE_WIDTH /;"	d	file:
CONNECT_RETRY_DELAY	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^#define CONNECT_RETRY_DELAY /;"	d	file:
CONTRACT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT $/;"	v
CONTRACT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT$/;"	v
CONTRACT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR$/;"	v
COUNTRY_COLUMN	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define COUNTRY_COLUMN /;"	d	file:
COUNTRY_LOCATION_FILE	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^#define COUNTRY_LOCATION_FILE /;"	d	file:
CURSOR_MOUSE_PRESS	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^#define CURSOR_MOUSE_PRESS /;"	d	file:
CURSOR_NORMAL	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^#define CURSOR_NORMAL /;"	d	file:
CableDsl256	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl256 = 0, \/**< Cable\/DSL 256 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
CableDsl512	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl512,     \/**< Cable\/DSL 512 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
CableDsl768	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl768,     \/**< Cable\/DSL 768 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
Cancel	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Cancel,$/;"	e	enum:VMessageBox::Button
ChangeServiceConfig2A	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ChangeServiceConfig2A_fn ChangeServiceConfig2A;$/;"	m	struct:ServiceFunctions	access:public
ChangeServiceConfig2A_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *ChangeServiceConfig2A_fn)($/;"	t
CheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    CheckForUpdates,$/;"	e	enum:UpdateProcess::UpdateCommand
CheckingForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    CheckingForUpdates,$/;"	e	enum:UpdateProgressDialog::Status
Chinese	/Users/chiiph/Code/vidalia/src/vidalia/res/credits.html	/^  <tr><td>LinHongJun<\/td><td>Simplified Chinese, Traditional Chinese<\/td><\/tr>$/;"	v
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::Circuit()$/;"	f	class:Circuit	signature:()
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::Circuit(const QString &circuit)$/;"	f	class:Circuit	signature:(const QString &circuit)
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Circuit();$/;"	p	class:Circuit	access:public	signature:()
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Circuit(const CircuitId &circuit);$/;"	p	class:Circuit	access:public	signature:(const CircuitId &circuit)
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^Q_DECLARE_METATYPE(Circuit);$/;"	v
Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^class Circuit$/;"	c
Circuit::BuildFlag	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum BuildFlag {$/;"	g	class:Circuit	access:public
Circuit::Built	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Built,     \/**< All hops finished *\/$/;"	e	enum:Circuit::Status
Circuit::Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::Circuit()$/;"	f	class:Circuit	signature:()
Circuit::Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::Circuit(const QString &circuit)$/;"	f	class:Circuit	signature:(const QString &circuit)
Circuit::Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Circuit();$/;"	p	class:Circuit	access:public	signature:()
Circuit::Circuit	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Circuit(const CircuitId &circuit);$/;"	p	class:Circuit	access:public	signature:(const CircuitId &circuit)
Circuit::Closed	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Closed     \/**< Circuit closed (was built) *\/$/;"	e	enum:Circuit::Status
Circuit::Controller	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Controller$/;"	e	enum:Circuit::Purpose
Circuit::Extended	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Extended,  \/**< Circuit extended by one hop *\/$/;"	e	enum:Circuit::Status
Circuit::Failed	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Failed,    \/**< Circuit closed (was not built) *\/$/;"	e	enum:Circuit::Status
Circuit::General	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    General = 0,$/;"	e	enum:Circuit::Purpose
Circuit::HsClientIntro	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsClientIntro,$/;"	e	enum:Circuit::Purpose
Circuit::HsClientRend	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsClientRend,$/;"	e	enum:Circuit::Purpose
Circuit::HsServiceIntro	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsServiceIntro,$/;"	e	enum:Circuit::Purpose
Circuit::HsServiceRend	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsServiceRend,$/;"	e	enum:Circuit::Purpose
Circuit::IsInternal	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    IsInternal   = 0x0002,$/;"	e	enum:Circuit::BuildFlag
Circuit::Launched	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Launched,  \/**< Circuit ID assigned to new circuit *\/$/;"	e	enum:Circuit::Status
Circuit::NeedCapacity	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    NeedCapacity = 0x0004,$/;"	e	enum:Circuit::BuildFlag
Circuit::NeedUptime	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    NeedUptime   = 0x0008,$/;"	e	enum:Circuit::BuildFlag
Circuit::None	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    None         = 0x0000,$/;"	e	enum:Circuit::BuildFlag
Circuit::OneHopTunnel	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    OneHopTunnel = 0x0001,$/;"	e	enum:Circuit::BuildFlag
Circuit::Purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum Purpose {$/;"	g	class:Circuit	access:public
Circuit::Status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum Status {$/;"	g	class:Circuit	access:public
Circuit::Testing	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Testing,$/;"	e	enum:Circuit::Purpose
Circuit::Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Unknown,   \/**< Unknown circuit status *\/$/;"	e	enum:Circuit::Status
Circuit::_buildFlags	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlags _buildFlags;$/;"	m	class:Circuit	access:private
Circuit::_circId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  CircuitId _circId; \/**< Circuit ID. *\/$/;"	m	class:Circuit	access:private
Circuit::_ids	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList _ids;    \/**< IDs of the routers in the circuit. *\/$/;"	m	class:Circuit	access:private
Circuit::_isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  bool _isValid;$/;"	m	class:Circuit	access:private
Circuit::_names	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList _names;  \/**< Nicknames of the routers in the circuit. *\/$/;"	m	class:Circuit	access:private
Circuit::_purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose _purpose;$/;"	m	class:Circuit	access:private
Circuit::_status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Status _status;  \/**< Circuit status. *\/$/;"	m	class:Circuit	access:private
Circuit::buildFlags	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlags buildFlags() const { return _buildFlags; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::flagValue(const QString &flag) const$/;"	f	class:Circuit	signature:(const QString &flag) const
Circuit::flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlag flagValue(const QString &flag) const;$/;"	p	class:Circuit	access:private	signature:(const QString &flag) const
Circuit::id	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  CircuitId id() const { return _circId; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  bool isValid() const { return _isValid; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::isValidCircuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::isValidCircuitId(const CircuitId &circId)$/;"	f	class:Circuit	signature:(const CircuitId &circId)
Circuit::isValidCircuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  static bool isValidCircuitId(const CircuitId &circId);$/;"	p	class:Circuit	access:public	signature:(const CircuitId &circId)
Circuit::length	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  uint length() const { return _ids.size(); }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose purpose() const { return _purpose; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::purposeValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::purposeValue(const QString &purpose) const$/;"	f	class:Circuit	signature:(const QString &purpose) const
Circuit::purposeValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose purposeValue(const QString &purpose) const;$/;"	p	class:Circuit	access:private	signature:(const QString &purpose) const
Circuit::routerIDs	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList routerIDs() const { return _ids; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::routerNames	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList routerNames() const { return _names; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Status status() const { return _status; }$/;"	f	class:Circuit	access:public	signature:() const
Circuit::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::statusString() const$/;"	f	class:Circuit	signature:() const
Circuit::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QString statusString() const;$/;"	p	class:Circuit	access:public	signature:() const
Circuit::toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::toStatus(const QString &status)$/;"	f	class:Circuit	signature:(const QString &status)
Circuit::toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  static Status toStatus(const QString &strStatus);$/;"	p	class:Circuit	access:public	signature:(const QString &strStatus)
CircuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    CircuitEstablished \/**< Tor has built a circuit. *\/$/;"	e	enum:MainWindow::TorStatus
CircuitGeoPath	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^typedef QPair<Marble::GeoDataLineString, bool> CircuitGeoPath;$/;"	t
CircuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^typedef QString CircuitId;$/;"	t
CircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::CircuitItem(const Circuit &circuit)$/;"	f	class:CircuitItem	signature:(const Circuit &circuit)
CircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  CircuitItem(const Circuit &circuit);$/;"	p	class:CircuitItem	access:public	signature:(const Circuit &circuit)
CircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^class CircuitItem : public QTreeWidgetItem$/;"	c	inherits:QTreeWidgetItem
CircuitItem::CircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::CircuitItem(const Circuit &circuit)$/;"	f	class:CircuitItem	signature:(const Circuit &circuit)
CircuitItem::CircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  CircuitItem(const Circuit &circuit);$/;"	p	class:CircuitItem	access:public	signature:(const Circuit &circuit)
CircuitItem::_circuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  Circuit _circuit; \/**< Circuit associated with this item. *\/$/;"	m	class:CircuitItem	access:private
CircuitItem::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::addStream(StreamItem *stream)$/;"	f	class:CircuitItem	signature:(StreamItem *stream)
CircuitItem::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void addStream(StreamItem *stream);$/;"	p	class:CircuitItem	access:public	signature:(StreamItem *stream)
CircuitItem::circuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  Circuit circuit() const { return _circuit; }$/;"	f	class:CircuitItem	access:public	signature:() const
CircuitItem::id	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  CircuitId id() const { return _circuit.id(); }$/;"	f	class:CircuitItem	access:public	signature:() const
CircuitItem::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::removeStream(StreamItem *stream)$/;"	f	class:CircuitItem	signature:(StreamItem *stream)
CircuitItem::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void removeStream(StreamItem *stream);$/;"	p	class:CircuitItem	access:public	signature:(StreamItem *stream)
CircuitItem::streams	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::streams() const$/;"	f	class:CircuitItem	signature:() const
CircuitItem::streams	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  QList<StreamItem *> streams() const;$/;"	p	class:CircuitItem	access:public	signature:() const
CircuitItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::update(const Circuit &circuit)$/;"	f	class:CircuitItem	signature:(const Circuit &circuit)
CircuitItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void update(const Circuit &circuit);$/;"	p	class:CircuitItem	access:public	signature:(const Circuit &circuit)
CircuitList	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^typedef QList<Circuit> CircuitList;$/;"	t
CircuitListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::CircuitListWidget(QWidget *parent)$/;"	f	class:CircuitListWidget	signature:(QWidget *parent)
CircuitListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  CircuitListWidget(QWidget *parent = 0);$/;"	p	class:CircuitListWidget	access:public	signature:(QWidget *parent = 0)
CircuitListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^class CircuitListWidget : public QTreeWidget$/;"	c	inherits:QTreeWidget
CircuitListWidget::CircuitListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::CircuitListWidget(QWidget *parent)$/;"	f	class:CircuitListWidget	signature:(QWidget *parent)
CircuitListWidget::CircuitListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  CircuitListWidget(QWidget *parent = 0);$/;"	p	class:CircuitListWidget	access:public	signature:(QWidget *parent = 0)
CircuitListWidget::Columns	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  enum Columns {$/;"	g	class:CircuitListWidget	access:public
CircuitListWidget::ConnectionColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^    ConnectionColumn = 0, \/**< Column for either the circuit or stream *\/$/;"	e	enum:CircuitListWidget::Columns
CircuitListWidget::StatusColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^    StatusColumn = 1      \/**< Status of the connection. *\/$/;"	e	enum:CircuitListWidget::Columns
CircuitListWidget::_circuitRemovalList	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<CircuitItem *> _circuitRemovalList;$/;"	m	class:CircuitListWidget	access:private
CircuitListWidget::_streamRemovalList	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<StreamItem *> _streamRemovalList;$/;"	m	class:CircuitListWidget	access:private
CircuitListWidget::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::addCircuit(const Circuit &circuit)$/;"	f	class:CircuitListWidget	signature:(const Circuit &circuit)
CircuitListWidget::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void addCircuit(const Circuit &circuit);$/;"	p	class:CircuitListWidget	access:public	signature:(const Circuit &circuit)
CircuitListWidget::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::addStream(const Stream &stream)$/;"	f	class:CircuitListWidget	signature:(const Stream &stream)
CircuitListWidget::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void addStream(const Stream &stream);$/;"	p	class:CircuitListWidget	access:public	signature:(const Stream &stream)
CircuitListWidget::circuitRemoved	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void circuitRemoved(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
CircuitListWidget::circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void circuitSelected(Circuit circuit);$/;"	p	class:CircuitListWidget	access:public	signature:(Circuit circuit)
CircuitListWidget::circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::circuits()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<Circuit> circuits();$/;"	p	class:CircuitListWidget	access:public	signature:()
CircuitListWidget::clearCircuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::clearCircuits()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::clearCircuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void clearCircuits();$/;"	p	class:CircuitListWidget	access:public	signature:()
CircuitListWidget::closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeCircuit(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
CircuitListWidget::closeSelectedConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::closeSelectedConnections()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::closeSelectedConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeSelectedConnections();$/;"	p	class:CircuitListWidget	access:private	signature:()
CircuitListWidget::closeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeStream(StreamId streamid);$/;"	p	class:CircuitListWidget	access:public	signature:(StreamId streamid)
CircuitListWidget::customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::customContextMenuRequested(const QPoint &pos)$/;"	f	class:CircuitListWidget	signature:(const QPoint &pos)
CircuitListWidget::customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void customContextMenuRequested(const QPoint &pos);$/;"	p	class:CircuitListWidget	access:private	signature:(const QPoint &pos)
CircuitListWidget::findCircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::findCircuitItem(const CircuitId &circid)$/;"	f	class:CircuitListWidget	signature:(const CircuitId &circid)
CircuitListWidget::findCircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  CircuitItem* findCircuitItem(const CircuitId &circid);$/;"	p	class:CircuitListWidget	access:private	signature:(const CircuitId &circid)
CircuitListWidget::findStreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::findStreamItem(const StreamId &streamid)$/;"	f	class:CircuitListWidget	signature:(const StreamId &streamid)
CircuitListWidget::findStreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  StreamItem* findStreamItem(const StreamId &streamid);$/;"	p	class:CircuitListWidget	access:private	signature:(const StreamId &streamid)
CircuitListWidget::onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::onSelectionChanged(QTreeWidgetItem *cur,$/;"	f	class:CircuitListWidget	signature:(QTreeWidgetItem *cur, QTreeWidgetItem *prev)
CircuitListWidget::onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void onSelectionChanged(QTreeWidgetItem *cur, QTreeWidgetItem *prev);$/;"	p	class:CircuitListWidget	access:private	signature:(QTreeWidgetItem *cur, QTreeWidgetItem *prev)
CircuitListWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeCircuit()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeCircuit(CircuitItem *circuit)$/;"	f	class:CircuitListWidget	signature:(CircuitItem *circuit)
CircuitListWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeCircuit();$/;"	p	class:CircuitListWidget	access:private	signature:()
CircuitListWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeCircuit(CircuitItem *circuit);$/;"	p	class:CircuitListWidget	access:private	signature:(CircuitItem *circuit)
CircuitListWidget::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeStream()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeStream(StreamItem *stream)$/;"	f	class:CircuitListWidget	signature:(StreamItem *stream)
CircuitListWidget::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeStream();$/;"	p	class:CircuitListWidget	access:private	signature:()
CircuitListWidget::removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeStream(StreamItem *stream);$/;"	p	class:CircuitListWidget	access:private	signature:(StreamItem *stream)
CircuitListWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::retranslateUi()$/;"	f	class:CircuitListWidget	signature:()
CircuitListWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void retranslateUi();$/;"	p	class:CircuitListWidget	access:public	signature:()
CircuitListWidget::scheduleCircuitRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::scheduleCircuitRemoval(CircuitItem *circuit, int delay)$/;"	f	class:CircuitListWidget	signature:(CircuitItem *circuit, int delay)
CircuitListWidget::scheduleCircuitRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void scheduleCircuitRemoval(CircuitItem *circuit, int delay);$/;"	p	class:CircuitListWidget	access:private	signature:(CircuitItem *circuit, int delay)
CircuitListWidget::scheduleStreamRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::scheduleStreamRemoval(StreamItem *stream, int delay)$/;"	f	class:CircuitListWidget	signature:(StreamItem *stream, int delay)
CircuitListWidget::scheduleStreamRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void scheduleStreamRemoval(StreamItem *stream, int delay);$/;"	p	class:CircuitListWidget	access:private	signature:(StreamItem *stream, int delay)
CircuitListWidget::zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void zoomToCircuit(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
CircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    CircuitStatus = (1u << 6),$/;"	e	enum:TorEvents::Event
CityDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    CityDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
ClearNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^ClearNameValueList(struct NameValueParserData * pdata)$/;"	f	signature:(struct NameValueParserData * pdata)
ClearNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^ClearNameValueList(struct NameValueParserData * pdata);$/;"	p	signature:(struct NameValueParserData * pdata)
ClientStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    ClientStatus  = (1u << 12),$/;"	e	enum:TorEvents::Event
CloseServiceHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  CloseServiceHandle_fn    CloseServiceHandle;$/;"	m	struct:ServiceFunctions	access:public
CloseServiceHandle_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *CloseServiceHandle_fn)($/;"	t
Closed	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Closed     \/**< Circuit closed (was built) *\/$/;"	e	enum:Circuit::Status
Closed	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Closed,       \/**< Stream closed *\/$/;"	e	enum:Stream::Status
Columns	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  enum Columns {$/;"	g	class:CircuitListWidget	access:public
Columns	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  enum Columns {$/;"	g	class:RouterListWidget	access:public
CommaList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    CommaList,$/;"	e	enum:TorOpt::OptType
CompressionMethod	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  enum CompressionMethod {$/;"	g	class:ZlibByteArray	access:public
ConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::ConfigDialog(QWidget* parent)$/;"	f	class:ConfigDialog	signature:(QWidget* parent)
ConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  ConfigDialog(QWidget *parent = 0);$/;"	p	class:ConfigDialog	access:public	signature:(QWidget *parent = 0)
ConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^class ConfigDialog : public VidaliaWindow$/;"	c	inherits:VidaliaWindow
ConfigDialog::Advanced	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Advanced      \/** Advanced configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::Appearance	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Appearance,   \/** Appearance configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::ConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::ConfigDialog(QWidget* parent)$/;"	f	class:ConfigDialog	signature:(QWidget* parent)
ConfigDialog::ConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  ConfigDialog(QWidget *parent = 0);$/;"	p	class:ConfigDialog	access:public	signature:(QWidget *parent = 0)
ConfigDialog::General	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    General = 0,  \/** General configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::Network	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Network,      \/** Network configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::Page	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  enum Page {$/;"	g	class:ConfigDialog	access:public
ConfigDialog::Server	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Server,       \/** Server configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::Service	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Service,      \/** Service Configuration page *\/$/;"	e	enum:ConfigDialog::Page
ConfigDialog::addAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::addAction(QAction *action, const char *slot)$/;"	f	class:ConfigDialog	signature:(QAction *action, const char *slot)
ConfigDialog::addAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void addAction(QAction *action, const char *slot = 0);$/;"	p	class:ConfigDialog	access:private	signature:(QAction *action, const char *slot = 0)
ConfigDialog::applyChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::applyChanges()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::applyChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void applyChanges();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void checkForUpdates();$/;"	p	class:ConfigDialog	access:public	signature:()
ConfigDialog::configChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void configChanged();$/;"	p	class:ConfigDialog	access:public	signature:()
ConfigDialog::createPageAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::createPageAction(const QIcon &img, const QString &text,$/;"	f	class:ConfigDialog	signature:(const QIcon &img, const QString &text, const QString &data, QActionGroup *group)
ConfigDialog::createPageAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  QAction* createPageAction(const QIcon &img, const QString &text,$/;"	p	class:ConfigDialog	access:private	signature:(const QIcon &img, const QString &text, const QString &data, QActionGroup *group)
ConfigDialog::help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::help()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::help(const QString &topic)$/;"	f	class:ConfigDialog	signature:(const QString &topic)
ConfigDialog::help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void help();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void help(const QString &topic);$/;"	p	class:ConfigDialog	access:private	signature:(const QString &topic)
ConfigDialog::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::loadSettings()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void loadSettings();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::onCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::onCheckForUpdates()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::onCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void onCheckForUpdates();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::restartTor	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void restartTor();$/;"	p	class:ConfigDialog	access:public	signature:()
ConfigDialog::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::retranslateUi()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  virtual void retranslateUi();$/;"	p	class:ConfigDialog	access:protected	signature:()
ConfigDialog::saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::saveChanges()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void saveChanges();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::saveConf	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::saveConf()$/;"	f	class:ConfigDialog	signature:()
ConfigDialog::saveConf	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void saveConf();$/;"	p	class:ConfigDialog	access:private	signature:()
ConfigDialog::showWindow	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::showWindow(Page page)$/;"	f	class:ConfigDialog	signature:(Page page)
ConfigDialog::showWindow	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void showWindow(Page page = General);$/;"	p	class:ConfigDialog	access:public	signature:(Page page = General)
ConfigDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  Ui::ConfigDialog ui;$/;"	m	class:ConfigDialog	access:private
ConfigGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  enum ConfigGroup {$/;"	g	class:AdvancedPage	access:public
ConfigPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  ConfigPage(QWidget *parent = 0, const QString title = QString())$/;"	f	class:ConfigPage	access:public	signature:(QWidget *parent = 0, const QString title = QString())
ConfigPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^class ConfigPage : public QWidget$/;"	c	inherits:QWidget
ConfigPage::ConfigPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  ConfigPage(QWidget *parent = 0, const QString title = QString())$/;"	f	class:ConfigPage	access:public	signature:(QWidget *parent = 0, const QString title = QString())
ConfigPage::_title	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  QString _title; \/**< Title of this configuration page. *\/$/;"	m	class:ConfigPage	access:private
ConfigPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool apply(QString &errmsg) {$/;"	f	class:ConfigPage	access:public	signature:(QString &errmsg)
ConfigPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool changedSinceLastApply() {$/;"	f	class:ConfigPage	access:public	signature:()
ConfigPage::configChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void configChanged();$/;"	p	class:ConfigPage	access:public	signature:()
ConfigPage::helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void helpRequested(const QString &topic);$/;"	p	class:ConfigPage	access:public	signature:(const QString &topic)
ConfigPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void load() = 0;$/;"	p	class:ConfigPage	access:public	signature:()
ConfigPage::reloadAll	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void reloadAll();$/;"	p	class:ConfigPage	access:public	signature:()
ConfigPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void retranslateUi() {}$/;"	f	class:ConfigPage	access:public	signature:()
ConfigPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void revert() {}$/;"	f	class:ConfigPage	access:public	signature:()
ConfigPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool save(QString &errmsg) = 0;$/;"	p	class:ConfigPage	access:public	signature:(QString &errmsg)
ConfigPage::title	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  QString title() const { return _title; }$/;"	f	class:ConfigPage	access:public	signature:() const
ConfigPageStack	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::ConfigPageStack(QWidget *parent)$/;"	f	class:ConfigPageStack	signature:(QWidget *parent)
ConfigPageStack	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  ConfigPageStack(QWidget *parent = 0);$/;"	p	class:ConfigPageStack	access:public	signature:(QWidget *parent = 0)
ConfigPageStack	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^class ConfigPageStack : public QStackedWidget$/;"	c	inherits:QStackedWidget
ConfigPageStack::ConfigPageStack	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::ConfigPageStack(QWidget *parent)$/;"	f	class:ConfigPageStack	signature:(QWidget *parent)
ConfigPageStack::ConfigPageStack	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  ConfigPageStack(QWidget *parent = 0);$/;"	p	class:ConfigPageStack	access:public	signature:(QWidget *parent = 0)
ConfigPageStack::_pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  QHash<QAction*, ConfigPage*> _pages;$/;"	m	class:ConfigPageStack	access:private
ConfigPageStack::add	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::add(ConfigPage *page, QAction *action)$/;"	f	class:ConfigPageStack	signature:(ConfigPage *page, QAction *action)
ConfigPageStack::add	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void add(ConfigPage *page, QAction *action);$/;"	p	class:ConfigPageStack	access:public	signature:(ConfigPage *page, QAction *action)
ConfigPageStack::pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::pages() const$/;"	f	class:ConfigPageStack	signature:() const
ConfigPageStack::pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  QList<ConfigPage *> pages() const;$/;"	p	class:ConfigPageStack	access:public	signature:() const
ConfigPageStack::setCurrentIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::setCurrentIndex(int index)$/;"	f	class:ConfigPageStack	signature:(int index)
ConfigPageStack::setCurrentIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void setCurrentIndex(int index);$/;"	p	class:ConfigPageStack	access:public	signature:(int index)
ConfigPageStack::setCurrentPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::setCurrentPage(ConfigPage *page)$/;"	f	class:ConfigPageStack	signature:(ConfigPage *page)
ConfigPageStack::setCurrentPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void setCurrentPage(ConfigPage *page);$/;"	p	class:ConfigPageStack	access:public	signature:(ConfigPage *page)
ConfigPageStack::showPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::showPage(QAction *pageAction)$/;"	f	class:ConfigPageStack	signature:(QAction *pageAction)
ConfigPageStack::showPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void showPage(QAction *pageAction);$/;"	p	class:ConfigPageStack	access:public	signature:(QAction *pageAction)
ConfigurationFile	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    ConfigurationFile,$/;"	e	enum:AdvancedPage::ConfigGroup
Connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Connected      \/**< Control connection established.      *\/$/;"	e	enum:ControlConnection::Status
Connecting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Connecting,    \/**< Control connection attempt pending.  *\/$/;"	e	enum:ControlConnection::Status
ConnectingToDirMirror	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    ConnectingToDirMirror,$/;"	e	enum:BootstrapStatus::Status
ConnectingToEntryGuard	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    ConnectingToEntryGuard,$/;"	e	enum:BootstrapStatus::Status
ConnectionColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^    ConnectionColumn = 0, \/**< Column for either the circuit or stream *\/$/;"	e	enum:CircuitListWidget::Columns
ConnectionDone	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionDone,$/;"	e	enum:tc::ConnectionStatusReason
ConnectionIoError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionIoError,$/;"	e	enum:tc::ConnectionStatusReason
ConnectionRefused	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionRefused,$/;"	e	enum:tc::ConnectionStatusReason
ConnectionReset	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionReset,$/;"	e	enum:tc::ConnectionStatusReason
ConnectionStatusReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum ConnectionStatusReason {$/;"	g	namespace:tc
ConnectionTimeout	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionTimeout,$/;"	e	enum:tc::ConnectionStatusReason
Continue	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Continue,$/;"	e	enum:VMessageBox::Button
Control	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    Control,$/;"	e	enum:AdvancedPage::ConfigGroup
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand()$/;"	f	class:ControlCommand	signature:()
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword)$/;"	f	class:ControlCommand	signature:(const QString &keyword)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword, const QString &arg)$/;"	f	class:ControlCommand	signature:(const QString &keyword, const QString &arg)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword, const QStringList &args)$/;"	f	class:ControlCommand	signature:(const QString &keyword, const QStringList &args)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand();$/;"	p	class:ControlCommand	access:public	signature:()
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword, const QString &arg);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword, const QString &arg)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword, const QStringList &args);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword, const QStringList &args)
ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^class ControlCommand$/;"	c
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand()$/;"	f	class:ControlCommand	signature:()
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword)$/;"	f	class:ControlCommand	signature:(const QString &keyword)
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword, const QString &arg)$/;"	f	class:ControlCommand	signature:(const QString &keyword, const QString &arg)
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::ControlCommand(const QString &keyword, const QStringList &args)$/;"	f	class:ControlCommand	signature:(const QString &keyword, const QStringList &args)
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand();$/;"	p	class:ControlCommand	access:public	signature:()
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword)
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword, const QString &arg);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword, const QString &arg)
ControlCommand::ControlCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  ControlCommand(const QString &keyword, const QStringList &args);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword, const QStringList &args)
ControlCommand::_arguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QStringList _arguments;$/;"	m	class:ControlCommand	access:private
ControlCommand::_data	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QStringList _data;$/;"	m	class:ControlCommand	access:private
ControlCommand::_keyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString _keyword;$/;"	m	class:ControlCommand	access:private
ControlCommand::addArgument	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::addArgument(const QString &arg)$/;"	f	class:ControlCommand	signature:(const QString &arg)
ControlCommand::addArgument	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void addArgument(const QString &arg);$/;"	p	class:ControlCommand	access:public	signature:(const QString &arg)
ControlCommand::addArguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::addArguments(const QStringList &args)$/;"	f	class:ControlCommand	signature:(const QStringList &args)
ControlCommand::addArguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void addArguments(const QStringList &args);$/;"	p	class:ControlCommand	access:public	signature:(const QStringList &args)
ControlCommand::appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::appendData(const QString &data)$/;"	f	class:ControlCommand	signature:(const QString &data)
ControlCommand::appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void appendData(const QString &data);$/;"	p	class:ControlCommand	access:public	signature:(const QString &data)
ControlCommand::escape	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::escape(const QString &unescaped) const$/;"	f	class:ControlCommand	signature:(const QString &unescaped) const
ControlCommand::escape	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString escape(const QString &str) const;$/;"	p	class:ControlCommand	access:private	signature:(const QString &str) const
ControlCommand::keyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString keyword() const { return _keyword; }$/;"	f	class:ControlCommand	access:public	signature:() const
ControlCommand::setKeyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::setKeyword(const QString &keyword)$/;"	f	class:ControlCommand	signature:(const QString &keyword)
ControlCommand::setKeyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void setKeyword(const QString &keyword);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword)
ControlCommand::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::toString() const$/;"	f	class:ControlCommand	signature:() const
ControlCommand::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString toString() const;$/;"	p	class:ControlCommand	access:public	signature:() const
ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ControlConnection(ControlMethod::Method method, TorEvents *events)$/;"	f	class:ControlConnection	signature:(ControlMethod::Method method, TorEvents *events)
ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlConnection(ControlMethod::Method method, TorEvents *events = 0);$/;"	p	class:ControlConnection	access:public	signature:(ControlMethod::Method method, TorEvents *events = 0)
ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^class ControlConnection : public QObject$/;"	c	inherits:QObject
ControlConnection::Connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Connected      \/**< Control connection established.      *\/$/;"	e	enum:ControlConnection::Status
ControlConnection::Connecting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Connecting,    \/**< Control connection attempt pending.  *\/$/;"	e	enum:ControlConnection::Status
ControlConnection::ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ControlConnection(ControlMethod::Method method, TorEvents *events)$/;"	f	class:ControlConnection	signature:(ControlMethod::Method method, TorEvents *events)
ControlConnection::ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlConnection(ControlMethod::Method method, TorEvents *events = 0);$/;"	p	class:ControlConnection	access:public	signature:(ControlMethod::Method method, TorEvents *events = 0)
ControlConnection::Disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Disconnected,  \/**< Control connection disconnected.     *\/$/;"	e	enum:ControlConnection::Status
ControlConnection::Disconnecting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Disconnecting, \/**< Control connection is disconnecting. *\/$/;"	e	enum:ControlConnection::Status
ControlConnection::ReceiveWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  class ReceiveWaiter {$/;"	c	class:ControlConnection	access:private
ControlConnection::ReceiveWaiter::Failed	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
ControlConnection::ReceiveWaiter::ReceiveStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	g	class:ControlConnection::ReceiveWaiter	access:private
ControlConnection::ReceiveWaiter::ReceiveWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      ReceiveWaiter() { _status = Waiting; }$/;"	f	class:ControlConnection::ReceiveWaiter	access:public	signature:()
ControlConnection::ReceiveWaiter::Success	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
ControlConnection::ReceiveWaiter::Waiting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
ControlConnection::ReceiveWaiter::_errmsg	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QString _errmsg; \/**< Error message if the reply fails. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
ControlConnection::ReceiveWaiter::_mutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QMutex _mutex; \/**< Mutex around the wait condition. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
ControlConnection::ReceiveWaiter::_reply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      ControlReply _reply; \/**< Reply to a previous command. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
ControlConnection::ReceiveWaiter::_status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	m	class:ControlConnection::ReceiveWaiter	typeref:enum:ControlConnection::ReceiveWaiter::ReceiveStatus	access:private
ControlConnection::ReceiveWaiter::_waitCond	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QWaitCondition _waitCond; \/**< Waits for a control rpely. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
ControlConnection::ReceiveWaiter::getResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ReceiveWaiter::getResult(ControlReply *reply,$/;"	f	class:ControlConnection::ReceiveWaiter	signature:(ControlReply *reply, QString *errmsg)
ControlConnection::ReceiveWaiter::getResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      bool getResult(ControlReply *reply, QString *errmsg = 0);$/;"	p	class:ControlConnection::ReceiveWaiter	access:public	signature:(ControlReply *reply, QString *errmsg = 0)
ControlConnection::ReceiveWaiter::setResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ReceiveWaiter::setResult(bool success,$/;"	f	class:ControlConnection::ReceiveWaiter	signature:(bool success, const ControlReply &reply, const QString &errmsg)
ControlConnection::ReceiveWaiter::setResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      void setResult(bool success, const ControlReply &reply,$/;"	p	class:ControlConnection::ReceiveWaiter	access:public	signature:(bool success, const ControlReply &reply, const QString &errmsg = QString())
ControlConnection::Status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  enum Status {$/;"	g	class:ControlConnection	access:public
ControlConnection::Unset	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Unset,         \/**< Control connection status is not yet set. *\/$/;"	e	enum:ControlConnection::Status
ControlConnection::_addr	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QHostAddress _addr; \/**< Address of Tor's control interface. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_connMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _connMutex; \/**< Mutex around the control socket. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_connectAttempt	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  int _connectAttempt; \/**< How many times we've tried to connect to Tor while$/;"	m	class:ControlConnection	access:private
ControlConnection::_connectTimer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QTimer* _connectTimer; \/**< Timer used to delay connect attempts. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool _connected;$/;"	m	class:ControlConnection	access:private
ControlConnection::_events	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  TorEvents* _events; \/**< Dispatches asynchronous events from Tor. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlMethod::Method _method; \/** Method used to communicate with Tor. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_path	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QString _path; \/**< Path to the socket *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_port	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  quint16 _port; \/**< Port of Tor's control interface. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_recvMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _recvMutex; \/**< Mutex around the queue of ReceiveWaiters. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_recvQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QQueue<ReceiveWaiter *> _recvQueue; \/**< Objects waiting for a reply. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_sendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  SendCommandEvent::SendWaiter* _sendWaiter;$/;"	m	class:ControlConnection	access:private
ControlConnection::_sock	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlSocket* _sock; \/**< Socket used to communicate with Tor. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  Status _status; \/**< Status of the control connection. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::_statusMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _statusMutex; \/**< Mutex around the connection status value. *\/$/;"	m	class:ControlConnection	access:private
ControlConnection::cancelConnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::cancelConnect()$/;"	f	class:ControlConnection	signature:()
ControlConnection::cancelConnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void cancelConnect();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::clearCommandQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::clearCommandQueue()$/;"	f	class:ControlConnection	signature:()
ControlConnection::clearCommandQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void clearCommandQueue();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect()$/;"	f	class:ControlConnection	signature:()
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect(const QHostAddress &addr, quint16 port)$/;"	f	class:ControlConnection	signature:(const QHostAddress &addr, quint16 port)
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect(const QString &addr)$/;"	f	class:ControlConnection	signature:(const QString &addr)
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect(const QHostAddress &addr, quint16 port);$/;"	p	class:ControlConnection	access:public	signature:(const QHostAddress &addr, quint16 port)
ControlConnection::connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect(const QString &addr);$/;"	p	class:ControlConnection	access:public	signature:(const QString &addr)
ControlConnection::connectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connectFailed(QString errmsg);$/;"	p	class:ControlConnection	access:public	signature:(QString errmsg)
ControlConnection::connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connected();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::disconnect()$/;"	f	class:ControlConnection	signature:()
ControlConnection::disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void disconnect();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void disconnected();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::isConnected()$/;"	f	class:ControlConnection	signature:()
ControlConnection::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool isConnected();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::onConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onConnected()$/;"	f	class:ControlConnection	signature:()
ControlConnection::onConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onConnected();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onDisconnected()$/;"	f	class:ControlConnection	signature:()
ControlConnection::onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onDisconnected();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::onError	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onError(QAbstractSocket::SocketError error)$/;"	f	class:ControlConnection	signature:(QAbstractSocket::SocketError error)
ControlConnection::onError	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onError(QAbstractSocket::SocketError error);$/;"	p	class:ControlConnection	access:private	signature:(QAbstractSocket::SocketError error)
ControlConnection::onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onReadyRead()$/;"	f	class:ControlConnection	signature:()
ControlConnection::onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onReadyRead();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::run	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::run()$/;"	f	class:ControlConnection	signature:()
ControlConnection::run	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void run();$/;"	p	class:ControlConnection	access:private	signature:()
ControlConnection::send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::send(const ControlCommand &cmd, QString *errmsg)$/;"	f	class:ControlConnection	signature:(const ControlCommand &cmd, QString *errmsg)
ControlConnection::send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::send(const ControlCommand &cmd,$/;"	f	class:ControlConnection	signature:(const ControlCommand &cmd, ControlReply &reply, QString *errmsg)
ControlConnection::send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool send(const ControlCommand &cmd, ControlReply &reply, QString *errmsg = 0);$/;"	p	class:ControlConnection	access:public	signature:(const ControlCommand &cmd, ControlReply &reply, QString *errmsg = 0)
ControlConnection::send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool send(const ControlCommand &cmd, QString *errmsg = 0);$/;"	p	class:ControlConnection	access:public	signature:(const ControlCommand &cmd, QString *errmsg = 0)
ControlConnection::setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::setStatus(Status status)$/;"	f	class:ControlConnection	signature:(Status status)
ControlConnection::setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void setStatus(Status status);$/;"	p	class:ControlConnection	access:private	signature:(Status status)
ControlConnection::status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::status()$/;"	f	class:ControlConnection	signature:()
ControlConnection::status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  Status status();$/;"	p	class:ControlConnection	access:public	signature:()
ControlConnection::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::statusString(Status status)$/;"	f	class:ControlConnection	signature:(Status status)
ControlConnection::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QString statusString(Status status);$/;"	p	class:ControlConnection	access:private	signature:(Status status)
ControlConnection::~ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::~ControlConnection()$/;"	f	class:ControlConnection	signature:()
ControlConnection::~ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ~ControlConnection();$/;"	p	class:ControlConnection	access:public	signature:()
ControlMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^class ControlMethod$/;"	c
ControlMethod::Method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	g	class:ControlMethod	access:public
ControlMethod::Port	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	e	enum:ControlMethod::Method
ControlMethod::Socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	e	enum:ControlMethod::Method
ControlMethod::fromString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.cpp	/^ControlMethod::fromString(QString method)$/;"	f	class:ControlMethod	signature:(QString method)
ControlMethod::fromString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    static Method fromString(QString method);$/;"	p	class:ControlMethod	access:public	signature:(QString method)
ControlMethod::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.cpp	/^ControlMethod::toString(ControlMethod::Method method)$/;"	f	class:ControlMethod	signature:(ControlMethod::Method method)
ControlMethod::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    static QString toString(ControlMethod::Method method);$/;"	p	class:ControlMethod	access:public	signature:(ControlMethod::Method method)
ControlPasswordInputDialog	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::ControlPasswordInputDialog(QWidget *parent)$/;"	f	class:ControlPasswordInputDialog	signature:(QWidget *parent)
ControlPasswordInputDialog	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  ControlPasswordInputDialog(QWidget *parent = 0);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(QWidget *parent = 0)
ControlPasswordInputDialog	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^class ControlPasswordInputDialog : public QDialog$/;"	c	inherits:QDialog
ControlPasswordInputDialog::ControlPasswordInputDialog	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::ControlPasswordInputDialog(QWidget *parent)$/;"	f	class:ControlPasswordInputDialog	signature:(QWidget *parent)
ControlPasswordInputDialog::ControlPasswordInputDialog	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  ControlPasswordInputDialog(QWidget *parent = 0);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(QWidget *parent = 0)
ControlPasswordInputDialog::clicked	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::clicked(QAbstractButton *button)$/;"	f	class:ControlPasswordInputDialog	signature:(QAbstractButton *button)
ControlPasswordInputDialog::clicked	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void clicked(QAbstractButton *button);$/;"	p	class:ControlPasswordInputDialog	access:protected	signature:(QAbstractButton *button)
ControlPasswordInputDialog::helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void helpRequested(const QString &topic);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(const QString &topic)
ControlPasswordInputDialog::setResetEnabled	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::setResetEnabled(bool enabled)$/;"	f	class:ControlPasswordInputDialog	signature:(bool enabled)
ControlPasswordInputDialog::setResetEnabled	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void setResetEnabled(bool enabled);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(bool enabled)
ControlPasswordInputDialog::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::setVisible(bool visible)$/;"	f	class:ControlPasswordInputDialog	signature:(bool visible)
ControlPasswordInputDialog::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  virtual void setVisible(bool visible);$/;"	p	class:ControlPasswordInputDialog	access:protected	signature:(bool visible)
ControlPasswordInputDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^    Ui::ControlPasswordInputDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:ControlPasswordInputDialog	access:private
ControlReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::ControlReply()$/;"	f	class:ControlReply	signature:()
ControlReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  ControlReply();$/;"	p	class:ControlReply	access:public	signature:()
ControlReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^class ControlReply$/;"	c
ControlReply::ControlReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::ControlReply()$/;"	f	class:ControlReply	signature:()
ControlReply::ControlReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  ControlReply();$/;"	p	class:ControlReply	access:public	signature:()
ControlReply::_lines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QList<ReplyLine> _lines;$/;"	m	class:ControlReply	access:private
ControlReply::appendLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::appendLine(ReplyLine line)$/;"	f	class:ControlReply	signature:(ReplyLine line)
ControlReply::appendLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  void appendLine(ReplyLine line);$/;"	p	class:ControlReply	access:public	signature:(ReplyLine line)
ControlReply::getData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getData() const$/;"	f	class:ControlReply	signature:() const
ControlReply::getData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QStringList getData() const;$/;"	p	class:ControlReply	access:public	signature:() const
ControlReply::getLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getLine(int idx) const$/;"	f	class:ControlReply	signature:(int idx) const
ControlReply::getLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  ReplyLine getLine(int idx = 0) const;$/;"	p	class:ControlReply	access:public	signature:(int idx = 0) const
ControlReply::getLines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getLines() const$/;"	f	class:ControlReply	signature:() const
ControlReply::getLines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QList<ReplyLine> getLines() const;$/;"	p	class:ControlReply	access:public	signature:() const
ControlReply::getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getMessage() const$/;"	f	class:ControlReply	signature:() const
ControlReply::getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString getMessage() const;$/;"	p	class:ControlReply	access:public	signature:() const
ControlReply::getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getStatus() const$/;"	f	class:ControlReply	signature:() const
ControlReply::getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString getStatus() const;$/;"	p	class:ControlReply	access:public	signature:() const
ControlReply::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::toString() const$/;"	f	class:ControlReply	signature:() const
ControlReply::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString toString() const;$/;"	p	class:ControlReply	access:public	signature:() const
ControlService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ControlService_fn        ControlService;$/;"	m	struct:ServiceFunctions	access:public
ControlService_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *ControlService_fn)($/;"	t
ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::ControlSocket(ControlMethod::Method method)$/;"	f	class:ControlSocket	signature:(ControlMethod::Method method)
ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ControlSocket(ControlMethod::Method method = ControlMethod::Port);$/;"	p	class:ControlSocket	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^class ControlSocket : public QObject$/;"	c	inherits:QObject
ControlSocket::ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::ControlSocket(ControlMethod::Method method)$/;"	f	class:ControlSocket	signature:(ControlMethod::Method method)
ControlSocket::ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ControlSocket(ControlMethod::Method method = ControlMethod::Port);$/;"	p	class:ControlSocket	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
ControlSocket::SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^class ControlSocket::SocketWrapper{$/;"	c	class:ControlSocket	file:
ControlSocket::SocketWrapper::SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  SocketWrapper(ControlMethod::Method method)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(ControlMethod::Method method)
ControlSocket::SocketWrapper::_localSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QLocalSocket *_localSocket; \/**< Socket used in the connection *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
ControlSocket::SocketWrapper::_method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ControlMethod::Method _method; \/**< Connection method. *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
ControlSocket::SocketWrapper::_tcpSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QTcpSocket *_tcpSocket; \/**< Socket used in the connection *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
ControlSocket::SocketWrapper::connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void connectToHost(const QHostAddress &address, quint16 port)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(const QHostAddress &address, quint16 port)
ControlSocket::SocketWrapper::connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void connectToServer(const QString &name)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(const QString &name)
ControlSocket::SocketWrapper::disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void disconnectFromHost()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
ControlSocket::SocketWrapper::disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void disconnectFromServer()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
ControlSocket::SocketWrapper::flush	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void flush()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
ControlSocket::SocketWrapper::getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ControlMethod::Method getMethod() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
ControlSocket::SocketWrapper::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  bool isConnected() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
ControlSocket::SocketWrapper::socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QIODevice * socket() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
ControlSocket::SocketWrapper::~SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ~SocketWrapper()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
ControlSocket::_sock	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  SocketWrapper * _sock;  \/**< Helper object to convenient use both sockets *\/$/;"	m	class:ControlSocket	access:private
ControlSocket::_socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  QIODevice *_socket; \/**< Abstract pointer to transparently use both sockets *\/$/;"	m	class:ControlSocket	access:private
ControlSocket::canReadLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::canReadLine() const$/;"	f	class:ControlSocket	signature:() const
ControlSocket::canReadLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool canReadLine() const;$/;"	p	class:ControlSocket	access:public	signature:() const
ControlSocket::connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::connectToHost(const QHostAddress &address, quint16 port)$/;"	f	class:ControlSocket	signature:(const QHostAddress &address, quint16 port)
ControlSocket::connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connectToHost(const QHostAddress &address, quint16 port);$/;"	p	class:ControlSocket	access:public	signature:(const QHostAddress &address, quint16 port)
ControlSocket::connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::connectToServer(const QString &name)$/;"	f	class:ControlSocket	signature:(const QString &name)
ControlSocket::connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connectToServer(const QString &name);$/;"	p	class:ControlSocket	access:public	signature:(const QString &name)
ControlSocket::connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connected();$/;"	p	class:ControlSocket	access:public	signature:()
ControlSocket::customEvent	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::customEvent(QEvent *event)$/;"	f	class:ControlSocket	signature:(QEvent *event)
ControlSocket::customEvent	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void customEvent(QEvent *event);$/;"	p	class:ControlSocket	access:protected	signature:(QEvent *event)
ControlSocket::disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::disconnectFromHost()$/;"	f	class:ControlSocket	signature:()
ControlSocket::disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnectFromHost();$/;"	p	class:ControlSocket	access:public	signature:()
ControlSocket::disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::disconnectFromServer()$/;"	f	class:ControlSocket	signature:()
ControlSocket::disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnectFromServer();$/;"	p	class:ControlSocket	access:public	signature:()
ControlSocket::disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnected();$/;"	p	class:ControlSocket	access:public	signature:()
ControlSocket::error	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void error(QAbstractSocket::SocketError);$/;"	p	class:ControlSocket	access:public	signature:(QAbstractSocket::SocketError)
ControlSocket::getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::getMethod() const$/;"	f	class:ControlSocket	signature:() const
ControlSocket::getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ControlMethod::Method getMethod() const;$/;"	p	class:ControlSocket	access:public	signature:() const
ControlSocket::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::isConnected() const$/;"	f	class:ControlSocket	signature:() const
ControlSocket::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool isConnected() const;$/;"	p	class:ControlSocket	access:public	signature:() const
ControlSocket::readLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readLine(QString &line, QString *errmsg)$/;"	f	class:ControlSocket	signature:(QString &line, QString *errmsg)
ControlSocket::readLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readLine(QString &line, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:protected	signature:(QString &line, QString *errmsg = 0)
ControlSocket::readLineData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readLineData(QString &line, QString *errmsg)$/;"	f	class:ControlSocket	signature:(QString &line, QString *errmsg)
ControlSocket::readLineData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readLineData(QString &line, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:protected	signature:(QString &line, QString *errmsg = 0)
ControlSocket::readReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readReply(ControlReply &reply, QString *errmsg)$/;"	f	class:ControlSocket	signature:(ControlReply &reply, QString *errmsg)
ControlSocket::readReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readReply(ControlReply &reply, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:public	signature:(ControlReply &reply, QString *errmsg = 0)
ControlSocket::readyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void readyRead();$/;"	p	class:ControlSocket	access:public	signature:()
ControlSocket::sendCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::sendCommand(ControlCommand cmd, QString *errmsg)$/;"	f	class:ControlSocket	signature:(ControlCommand cmd, QString *errmsg)
ControlSocket::sendCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool sendCommand(ControlCommand cmd, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:public	signature:(ControlCommand cmd, QString *errmsg = 0)
ControlSocket::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::toString(const QAbstractSocket::SocketError error)$/;"	f	class:ControlSocket	signature:(const QAbstractSocket::SocketError error)
ControlSocket::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  static QString toString(const QAbstractSocket::SocketError error);$/;"	p	class:ControlSocket	access:public	signature:(const QAbstractSocket::SocketError error)
ControlSocket::~ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::~ControlSocket()$/;"	f	class:ControlSocket	signature:()
ControlSocket::~ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ~ControlSocket();$/;"	p	class:ControlSocket	access:public	signature:()
Controller	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Controller$/;"	e	enum:Circuit::Purpose
CookieAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    CookieAuth,    \/**< Use a "magic" cookie for authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
CountryColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    CountryColumn = 1,  \/**< Router's country flag. *\/$/;"	e	enum:RouterListWidget::Columns
CountryDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    CountryDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
CountryInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::CountryInfo(QObject *parent)$/;"	f	class:CountryInfo	signature:(QObject *parent)
CountryInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  CountryInfo(QObject *parent = 0);$/;"	p	class:CountryInfo	access:public	signature:(QObject *parent = 0)
CountryInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^class CountryInfo : public QObject$/;"	c	inherits:QObject
CountryInfo::CountryInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::CountryInfo(QObject *parent)$/;"	f	class:CountryInfo	signature:(QObject *parent)
CountryInfo::CountryInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  CountryInfo(QObject *parent = 0);$/;"	p	class:CountryInfo	access:public	signature:(QObject *parent = 0)
CountryInfo::countryLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::countryLocation(const QString &countryCode)$/;"	f	class:CountryInfo	signature:(const QString &countryCode)
CountryInfo::countryLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  static QPair<float,float> countryLocation(const QString &countryCode);$/;"	p	class:CountryInfo	access:public	signature:(const QString &countryCode)
CountryInfo::countryName	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::countryName(const QString &countryCode)$/;"	f	class:CountryInfo	signature:(const QString &countryCode)
CountryInfo::countryName	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  static QString countryName(const QString &countryCode);$/;"	p	class:CountryInfo	access:public	signature:(const QString &countryCode)
CrashReportDialog	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::CrashReportDialog(QWidget *parent)$/;"	f	class:CrashReportDialog	signature:(QWidget *parent)
CrashReportDialog	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  CrashReportDialog(QWidget *parent = 0);$/;"	p	class:CrashReportDialog	access:public	signature:(QWidget *parent = 0)
CrashReportDialog	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^class CrashReportDialog : public QDialog$/;"	c	inherits:QDialog
CrashReportDialog::CrashReportDialog	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::CrashReportDialog(QWidget *parent)$/;"	f	class:CrashReportDialog	signature:(QWidget *parent)
CrashReportDialog::CrashReportDialog	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  CrashReportDialog(QWidget *parent = 0);$/;"	p	class:CrashReportDialog	access:public	signature:(QWidget *parent = 0)
CrashReportDialog::_annotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QHash<QString,QString> _annotations;$/;"	m	class:CrashReportDialog	access:private
CrashReportDialog::_annotationsPath	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QString _annotationsPath;$/;"	m	class:CrashReportDialog	access:private
CrashReportDialog::_minidumpPath	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QString _minidumpPath;$/;"	m	class:CrashReportDialog	access:private
CrashReportDialog::accept	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::accept()$/;"	f	class:CrashReportDialog	signature:()
CrashReportDialog::accept	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  virtual void accept();$/;"	p	class:CrashReportDialog	access:public	signature:()
CrashReportDialog::setCrashAnnotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::setCrashAnnotations(const QHash<QString,QString> &annotations)$/;"	f	class:CrashReportDialog	signature:(const QHash<QString,QString> &annotations)
CrashReportDialog::setCrashAnnotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  void setCrashAnnotations(const QHash<QString,QString> &annotations);$/;"	p	class:CrashReportDialog	access:public	signature:(const QHash<QString,QString> &annotations)
CrashReportDialog::setMinidumpFiles	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::setMinidumpFiles(const QString &minidump, const QString &annotations)$/;"	f	class:CrashReportDialog	signature:(const QString &minidump, const QString &annotations)
CrashReportDialog::setMinidumpFiles	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  void setMinidumpFiles(const QString &minidump, const QString &annotations);$/;"	p	class:CrashReportDialog	access:public	signature:(const QString &minidump, const QString &annotations)
CrashReportDialog::ui	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  Ui::CrashReportDialog ui;$/;"	m	class:CrashReportDialog	access:private
CrashReporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^namespace CrashReporter$/;"	n	file:
CrashReporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^namespace CrashReporter$/;"	n
CrashReporter::MAX_CMD_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_CMD_LEN = 32768;$/;"	m	namespace:CrashReporter
CrashReporter::MAX_PATH_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_PATH_LEN = 260;$/;"	m	namespace:CrashReporter
CrashReporter::MAX_VERSION_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_VERSION_LEN = 64;$/;"	m	namespace:CrashReporter
CrashReporter::_char_t	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^typedef wchar_t         _char_t;$/;"	t	namespace:CrashReporter	file:
CrashReporter::_file_handle_t	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^typedef HANDLE          _file_handle_t;$/;"	t	namespace:CrashReporter	file:
CrashReporter::append_string	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^append_string(_char_t *dst, const _char_t *src, size_t siz)$/;"	f	namespace:CrashReporter	signature:(_char_t *dst, const _char_t *src, size_t siz)
CrashReporter::buildVersion	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char buildVersion[MAX_VERSION_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
CrashReporter::crashReporterExecutable	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static _char_t crashReporterExecutable[MAX_PATH_LEN + 1] = TEXT("");$/;"	m	namespace:CrashReporter	file:
CrashReporter::exceptionHandler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static google_breakpad::ExceptionHandler *exceptionHandler = 0;$/;"	m	namespace:CrashReporter	file:
CrashReporter::install_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^install_exception_handler(const QString &dumpPath)$/;"	f	namespace:CrashReporter	signature:(const QString &dumpPath)
CrashReporter::install_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool install_exception_handler(const QString &dumpPath);$/;"	p	namespace:CrashReporter	signature:(const QString &dumpPath)
CrashReporter::minidump_callback	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^minidump_callback(const _char_t *path,    \/\/ Path to the minidump file$/;"	f	namespace:CrashReporter	signature:(const _char_t *path, const _char_t *id, void *context, EXCEPTION_POINTERS *exInfo, MDRawAssertionInfo *assertionInfo, bool succeeded)
CrashReporter::remove_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^remove_exception_handler(void)$/;"	f	namespace:CrashReporter	signature:(void)
CrashReporter::remove_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  void remove_exception_handler(void);$/;"	p	namespace:CrashReporter	signature:(void)
CrashReporter::restartExecutable	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char restartExecutable[MAX_CMD_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
CrashReporter::restartExecutableArgs	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char restartExecutableArgs[MAX_CMD_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
CrashReporter::set_build_version	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_build_version(const QString &version)$/;"	f	namespace:CrashReporter	signature:(const QString &version)
CrashReporter::set_build_version	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_build_version(const QString &version);$/;"	p	namespace:CrashReporter	signature:(const QString &version)
CrashReporter::set_crash_reporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_crash_reporter(const QString &crashReporter)$/;"	f	namespace:CrashReporter	signature:(const QString &crashReporter)
CrashReporter::set_crash_reporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_crash_reporter(const QString &crashReporter);$/;"	p	namespace:CrashReporter	signature:(const QString &crashReporter)
CrashReporter::set_restart_options	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_restart_options(const QString &executable, const QStringList &arguments)$/;"	f	namespace:CrashReporter	signature:(const QString &executable, const QStringList &arguments)
CrashReporter::set_restart_options	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_restart_options(const QString &executable,$/;"	p	namespace:CrashReporter	signature:(const QString &executable, const QStringList &arguments)
CrashReporter::showCrashReporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static bool showCrashReporter = false;$/;"	m	namespace:CrashReporter	file:
CrashReporter::startupTime	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static time_t startupTime = 0;$/;"	m	namespace:CrashReporter	file:
CrashReporter::write_extra_dump_info	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^write_extra_dump_info(const _char_t *path, const _char_t *id, time_t crashTime)$/;"	f	namespace:CrashReporter	signature:(const _char_t *path, const _char_t *id, time_t crashTime)
CrashReporter::write_keyval_to_file	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^write_keyval_to_file(_file_handle_t hFile, const char *key, const char *val)$/;"	f	namespace:CrashReporter	signature:(_file_handle_t hFile, const char *key, const char *val)
CreateServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  CreateServiceA_fn        CreateServiceA;$/;"	m	struct:ServiceFunctions	access:public
CreateServiceA_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef SC_HANDLE (WINAPI *CreateServiceA_fn)($/;"	t
CreateToolhelp32Snapshot_fn	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^typedef HANDLE (WINAPI *CreateToolhelp32Snapshot_fn)(DWORD, DWORD);$/;"	t	file:
CreatingOneHopCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    CreatingOneHopCircuit,$/;"	e	enum:BootstrapStatus::Status
CustomBwLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CustomBwLimits   \/**< Custom bandwidth limits *\/$/;"	e	enum:ServerPage::BwRateIndex
D	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/vn.png	/^»c‚|&«JıÇB˜áFÔw:«6/;"	v
D	/Users/chiiph/Code/vidalia/src/vidalia/res/map/world-map.png	/^hÄÑêD;#ÑäΩBîhäã®	/;"	v
DATABASE	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^DATABASE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.$/;"	v
DATETIME_FMT	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define DATETIME_FMT /;"	d	file:
DATETIME_FMT	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^#define DATETIME_FMT /;"	d	file:
DATE_FMT	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^#define DATE_FMT /;"	d	file:
DATE_FMT	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^#define DATE_FMT /;"	d	file:
DEBUGDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^#define DEBUGDIALOG_H$/;"	d
DECODELENGTH	/Users/chiiph/Code/vidalia/src/miniupnpc/codelength.h	/^#define DECODELENGTH(/;"	d
DEFAULT_ALWAYS_ON_TOP	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define DEFAULT_ALWAYS_ON_TOP /;"	d	file:
DEFAULT_AUTH_METHOD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define DEFAULT_AUTH_METHOD /;"	d	file:
DEFAULT_CONTROL_METHOD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define DEFAULT_CONTROL_METHOD /;"	d	file:
DEFAULT_ENABLE_LOGFILE	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define DEFAULT_ENABLE_LOGFILE /;"	d	file:
DEFAULT_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define DEFAULT_FILTER /;"	d	file:
DEFAULT_FILTER_TERM	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define DEFAULT_FILTER_TERM /;"	d	file:
DEFAULT_LOGFILE	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define DEFAULT_LOGFILE /;"	d	file:
DEFAULT_MAX_MSG_COUNT	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^#define DEFAULT_MAX_MSG_COUNT /;"	d	file:
DEFAULT_MAX_MSG_COUNT	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define DEFAULT_MAX_MSG_COUNT /;"	d	file:
DEFAULT_MSG_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define DEFAULT_MSG_FILTER /;"	d	file:
DEFAULT_OPACITY	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define DEFAULT_OPACITY /;"	d	file:
DEFAULT_SOCKET_PATH	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define DEFAULT_SOCKET_PATH /;"	d	file:
DEFAULT_SPLITTER_MAIN	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define DEFAULT_SPLITTER_MAIN /;"	d	file:
DEFAULT_SPLITTER_MAP	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define DEFAULT_SPLITTER_MAP /;"	d	file:
DEFAULT_SPLITTER_ROUT	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define DEFAULT_SPLITTER_ROUT /;"	d	file:
DEFAULT_STYLE	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define DEFAULT_STYLE /;"	d	file:
DEF_TYPE0	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^#define DEF_TYPE0(/;"	d	file:
DEF_TYPE1	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^#define DEF_TYPE1(/;"	d	file:
DEF_TYPE2	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^#define DEF_TYPE2(/;"	d	file:
DOMAIN_REGEXP	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.cpp	/^#define DOMAIN_REGEXP /;"	d	file:
DangerousSocksTypeError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    DangerousSocksTypeError, \/**< The SOCKS type uses only IP addresses. *\/$/;"	e	enum:tc::SocksError
DataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    DataDirectory,$/;"	e	enum:AdvancedPage::ConfigGroup
DataRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  enum DataRole {$/;"	g	class:StatusEventItem	access:public
DataSize	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    DataSize,$/;"	e	enum:TorOpt::OptType
DatabaseType	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  enum DatabaseType {$/;"	g	class:GeoIpDatabase	access:public
Debug	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Debug = 0,  \/**< Verbose debugging output. *\/$/;"	e	enum:Log::LogLevel
Debug	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Debug      = (1u<<4),  \/**< Debug level log message. *\/$/;"	e	enum:LogEvent::Severity
Debug	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Debug,    \/**< SIGUSR2: Switch all open logs to loglevel debug *\/$/;"	e	enum:TorSignal::Signal
DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::DebugDialog(QWidget *parent)$/;"	f	class:DebugDialog	signature:(QWidget *parent)
DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    DebugDialog(QWidget *parent = 0);$/;"	p	class:DebugDialog	access:public	signature:(QWidget *parent = 0)
DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^class DebugDialog : public QDialog$/;"	c	inherits:QDialog
DebugDialog::DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::DebugDialog(QWidget *parent)$/;"	f	class:DebugDialog	signature:(QWidget *parent)
DebugDialog::DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    DebugDialog(QWidget *parent = 0);$/;"	p	class:DebugDialog	access:public	signature:(QWidget *parent = 0)
DebugDialog::clear	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::clear()$/;"	f	class:DebugDialog	signature:()
DebugDialog::clear	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void clear();$/;"	p	class:DebugDialog	access:public	signature:()
DebugDialog::exceptBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::exceptBuffer;$/;"	m	class:DebugDialog	file:
DebugDialog::exceptBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList exceptBuffer;$/;"	m	class:DebugDialog	access:private
DebugDialog::exceptDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::exceptDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
DebugDialog::exceptDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void exceptDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
DebugDialog::fillText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::fillText(QTextEdit *tedit, QStringList buffer)$/;"	f	class:DebugDialog	signature:(QTextEdit *tedit, QStringList buffer)
DebugDialog::fillText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    void fillText(QTextEdit *tedit, QStringList buffer);$/;"	p	class:DebugDialog	access:public	signature:(QTextEdit *tedit, QStringList buffer)
DebugDialog::outputBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::outputBuffer;$/;"	m	class:DebugDialog	file:
DebugDialog::outputBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList outputBuffer;$/;"	m	class:DebugDialog	access:private
DebugDialog::outputDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::outputDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
DebugDialog::outputDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void outputDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
DebugDialog::syntaxBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::syntaxBuffer;$/;"	m	class:DebugDialog	file:
DebugDialog::syntaxBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList syntaxBuffer;$/;"	m	class:DebugDialog	access:private
DebugDialog::syntaxDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::syntaxDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
DebugDialog::syntaxDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void syntaxDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
DebugDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    Ui::DebugDialog ui;$/;"	m	class:DebugDialog	access:private
DebugDialog::~DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::~DebugDialog() {}$/;"	f	class:DebugDialog	signature:()
DebugDialog::~DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    ~DebugDialog();$/;"	p	class:DebugDialog	access:public	signature:()
DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage(QtMsgType t, const QString &fmt)$/;"	f	class:tc::DebugMessage	access:public	signature:(QtMsgType t, const QString &fmt)
DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage(const DebugMessage &o)$/;"	f	class:tc::DebugMessage	access:public	signature:(const DebugMessage &o)
DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  class DebugMessage {$/;"	c	namespace:tc
DebugSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    DebugSeverity  = (1u<<4), \/**< Hyper-verbose events used for debugging. *\/$/;"	e	enum:tc::Severity
Default	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^    Default,  \/**< Specifies the default exit policy. *\/$/;"	e	enum:ExitPolicy::SpecialExitPolicy
DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::DefaultSettings()$/;"	f	class:DefaultSettings	signature:()
DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  DefaultSettings();$/;"	p	class:DefaultSettings	access:public	signature:()
DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^class DefaultSettings$/;"	c
DefaultSettings::DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::DefaultSettings()$/;"	f	class:DefaultSettings	signature:()
DefaultSettings::DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  DefaultSettings();$/;"	p	class:DefaultSettings	access:public	signature:()
DefaultSettings::_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  QSettings *_settings;$/;"	m	class:DefaultSettings	access:private
DefaultSettings::getDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::getDefault(const QString &key,$/;"	f	class:DefaultSettings	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
DefaultSettings::getDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  QVariant getDefault(const QString &key,$/;"	p	class:DefaultSettings	access:public	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
DefaultSettings::~DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::~DefaultSettings()$/;"	f	class:DefaultSettings	signature:()
DefaultSettings::~DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  ~DefaultSettings();$/;"	p	class:DefaultSettings	access:public	signature:()
Defined	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    enum { Defined = 1 }; \\$/;"	e	enum:QMetaTypeId::__anon2	file:
Defined	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    enum { Defined = 1 }; \\$/;"	e	enum:QMetaTypeId::__anon3	file:
DeletePortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    DeletePortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
DeleteService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  DeleteService_fn         DeleteService;$/;"	m	struct:ServiceFunctions	access:public
DeleteService_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *DeleteService_fn)($/;"	t
Dependant	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Dependant,$/;"	e	enum:TorOpt::OptType
DescriptionRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    DescriptionRole,$/;"	e	enum:StatusEventItem::DataRole
DescriptorAnnotations	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^typedef QHash<QString,QString> DescriptorAnnotations;$/;"	t
Detached	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Detached,     \/**< Detached from circuit *\/$/;"	e	enum:Stream::Status
Disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Disconnected,  \/**< Control connection disconnected.     *\/$/;"	e	enum:ControlConnection::Status
Disconnecting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Disconnecting, \/**< Control connection is disconnecting. *\/$/;"	e	enum:ControlConnection::Status
DiscoverState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    DiscoverState,$/;"	e	enum:UPNPControl::UPNPState
DisplayNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^DisplayNameValueList(char * buffer, int bufsize)$/;"	f	signature:(char * buffer, int bufsize)
DisplayNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^DisplayNameValueList(char * buffer, int bufsize);$/;"	p	signature:(char * buffer, int bufsize)
Dock	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Dock,$/;"	e	enum:VidaliaSettings::IconPosition
DomainDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    DomainDatabase$/;"	e	enum:GeoIpDatabase::DatabaseType
DomainValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.cpp	/^DomainValidator::DomainValidator(QObject *parent)$/;"	f	class:DomainValidator	signature:(QObject *parent)
DomainValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.h	/^  DomainValidator(QObject *parent);$/;"	p	class:DomainValidator	access:public	signature:(QObject *parent)
DomainValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.h	/^class DomainValidator : public QRegExpValidator$/;"	c	inherits:QRegExpValidator
DomainValidator::DomainValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.cpp	/^DomainValidator::DomainValidator(QObject *parent)$/;"	f	class:DomainValidator	signature:(QObject *parent)
DomainValidator::DomainValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.h	/^  DomainValidator(QObject *parent);$/;"	p	class:DomainValidator	access:public	signature:(QObject *parent)
DonePageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    DonePageID$/;"	e	enum:FirstRunWizard::IDs
DownloadingUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    DownloadingUpdates,$/;"	e	enum:UpdateProgressDialog::Status
Dump	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Dump,     \/**< SIGUSR1: Log information about current circuits *\/$/;"	e	enum:TorSignal::Signal
E5	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bd.png	/^–/;"	v
ELEMENT_CONTENTS	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ELEMENT_CONTENTS /;"	d	file:
ELEMENT_TOPIC	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ELEMENT_TOPIC /;"	d	file:
EVENT_MAX	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static const Event EVENT_MAX = TorEvents::NewConsensus;$/;"	m	class:TorEvents	access:public
EVENT_MIN	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static const Event EVENT_MIN = TorEvents::Bandwidth;$/;"	m	class:TorEvents	access:public
EXEMPLARY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES $/;"	v
EXEMPLARY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,$/;"	v
EXEMPLARY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT$/;"	v
EXPBIAS	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^#define EXPBIAS /;"	d	file:
EXPBIAS	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^#undef EXPBIAS$/;"	d	file:
Edman	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^    Copyright (c) 2006-2007,  Matt Edman, Justin Hipple$/;"	v
Error	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Error,      \/**< Critical, non-recoverable errors. *\/$/;"	e	enum:Log::LogLevel
Error	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Error      = (1u<<0)   \/**< Error level log message. *\/$/;"	e	enum:LogEvent::Severity
Error	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/log.html	/^·Ä°·Äû·Ä∂·ÄØ·Ä∏·Äª·Äï·Ä≥·Äû·Ä∞·Ä°·Äô·Ä∫·Ä¨·Ä∏·ÄÖ·ÄØ·Äû·Ää·Äπ <i>Error<\/i>, <i>Warning<\/i>, ·Çè·ÄΩ·ÄÑ·Äπ·Ä∑ <i>Notice<\/i>$/;"	v
Error	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/log.html	/^·Ä°·Äû·Ä∂·ÄØ·Ä∏·Äª·Äï·Ä≥·Äû·Ä∞·Ä°·Äô·Ä∫·Ä¨·Ä∏·ÄÖ·ÄØ·Äû·Ää·Äπ <i>Error<\/i>, <i>Warning<\/i>, ·Çè·ÄΩ·ÄÑ·Äπ·Ä∑ <i>Notice<\/i>$/;"	v
ErrorSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ErrorSeverity  = (1u<<0)  \/**< A critical event. *\/$/;"	e	enum:tc::Severity
ErrorState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    ErrorState,$/;"	e	enum:UPNPControl::UPNPState
EstablishingCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    EstablishingCircuit,$/;"	e	enum:BootstrapStatus::Status
Event	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  enum Event {$/;"	g	class:TorEvents	access:public
Exit	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Exit         = 0x0008,$/;"	e	enum:RouterStatus::Flag
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy()$/;"	f	class:ExitPolicy	signature:()
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy(QString exitPolicy)$/;"	f	class:ExitPolicy	signature:(QString exitPolicy)
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy(SpecialExitPolicy exitPolicy)$/;"	f	class:ExitPolicy	signature:(SpecialExitPolicy exitPolicy)
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy();$/;"	p	class:ExitPolicy	access:public	signature:()
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy(QString exitPolicy);$/;"	p	class:ExitPolicy	access:public	signature:(QString exitPolicy)
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy(SpecialExitPolicy exitPolicy);$/;"	p	class:ExitPolicy	access:public	signature:(SpecialExitPolicy exitPolicy)
ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^class ExitPolicy$/;"	c
ExitPolicy::Default	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^    Default,  \/**< Specifies the default exit policy. *\/$/;"	e	enum:ExitPolicy::SpecialExitPolicy
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy()$/;"	f	class:ExitPolicy	signature:()
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy(QString exitPolicy)$/;"	f	class:ExitPolicy	signature:(QString exitPolicy)
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::ExitPolicy(SpecialExitPolicy exitPolicy)$/;"	f	class:ExitPolicy	signature:(SpecialExitPolicy exitPolicy)
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy();$/;"	p	class:ExitPolicy	access:public	signature:()
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy(QString exitPolicy);$/;"	p	class:ExitPolicy	access:public	signature:(QString exitPolicy)
ExitPolicy::ExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  ExitPolicy(SpecialExitPolicy exitPolicy);$/;"	p	class:ExitPolicy	access:public	signature:(SpecialExitPolicy exitPolicy)
ExitPolicy::Middleman	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^    Middleman \/**< Specifies a middleman-only exit policy. *\/$/;"	e	enum:ExitPolicy::SpecialExitPolicy
ExitPolicy::SpecialExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  enum SpecialExitPolicy {$/;"	g	class:ExitPolicy	access:public
ExitPolicy::_exitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QList<Policy> _exitPolicy;$/;"	m	class:ExitPolicy	access:private
ExitPolicy::acceptsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::acceptsPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
ExitPolicy::acceptsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool acceptsPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
ExitPolicy::addAcceptedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addAcceptedPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
ExitPolicy::addAcceptedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addAcceptedPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
ExitPolicy::addPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addPolicy(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
ExitPolicy::addPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addPolicy(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
ExitPolicy::addRejectedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addRejectedPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
ExitPolicy::addRejectedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addRejectedPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
ExitPolicy::contains	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::contains(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
ExitPolicy::contains	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool contains(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
ExitPolicy::policyList	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QList<Policy> policyList() { return  _exitPolicy; }$/;"	f	class:ExitPolicy	access:public	signature:()
ExitPolicy::rejectsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::rejectsPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
ExitPolicy::rejectsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool rejectsPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
ExitPolicy::removePolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::removePolicy(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
ExitPolicy::removePolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void removePolicy(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
ExitPolicy::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::toString()$/;"	f	class:ExitPolicy	signature:()
ExitPolicy::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QString toString();$/;"	p	class:ExitPolicy	access:public	signature:()
ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree(const QString& value=QString())$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:(const QString& value=QString())
ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^class LogFilterSearchTerm::ExpTree {$/;"	c	class:LogFilterSearchTerm	file:
Extended	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Extended,  \/**< Circuit extended by one hop *\/$/;"	e	enum:Circuit::Status
F	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/mg.png	/^4ÑOû\/FÜ,Nç5;çAè!Mú+Mç1_´>Vò:Uë:l∂Mf™I]ôBoµQ7oKñ&=u!?x#C}&D~(GÇ*Y¢5JÖ-^¶:Qé3fØBi∞Fa°Bl≥JfßFq¥Pl¨LrµQnØNj•OLá.Oã0Uî5Sê4^ú>r∑OrµP.n>z/;"	v
FAILED_CIRCUIT_REMOVE_DELAY	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define FAILED_CIRCUIT_REMOVE_DELAY /;"	d	file:
FAILED_STREAM_REMOVE_DELAY	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define FAILED_STREAM_REMOVE_DELAY /;"	d	file:
FILEVERSION	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc	/^FILEVERSION     0,3,2,0$/;"	v
FIRSTRUNWIZARD_H	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^#define FIRSTRUNWIZARD_H$/;"	d
FONT_SIZE	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define FONT_SIZE /;"	d
Failed	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Failed,    \/**< Circuit closed (was not built) *\/$/;"	e	enum:Circuit::Status
Failed	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
Failed	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
Failed	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Failed,       \/**< Stream failed *\/$/;"	e	enum:Stream::Status
Failure	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Failure,  \/\/!< test failed$/;"	e	enum:BootstrapTestCase::TestResult
Fast	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Fast         = 0x0010,$/;"	e	enum:RouterStatus::Flag
Fehler	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^<i>Fehler<\/i>, <i>Warnung<\/i> und <i>Hinweis<\/i> aufzuzeichnen.$/;"	v
Filename	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Filename,$/;"	e	enum:TorOpt::OptType
FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::FirstRunWizard(QWidget *parent, bool withPanic, bool withNetwork)$/;"	f	class:FirstRunWizard	signature:(QWidget *parent, bool withPanic, bool withNetwork)
FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  FirstRunWizard(QWidget *parent = 0,$/;"	p	class:FirstRunWizard	access:public	signature:(QWidget *parent = 0, bool withPanic = false, bool withNetwork = false)
FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^class FirstRunWizard : public QWizard$/;"	c	inherits:QWizard
FirstRunWizard::DonePageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    DonePageID$/;"	e	enum:FirstRunWizard::IDs
FirstRunWizard::FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::FirstRunWizard(QWidget *parent, bool withPanic, bool withNetwork)$/;"	f	class:FirstRunWizard	signature:(QWidget *parent, bool withPanic, bool withNetwork)
FirstRunWizard::FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  FirstRunWizard(QWidget *parent = 0,$/;"	p	class:FirstRunWizard	access:public	signature:(QWidget *parent = 0, bool withPanic = false, bool withNetwork = false)
FirstRunWizard::IDs	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  enum IDs {$/;"	g	class:FirstRunWizard	access:private
FirstRunWizard::IntroPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    IntroPageID = 0,$/;"	e	enum:FirstRunWizard::IDs
FirstRunWizard::NetworkPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    NetworkPageID,$/;"	e	enum:FirstRunWizard::IDs
FirstRunWizard::PanicPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    PanicPageID,$/;"	e	enum:FirstRunWizard::IDs
FirstRunWizard::_ap	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  AdvancedPage *_ap;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_btnNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QPushButton *_btnNext;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_donePage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_networkPage, *_donePage;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_introPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_introPage, *_panicPage;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_networkPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_networkPage, *_donePage;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_np	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  NetworkPage *_np;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_panicPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_introPage, *_panicPage;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_withNetwork	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  bool _withPanic, _withNetwork;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::_withPanic	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  bool _withPanic, _withNetwork;$/;"	m	class:FirstRunWizard	access:private
FirstRunWizard::createPages	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::createPages()$/;"	f	class:FirstRunWizard	signature:()
FirstRunWizard::createPages	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  void createPages();$/;"	p	class:FirstRunWizard	access:private	signature:()
FirstRunWizard::handleNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::handleNext()$/;"	f	class:FirstRunWizard	signature:()
FirstRunWizard::handleNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  void handleNext();$/;"	p	class:FirstRunWizard	access:public	signature:()
FirstRunWizard::~FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::~FirstRunWizard()$/;"	f	class:FirstRunWizard	signature:()
FirstRunWizard::~FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  virtual ~FirstRunWizard();$/;"	p	class:FirstRunWizard	access:public	signature:()
Flag	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  enum Flag {$/;"	g	class:RouterStatus	access:public
Float	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Float,$/;"	e	enum:TorOpt::OptType
Floor	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$/;"	v
ForwardingCompleteState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    ForwardingCompleteState$/;"	e	enum:UPNPControl::UPNPState
Foundation	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^License as published by the Free Software Foundation; either$/;"	v
Foundation	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^the Free Software Foundation; either version 2 of the License, or (at$/;"	v
Foundation	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^with this program; if not, write to the Free Software Foundation, Inc.,$/;"	v
FreeUPNPUrls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^FreeUPNPUrls(struct UPNPUrls * urls)$/;"	f	signature:(struct UPNPUrls * urls)
FreeUPNPUrls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC void FreeUPNPUrls(struct UPNPUrls *);$/;"	p	signature:(struct UPNPUrls *)
GET_AND_CALL	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^#define GET_AND_CALL(/;"	d	file:
GRID_COLOR	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define GRID_COLOR /;"	d
General	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    General = 0,$/;"	e	enum:Circuit::Purpose
General	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    General = 0,  \/** General configuration page. *\/$/;"	e	enum:ConfigDialog::Page
GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::GeneralPage(QWidget *parent)$/;"	f	class:GeneralPage	signature:(QWidget *parent)
GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  GeneralPage(QWidget *parent = 0);$/;"	p	class:GeneralPage	access:public	signature:(QWidget *parent = 0)
GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^class GeneralPage : public ConfigPage$/;"	c	inherits:ConfigPage
GeneralPage::GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::GeneralPage(QWidget *parent)$/;"	f	class:GeneralPage	signature:(QWidget *parent)
GeneralPage::GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  GeneralPage(QWidget *parent = 0);$/;"	p	class:GeneralPage	access:public	signature:(QWidget *parent = 0)
GeneralPage::_torSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  TorSettings *_torSettings;$/;"	m	class:GeneralPage	access:private
GeneralPage::_vidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  VidaliaSettings *_vidaliaSettings;$/;"	m	class:GeneralPage	access:private
GeneralPage::browseExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::browseExecutable(const QString &caption, const QString &file)$/;"	f	class:GeneralPage	signature:(const QString &caption, const QString &file)
GeneralPage::browseExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  QString browseExecutable(const QString &caption,$/;"	p	class:GeneralPage	access:private	signature:(const QString &caption, const QString &file = QString())
GeneralPage::browseTorExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::browseTorExecutable()$/;"	f	class:GeneralPage	signature:()
GeneralPage::browseTorExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void browseTorExecutable();$/;"	p	class:GeneralPage	access:private	signature:()
GeneralPage::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void checkForUpdates();$/;"	p	class:GeneralPage	access:public	signature:()
GeneralPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::load()$/;"	f	class:GeneralPage	signature:()
GeneralPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void load();$/;"	p	class:GeneralPage	access:public	signature:()
GeneralPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::retranslateUi()$/;"	f	class:GeneralPage	signature:()
GeneralPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  virtual void retranslateUi();$/;"	p	class:GeneralPage	access:public	signature:()
GeneralPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::save(QString &errmsg)$/;"	f	class:GeneralPage	signature:(QString &errmsg)
GeneralPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  bool save(QString &errmsg);$/;"	p	class:GeneralPage	access:public	signature:(QString &errmsg)
GeneralPage::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  Ui::GeneralPage ui;$/;"	m	class:GeneralPage	access:private
GeneralPage::updateNow	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::updateNow()$/;"	f	class:GeneralPage	signature:()
GeneralPage::updateNow	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void updateNow();$/;"	p	class:GeneralPage	access:private	signature:()
GeneralPage::~GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::~GeneralPage()$/;"	f	class:GeneralPage	signature:()
GeneralPage::~GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  ~GeneralPage();$/;"	p	class:GeneralPage	access:public	signature:()
GeneralStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    GeneralStatus = (1u << 11),$/;"	e	enum:TorEvents::Event
GeoDataDocument	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^class Marble::GeoDataDocument;$/;"	m	class:Marble	typeref:class:Marble::
GeoDataFolder	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^class Marble::GeoDataFolder;$/;"	m	class:Marble	typeref:class:Marble::
GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::GeoIpDatabase(QObject *parent)$/;"	f	class:GeoIpDatabase	signature:(QObject *parent)
GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpDatabase(QObject *parent = 0);$/;"	p	class:GeoIpDatabase	access:public	signature:(QObject *parent = 0)
GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^class GeoIpDatabase : public QObject$/;"	c	inherits:QObject
GeoIpDatabase::AsnDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    AsnDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::CityDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    CityDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::CountryDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    CountryDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::DatabaseType	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  enum DatabaseType {$/;"	g	class:GeoIpDatabase	access:public
GeoIpDatabase::DomainDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    DomainDatabase$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::GeoIpDatabase(QObject *parent)$/;"	f	class:GeoIpDatabase	signature:(QObject *parent)
GeoIpDatabase::GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpDatabase(QObject *parent = 0);$/;"	p	class:GeoIpDatabase	access:public	signature:(QObject *parent = 0)
GeoIpDatabase::IspDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    IspDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::NetSpeedDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    NetSpeedDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::OrganizationDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    OrganizationDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::ProxyDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    ProxyDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::RegionDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    RegionDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::UnknownDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    UnknownDatabase = 0,$/;"	e	enum:GeoIpDatabase::DatabaseType
GeoIpDatabase::_db	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIP *_db; \/**< Pointer to the local GeoIP database object. *\/$/;"	m	class:GeoIpDatabase	access:private
GeoIpDatabase::close	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::close()$/;"	f	class:GeoIpDatabase	signature:()
GeoIpDatabase::close	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  void close();$/;"	p	class:GeoIpDatabase	access:public	signature:()
GeoIpDatabase::countryCodeByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::countryCodeByAddr(const QHostAddress &ip)$/;"	f	class:GeoIpDatabase	signature:(const QHostAddress &ip)
GeoIpDatabase::countryCodeByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  QString countryCodeByAddr(const QHostAddress &ip);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QHostAddress &ip)
GeoIpDatabase::isOpen	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::isOpen() const$/;"	f	class:GeoIpDatabase	signature:() const
GeoIpDatabase::isOpen	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  bool isOpen() const;$/;"	p	class:GeoIpDatabase	access:public	signature:() const
GeoIpDatabase::open	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::open(const QString &fname)$/;"	f	class:GeoIpDatabase	signature:(const QString &fname)
GeoIpDatabase::open	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  bool open(const QString &fname);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QString &fname)
GeoIpDatabase::recordByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::recordByAddr(const QHostAddress &ip)$/;"	f	class:GeoIpDatabase	signature:(const QHostAddress &ip)
GeoIpDatabase::recordByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpRecord recordByAddr(const QHostAddress &ip);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QHostAddress &ip)
GeoIpDatabase::type	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::type() const$/;"	f	class:GeoIpDatabase	signature:() const
GeoIpDatabase::type	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpDatabase::DatabaseType type() const;$/;"	p	class:GeoIpDatabase	access:public	signature:() const
GeoIpDatabase::~GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::~GeoIpDatabase()$/;"	f	class:GeoIpDatabase	signature:()
GeoIpDatabase::~GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  virtual ~GeoIpDatabase();$/;"	p	class:GeoIpDatabase	access:public	signature:()
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord()$/;"	f	class:GeoIpRecord	signature:()
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	f	class:GeoIpRecord	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &city, const QString &region, const QString &country, const QString &countryCode)
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	f	class:GeoIpRecord	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &country, const QString &countryCode)
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord();$/;"	p	class:GeoIpRecord	access:public	signature:()
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	p	class:GeoIpRecord	access:public	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &city, const QString &region, const QString &country, const QString &countryCode)
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	p	class:GeoIpRecord	access:public	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &country, const QString &countryCode)
GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^class GeoIpRecord$/;"	c
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord()$/;"	f	class:GeoIpRecord	signature:()
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	f	class:GeoIpRecord	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &city, const QString &region, const QString &country, const QString &countryCode)
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	f	class:GeoIpRecord	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &country, const QString &countryCode)
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord();$/;"	p	class:GeoIpRecord	access:public	signature:()
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	p	class:GeoIpRecord	access:public	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &city, const QString &region, const QString &country, const QString &countryCode)
GeoIpRecord::GeoIpRecord	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  GeoIpRecord(const QHostAddress &ip, float latitude, float longitude,$/;"	p	class:GeoIpRecord	access:public	signature:(const QHostAddress &ip, float latitude, float longitude, const QString &country, const QString &countryCode)
GeoIpRecord::_city	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _city;    \/**< City in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_country	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _country; \/**< Country in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _countryCode; \/**< ISO-3166-1 alpha-2 country code. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_ip	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QHostAddress _ip; \/**< IP address for this location. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_latitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float _latitude;  \/**< Latitudinal coordinate for this IP's location. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_longitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float _longitude; \/**< Longitudinal coordinate for this IP's location. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::_region	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _region;   \/**< State or district in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
GeoIpRecord::city	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString city() const { return _city; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::country	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString country() const { return _country; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString countryCode() const { return _countryCode; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::ip	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QHostAddress ip() const { return _ip; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::isValid	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::isValid() const$/;"	f	class:GeoIpRecord	signature:() const
GeoIpRecord::isValid	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  bool isValid() const;$/;"	p	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::latitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float latitude() const { return _latitude; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::longitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float longitude() const { return _longitude; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::region	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString region() const { return _region; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
GeoIpRecord::toString	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::toString() const$/;"	f	class:GeoIpRecord	signature:() const
GeoIpRecord::toString	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString toString() const;$/;"	p	class:GeoIpRecord	access:public	signature:() const
GeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::GeoIpResolver(QObject *parent)$/;"	f	class:GeoIpResolver	signature:(QObject *parent)
GeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpResolver(QObject *parent = 0);$/;"	p	class:GeoIpResolver	access:public	signature:(QObject *parent = 0)
GeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^class GeoIpResolver : public QObject$/;"	c	inherits:QObject
GeoIpResolver::GeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::GeoIpResolver(QObject *parent)$/;"	f	class:GeoIpResolver	signature:(QObject *parent)
GeoIpResolver::GeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpResolver(QObject *parent = 0);$/;"	p	class:GeoIpResolver	access:public	signature:(QObject *parent = 0)
GeoIpResolver::_database	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpDatabase _database;$/;"	m	class:GeoIpResolver	access:private
GeoIpResolver::_useLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  bool _useLocalDatabase;$/;"	m	class:GeoIpResolver	access:private
GeoIpResolver::resolve	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolve(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
GeoIpResolver::resolve	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolve(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:public	signature:(const QHostAddress &ip)
GeoIpResolver::resolveUsingLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolveUsingLocalDatabase(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
GeoIpResolver::resolveUsingLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolveUsingLocalDatabase(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:protected	signature:(const QHostAddress &ip)
GeoIpResolver::resolveUsingTor	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolveUsingTor(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
GeoIpResolver::resolveUsingTor	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolveUsingTor(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:protected	signature:(const QHostAddress &ip)
GeoIpResolver::setLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::setLocalDatabase(const QString &databaseFile)$/;"	f	class:GeoIpResolver	signature:(const QString &databaseFile)
GeoIpResolver::setLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  bool setLocalDatabase(const QString &databaseFile);$/;"	p	class:GeoIpResolver	access:public	signature:(const QString &databaseFile)
GeoIpResolver::setUseLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::setUseLocalDatabase(bool useLocalDatabase)$/;"	f	class:GeoIpResolver	signature:(bool useLocalDatabase)
GeoIpResolver::setUseLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  void setUseLocalDatabase(bool useLocalDatabase);$/;"	p	class:GeoIpResolver	access:public	signature:(bool useLocalDatabase)
GetPortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    GetPortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
GetUPNPUrls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^LIBSPEC void GetUPNPUrls(struct UPNPUrls * urls, struct IGDdatas * data,$/;"	f	signature:(struct UPNPUrls * urls, struct IGDdatas * data, const char * descURL)
GetUPNPUrls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC void GetUPNPUrls(struct UPNPUrls *, struct IGDdatas *, const char *);$/;"	p	signature:(struct UPNPUrls *, struct IGDdatas *, const char *)
GetValueFromNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^GetValueFromNameValueList(struct NameValueParserData * pdata,$/;"	f	signature:(struct NameValueParserData * pdata, const char * Name)
GetValueFromNameValueList	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^GetValueFromNameValueList(struct NameValueParserData * pdata,$/;"	p	signature:(struct NameValueParserData * pdata, const char * Name)
GetValueFromNameValueListIgnoreNS	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^GetValueFromNameValueListIgnoreNS(struct NameValueParserData * pdata,$/;"	p	signature:(struct NameValueParserData * pdata, const char * Name)
GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::GraphFrame(QWidget *parent)$/;"	f	class:GraphFrame	signature:(QWidget *parent)
GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  GraphFrame(QWidget *parent = 0);$/;"	p	class:GraphFrame	access:public	signature:(QWidget *parent = 0)
GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^class GraphFrame : public QFrame$/;"	c	inherits:QFrame
GraphFrame::AreaGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^    AreaGraph       \/**< Plot bandwidth as alpha blended area graphs. *\/$/;"	e	enum:GraphFrame::GraphStyle
GraphFrame::GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::GraphFrame(QWidget *parent)$/;"	f	class:GraphFrame	signature:(QWidget *parent)
GraphFrame::GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  GraphFrame(QWidget *parent = 0);$/;"	p	class:GraphFrame	access:public	signature:(QWidget *parent = 0)
GraphFrame::GraphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  enum GraphStyle {$/;"	g	class:GraphFrame	access:public
GraphFrame::SolidLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^    SolidLine = 0,  \/**< Plot bandwidth as solid lines. *\/$/;"	e	enum:GraphFrame::GraphStyle
GraphFrame::_graphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  GraphStyle _graphStyle;$/;"	m	class:GraphFrame	access:private
GraphFrame::_maxPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _maxPoints;$/;"	m	class:GraphFrame	access:private
GraphFrame::_maxPosition	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _maxPosition;$/;"	m	class:GraphFrame	access:private
GraphFrame::_maxValue	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _maxValue;$/;"	m	class:GraphFrame	access:private
GraphFrame::_painter	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QPainter* _painter;$/;"	m	class:GraphFrame	access:private
GraphFrame::_rec	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QRect _rec;$/;"	m	class:GraphFrame	access:private
GraphFrame::_recvData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QList<qreal> *_recvData;$/;"	m	class:GraphFrame	access:private
GraphFrame::_scaleWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _scaleWidth;$/;"	m	class:GraphFrame	access:private
GraphFrame::_sendData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QList<qreal> *_sendData;$/;"	m	class:GraphFrame	access:private
GraphFrame::_showRecv	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  bool _showRecv;$/;"	m	class:GraphFrame	access:private
GraphFrame::_showSend	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  bool _showSend;$/;"	m	class:GraphFrame	access:private
GraphFrame::_totalRecv	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _totalRecv;$/;"	m	class:GraphFrame	access:private
GraphFrame::_totalSend	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _totalSend;$/;"	m	class:GraphFrame	access:private
GraphFrame::addPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::addPoints(qreal recv, qreal send)$/;"	f	class:GraphFrame	signature:(qreal recv, qreal send)
GraphFrame::addPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void addPoints(qreal recv, qreal send);$/;"	p	class:GraphFrame	access:public	signature:(qreal recv, qreal send)
GraphFrame::getNumPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::getNumPoints()$/;"	f	class:GraphFrame	signature:()
GraphFrame::getNumPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int getNumPoints();$/;"	p	class:GraphFrame	access:private	signature:()
GraphFrame::labelWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::labelWidth(const QString &label)$/;"	f	class:GraphFrame	signature:(const QString &label)
GraphFrame::labelWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int labelWidth(const QString &label);$/;"	p	class:GraphFrame	access:private	signature:(const QString &label)
GraphFrame::paintData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintData()$/;"	f	class:GraphFrame	signature:()
GraphFrame::paintData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintData();$/;"	p	class:GraphFrame	access:private	signature:()
GraphFrame::paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintEvent(QPaintEvent *event)$/;"	f	class:GraphFrame	signature:(QPaintEvent *event)
GraphFrame::paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintEvent(QPaintEvent *event);$/;"	p	class:GraphFrame	access:protected	signature:(QPaintEvent *event)
GraphFrame::paintIntegral	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintIntegral(QVector<QPointF> points, QColor color, qreal alpha)$/;"	f	class:GraphFrame	signature:(QVector<QPointF> points, QColor color, qreal alpha)
GraphFrame::paintIntegral	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintIntegral(QVector<QPointF> points, QColor color, qreal alpha = 1.0);$/;"	p	class:GraphFrame	access:private	signature:(QVector<QPointF> points, QColor color, qreal alpha = 1.0)
GraphFrame::paintLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintLine(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle)$/;"	f	class:GraphFrame	signature:(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle)
GraphFrame::paintLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintLine(QVector<QPointF> points, QColor color,$/;"	p	class:GraphFrame	access:private	signature:(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle = Qt::SolidLine)
GraphFrame::paintScale	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintScale()$/;"	f	class:GraphFrame	signature:()
GraphFrame::paintScale	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintScale();$/;"	p	class:GraphFrame	access:private	signature:()
GraphFrame::paintTotals	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintTotals()$/;"	f	class:GraphFrame	signature:()
GraphFrame::paintTotals	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintTotals();$/;"	p	class:GraphFrame	access:private	signature:()
GraphFrame::pointsFromData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::pointsFromData(QList<qreal>* list)$/;"	f	class:GraphFrame	signature:(QList<qreal>* list)
GraphFrame::pointsFromData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QVector<QPointF> pointsFromData(QList<qreal>* list);$/;"	p	class:GraphFrame	access:private	signature:(QList<qreal>* list)
GraphFrame::resetGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::resetGraph()$/;"	f	class:GraphFrame	signature:()
GraphFrame::resetGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void resetGraph();$/;"	p	class:GraphFrame	access:public	signature:()
GraphFrame::resizeEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::resizeEvent(QResizeEvent *ev)$/;"	f	class:GraphFrame	signature:(QResizeEvent *ev)
GraphFrame::resizeEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void resizeEvent(QResizeEvent *ev);$/;"	p	class:GraphFrame	access:private	signature:(QResizeEvent *ev)
GraphFrame::setGraphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void setGraphStyle(GraphStyle style) { _graphStyle = style; }$/;"	f	class:GraphFrame	access:public	signature:(GraphStyle style)
GraphFrame::setShowCounters	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::setShowCounters(bool showRecv, bool showSend)$/;"	f	class:GraphFrame	signature:(bool showRecv, bool showSend)
GraphFrame::setShowCounters	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void setShowCounters(bool showRecv, bool showSend);$/;"	p	class:GraphFrame	access:public	signature:(bool showRecv, bool showSend)
GraphFrame::totalToStr	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::totalToStr(qreal total)$/;"	f	class:GraphFrame	signature:(qreal total)
GraphFrame::totalToStr	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QString totalToStr(qreal total);$/;"	p	class:GraphFrame	access:private	signature:(qreal total)
GraphFrame::~GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::~GraphFrame()$/;"	f	class:GraphFrame	signature:()
GraphFrame::~GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  ~GraphFrame();$/;"	p	class:GraphFrame	access:public	signature:()
GraphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  enum GraphStyle {$/;"	g	class:GraphFrame	access:public
GreaterThan1500	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    GreaterThan1500, \/**< > 1.5 Mbps *\/$/;"	e	enum:ServerPage::BwRateIndex
Grund	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Der h&auml;ufigste Grund, dass Vidalia keine Verbindung zu Tor herstellen$/;"	v
Grund	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Ein h&auml;ufiger Grund, weshalb Vidalia Tor nicht starten konnte, ist die$/;"	v
Guard	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Guard        = 0x0020,$/;"	e	enum:RouterStatus::Flag
Gzip	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    Gzip,   \/**< Gzip compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
H	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cr.png	/^/;"	v
HELPERPROCESSPROT_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^#define HELPERPROCESSPROT_H$/;"	d
HIGHBW_AVG_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define HIGHBW_AVG_RATE /;"	d	file:
HIGHBW_MAX_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define HIGHBW_MAX_RATE /;"	d	file:
HOR_SPC	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define HOR_SPC /;"	d
HSDir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    HSDir        = 0x0040,$/;"	e	enum:RouterStatus::Flag
HTTP	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/services.html	/^service TCP, par exemple un service HTTP, √† des tiers sans r√©v√©ler votre$/;"	v
Halt	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Halt,     \/**< SIGTERM: Immediate shutdown *\/$/;"	e	enum:TorSignal::Signal
HandshakingWithDirMirror	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    HandshakingWithDirMirror,$/;"	e	enum:BootstrapStatus::Status
HandshakingWithEntryGuard	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    HandshakingWithEntryGuard,$/;"	e	enum:BootstrapStatus::Status
Help	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Help,$/;"	e	enum:VMessageBox::Button
HelpBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::HelpBrowser(QWidget *parent)$/;"	f	class:HelpBrowser	signature:(QWidget *parent)
HelpBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  HelpBrowser(QWidget *parent = 0);$/;"	p	class:HelpBrowser	access:public	signature:(QWidget *parent = 0)
HelpBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^class HelpBrowser : public VidaliaWindow$/;"	c	inherits:VidaliaWindow
HelpBrowser::HelpBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::HelpBrowser(QWidget *parent)$/;"	f	class:HelpBrowser	signature:(QWidget *parent)
HelpBrowser::HelpBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  HelpBrowser(QWidget *parent = 0);$/;"	p	class:HelpBrowser	access:public	signature:(QWidget *parent = 0)
HelpBrowser::_elementList	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QList<QDomElement> _elementList;$/;"	m	class:HelpBrowser	access:private
HelpBrowser::_foundBefore	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool _foundBefore;$/;"	m	class:HelpBrowser	access:private
HelpBrowser::_lastFind	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString _lastFind;$/;"	m	class:HelpBrowser	access:private
HelpBrowser::_lastSearch	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString _lastSearch;$/;"	m	class:HelpBrowser	access:private
HelpBrowser::contentsItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::contentsItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::contentsItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void contentsItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::createTopicTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::createTopicTreeItem(const QDomElement &topicElement,$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
HelpBrowser::createTopicTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QTreeWidgetItem* createTopicTreeItem(const QDomElement &topicElement,$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
HelpBrowser::currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::find	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::find(bool forward)$/;"	f	class:HelpBrowser	signature:(bool forward)
HelpBrowser::find	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void find(bool forward);$/;"	p	class:HelpBrowser	access:private	signature:(bool forward)
HelpBrowser::findNext	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findNext()$/;"	f	class:HelpBrowser	signature:()
HelpBrowser::findNext	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void findNext();$/;"	p	class:HelpBrowser	access:private	signature:()
HelpBrowser::findPrev	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findPrev()$/;"	f	class:HelpBrowser	signature:()
HelpBrowser::findPrev	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void findPrev();$/;"	p	class:HelpBrowser	access:private	signature:()
HelpBrowser::findTopicItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findTopicItem(QTreeWidgetItem *startItem, QString topic)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *startItem, QString topic)
HelpBrowser::findTopicItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QTreeWidgetItem* findTopicItem(QTreeWidgetItem *startItem, QString topic);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *startItem, QString topic)
HelpBrowser::getResourcePath	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::getResourcePath(const QDomElement &topicElement)$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement)
HelpBrowser::getResourcePath	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString getResourcePath(const QDomElement &topicElement);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement)
HelpBrowser::isValidTopicElement	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::isValidTopicElement(const QDomElement &topicElement)$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement)
HelpBrowser::isValidTopicElement	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool isValidTopicElement(const QDomElement &topicElement);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement)
HelpBrowser::language	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::language()$/;"	f	class:HelpBrowser	signature:()
HelpBrowser::language	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString language();$/;"	p	class:HelpBrowser	access:private	signature:()
HelpBrowser::loadContents	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::loadContents(const QDomDocument *document, QString &errorString)$/;"	f	class:HelpBrowser	signature:(const QDomDocument *document, QString &errorString)
HelpBrowser::loadContents	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool loadContents(const QDomDocument *document, QString &errorString);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomDocument *document, QString &errorString)
HelpBrowser::loadContentsFromXml	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::loadContentsFromXml(QString xmlFile)$/;"	f	class:HelpBrowser	signature:(QString xmlFile)
HelpBrowser::loadContentsFromXml	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void loadContentsFromXml(QString xmlFile);$/;"	p	class:HelpBrowser	access:private	signature:(QString xmlFile)
HelpBrowser::parseHelpTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::parseHelpTopic(const QDomElement &topicElement,$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
HelpBrowser::parseHelpTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void parseHelpTopic(const QDomElement &element, QTreeWidgetItem *parent);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &element, QTreeWidgetItem *parent)
HelpBrowser::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::retranslateUi()$/;"	f	class:HelpBrowser	signature:()
HelpBrowser::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  virtual void retranslateUi();$/;"	p	class:HelpBrowser	access:protected	signature:()
HelpBrowser::search	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::search()$/;"	f	class:HelpBrowser	signature:()
HelpBrowser::search	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void search();$/;"	p	class:HelpBrowser	access:private	signature:()
HelpBrowser::searchItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::searchItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::searchItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void searchItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
HelpBrowser::showTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::showTopic(QString topic)$/;"	f	class:HelpBrowser	signature:(QString topic)
HelpBrowser::showTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void showTopic(QString topic);$/;"	p	class:HelpBrowser	access:private	signature:(QString topic)
HelpBrowser::showWindow	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::showWindow(QString topic)$/;"	f	class:HelpBrowser	signature:(QString topic)
HelpBrowser::showWindow	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void showWindow(QString topic = QString());$/;"	p	class:HelpBrowser	access:public	signature:(QString topic = QString())
HelpBrowser::ui	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  Ui::HelpBrowser ui;$/;"	m	class:HelpBrowser	access:private
HelpTextBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::HelpTextBrowser(QWidget *parent)$/;"	f	class:HelpTextBrowser	signature:(QWidget *parent)
HelpTextBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  HelpTextBrowser(QWidget *parent = 0);$/;"	p	class:HelpTextBrowser	access:public	signature:(QWidget *parent = 0)
HelpTextBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^class HelpTextBrowser : public QTextBrowser$/;"	c	inherits:QTextBrowser
HelpTextBrowser::HelpTextBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::HelpTextBrowser(QWidget *parent)$/;"	f	class:HelpTextBrowser	signature:(QWidget *parent)
HelpTextBrowser::HelpTextBrowser	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  HelpTextBrowser(QWidget *parent = 0);$/;"	p	class:HelpTextBrowser	access:public	signature:(QWidget *parent = 0)
HelpTextBrowser::loadResource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::loadResource(int type, const QUrl &name)$/;"	f	class:HelpTextBrowser	signature:(int type, const QUrl &name)
HelpTextBrowser::loadResource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  QVariant loadResource(int type, const QUrl &name);$/;"	p	class:HelpTextBrowser	access:public	signature:(int type, const QUrl &name)
HelpTextBrowser::setSource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::setSource(const QUrl &url)$/;"	f	class:HelpTextBrowser	signature:(const QUrl &url)
HelpTextBrowser::setSource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  virtual void setSource(const QUrl &url);$/;"	p	class:HelpTextBrowser	access:public	signature:(const QUrl &url)
HelpUrlRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    HelpUrlRole,$/;"	e	enum:StatusEventItem::DataRole
HelperProcess	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::HelperProcess(QObject *parent)$/;"	f	class:HelperProcess	signature:(QObject *parent)
HelperProcess	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  HelperProcess(QObject *parent = 0);$/;"	p	class:HelperProcess	access:public	signature:(QObject *parent = 0)
HelperProcess	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^class HelperProcess : public QProcess$/;"	c	inherits:QProcess
HelperProcess::HelperProcess	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::HelperProcess(QObject *parent)$/;"	f	class:HelperProcess	signature:(QObject *parent)
HelperProcess::HelperProcess	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  HelperProcess(QObject *parent = 0);$/;"	p	class:HelperProcess	access:public	signature:(QObject *parent = 0)
HelperProcess::_processName	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  QString _processName;$/;"	m	class:HelperProcess	access:private
HelperProcess::isDone	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::isDone() const$/;"	f	class:HelperProcess	signature:() const
HelperProcess::isDone	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  bool isDone() const;$/;"	p	class:HelperProcess	access:public	signature:() const
HelperProcess::onError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onError(QProcess::ProcessError error)$/;"	f	class:HelperProcess	signature:(QProcess::ProcessError error)
HelperProcess::onError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:HelperProcess	access:private	signature:(QProcess::ProcessError error)
HelperProcess::onReadyReadStandardError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onReadyReadStandardError()$/;"	f	class:HelperProcess	signature:()
HelperProcess::onReadyReadStandardError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onReadyReadStandardError();$/;"	p	class:HelperProcess	access:private	signature:()
HelperProcess::onReadyReadStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onReadyReadStandardOutput()$/;"	f	class:HelperProcess	signature:()
HelperProcess::onReadyReadStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onReadyReadStandardOutput();$/;"	p	class:HelperProcess	access:private	signature:()
HelperProcess::start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::start(const QString &app, const QString &args)$/;"	f	class:HelperProcess	signature:(const QString &app, const QString &args)
HelperProcess::start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::start(const QString &app, const QStringList &args)$/;"	f	class:HelperProcess	signature:(const QString &app, const QStringList &args)
HelperProcess::start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void start(const QString &app, const QString &args);$/;"	p	class:HelperProcess	access:public	signature:(const QString &app, const QString &args)
HelperProcess::start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void start(const QString &app, const QStringList &args);$/;"	p	class:HelperProcess	access:public	signature:(const QString &app, const QStringList &args)
HelperProcess::startFailed	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void startFailed(const QString &errorMessage);$/;"	p	class:HelperProcess	access:public	signature:(const QString &errorMessage)
HelperProcess::toForeground	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::toForeground()$/;"	f	class:HelperProcess	signature:()
HelperProcess::toForeground	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void toForeground();$/;"	p	class:HelperProcess	access:public	signature:()
HelperProcessPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::HelperProcessPrototype(QObject *parent)$/;"	f	class:HelperProcessPrototype	signature:(QObject *parent)
HelperProcessPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    HelperProcessPrototype(QObject *parent = 0);$/;"	p	class:HelperProcessPrototype	access:public	signature:(QObject *parent = 0)
HelperProcessPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^class HelperProcessPrototype : public QObject, public QScriptable$/;"	c	inherits:QObject,QScriptable
HelperProcessPrototype::HelperProcessPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::HelperProcessPrototype(QObject *parent)$/;"	f	class:HelperProcessPrototype	signature:(QObject *parent)
HelperProcessPrototype::HelperProcessPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    HelperProcessPrototype(QObject *parent = 0);$/;"	p	class:HelperProcessPrototype	access:public	signature:(QObject *parent = 0)
HelperProcessPrototype::constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::constructor(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:HelperProcessPrototype	signature:(QScriptContext *context, QScriptEngine *engine)
HelperProcessPrototype::constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static QScriptValue constructor(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:HelperProcessPrototype	access:public	signature:(QScriptContext *context, QScriptEngine *engine)
HelperProcessPrototype::isDone	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::isDone() const$/;"	f	class:HelperProcessPrototype	signature:() const
HelperProcessPrototype::isDone	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE bool isDone() const;$/;"	p	class:HelperProcessPrototype	access:public	signature:() const
HelperProcessPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::metaTypeId()$/;"	f	class:HelperProcessPrototype	signature:()
HelperProcessPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static int metaTypeId();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
HelperProcessPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::name()$/;"	f	class:HelperProcessPrototype	signature:()
HelperProcessPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static QString name();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
HelperProcessPrototype::setEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::setEnvironment(const QStringList &env)$/;"	f	class:HelperProcessPrototype	signature:(const QStringList &env)
HelperProcessPrototype::setEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void setEnvironment(const QStringList &env);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QStringList &env)
HelperProcessPrototype::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::start(const QString &app, const QString &args)$/;"	f	class:HelperProcessPrototype	signature:(const QString &app, const QString &args)
HelperProcessPrototype::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::start(const QString &app, const QStringList &args)$/;"	f	class:HelperProcessPrototype	signature:(const QString &app, const QStringList &args)
HelperProcessPrototype::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void start(const QString &app, const QString &args);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QString &app, const QString &args)
HelperProcessPrototype::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void start(const QString &app, const QStringList &args);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QString &app, const QStringList &args)
HelperProcessPrototype::state	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::state()$/;"	f	class:HelperProcessPrototype	signature:()
HelperProcessPrototype::state	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE QProcess::ProcessState state();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
HelperProcessPrototype::systemEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::systemEnvironment()$/;"	f	class:HelperProcessPrototype	signature:()
HelperProcessPrototype::systemEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE QStringList systemEnvironment();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
HelperProcessPrototype::toForeground	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::toForeground()$/;"	f	class:HelperProcessPrototype	signature:()
HelperProcessPrototype::toForeground	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void toForeground();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
Hibernating	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Hibernating,  \/**< Router is currently hibernating. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
HsClientIntro	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsClientIntro,$/;"	e	enum:Circuit::Purpose
HsClientRend	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsClientRend,$/;"	e	enum:Circuit::Purpose
HsServiceIntro	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsServiceIntro,$/;"	e	enum:Circuit::Purpose
HsServiceRend	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    HsServiceRend,$/;"	e	enum:Circuit::Purpose
HttpHttpsProxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    HttpHttpsProxy = 2, \/**< Use HTTP proxy for both dir and OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/server.html	/^  <td>ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑÿ™ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÅŸàÿ±Ÿä ŸÖÿ´ŸÑ MSN Messenger, AIM, ICQ, Ÿà Jabber<\/td>$/;"	v
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^  <td>–û–±–º–µ–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Ç–∞–∫–∏–µ –∫–∞–∫ MSN Messenger, AIM, ICQ, –∏ Jabber<\/td>$/;"	v
ICQ	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
IDs	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  enum IDs {$/;"	g	class:FirstRunWizard	access:private
IGDdata	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.c	/^void IGDdata(void * d, const char * data, int l)$/;"	f	signature:(void * d, const char * data, int l)
IGDdata	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^void IGDdata(void *, const char *, int);$/;"	p	signature:(void *, const char *, int)
IGDdatas	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^struct IGDdatas {$/;"	s
IGDdatas::CIF	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service CIF;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
IGDdatas::cureltname	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char cureltname[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas	access:public
IGDdatas::first	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service first;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
IGDdatas::level	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	int level;$/;"	m	struct:IGDdatas	access:public
IGDdatas::second	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service second;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
IGDdatas::tmp	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service tmp;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
IGDdatas::urlbase	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char urlbase[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas	access:public
IGDdatas_service	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^struct IGDdatas_service {$/;"	s
IGDdatas_service::controlurl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char controlurl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
IGDdatas_service::eventsuburl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char eventsuburl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
IGDdatas_service::scpdurl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char scpdurl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
IGDdatas_service::servicetype	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char servicetype[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
IGDendelt	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.c	/^void IGDendelt(void * d, const char * name, int l)$/;"	f	signature:(void * d, const char * name, int l)
IGDendelt	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^void IGDendelt(void *, const char *, int);$/;"	p	signature:(void *, const char *, int)
IGDstartelt	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.c	/^void IGDstartelt(void * d, const char * name, int l)$/;"	f	signature:(void * d, const char * name, int l)
IGDstartelt	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^void IGDstartelt(void *, const char *, int);$/;"	p	signature:(void *, const char *, int)
IHDR	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/zw.png	/^/;"	v
IMAGE_ADVANCED	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_ADVANCED /;"	d	file:
IMAGE_APPEARANCE	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_APPEARANCE /;"	d	file:
IMAGE_GENERAL	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_GENERAL /;"	d	file:
IMAGE_HELP	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_HELP /;"	d	file:
IMAGE_NETWORK	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_NETWORK /;"	d	file:
IMAGE_SERVER	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_SERVER /;"	d	file:
IMAGE_SERVICE	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^#define IMAGE_SERVICE /;"	d	file:
IMG_ABOUT	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_ABOUT /;"	d	file:
IMG_AREA_GRAPH	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define IMG_AREA_GRAPH /;"	d	file:
IMG_BWGRAPH	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_BWGRAPH /;"	d	file:
IMG_CLOSE	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define IMG_CLOSE /;"	d	file:
IMG_CONFIG	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_CONFIG /;"	d	file:
IMG_CONTROL_PANEL	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_CONTROL_PANEL /;"	d	file:
IMG_COPY	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^#define IMG_COPY /;"	d	file:
IMG_COPY	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^#define IMG_COPY /;"	d	file:
IMG_COPY	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^#define IMG_COPY /;"	d	file:
IMG_DETACH	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^#define IMG_DETACH /;"	d	file:
IMG_EXIT	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_EXIT /;"	d	file:
IMG_FLAG_UNKNOWN	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_FLAG_UNKNOWN /;"	d	file:
IMG_HEIGHT	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define IMG_HEIGHT /;"	d	file:
IMG_HELP	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_HELP /;"	d	file:
IMG_IDENTITY	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_IDENTITY /;"	d	file:
IMG_LINE_GRAPH	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define IMG_LINE_GRAPH /;"	d	file:
IMG_MESSAGELOG	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_MESSAGELOG /;"	d	file:
IMG_MOVE	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define IMG_MOVE /;"	d	file:
IMG_NETWORK	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_NETWORK /;"	d	file:
IMG_NODE_HIGH_BW	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_HIGH_BW /;"	d	file:
IMG_NODE_LOW_BW	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_LOW_BW /;"	d	file:
IMG_NODE_MED_BW	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_MED_BW /;"	d	file:
IMG_NODE_NO_BW	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_NO_BW /;"	d	file:
IMG_NODE_OFFLINE	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_OFFLINE /;"	d	file:
IMG_NODE_SLEEPING	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define IMG_NODE_SLEEPING /;"	d	file:
IMG_START_TOR_16	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_START_TOR_16 /;"	d	file:
IMG_START_TOR_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_START_TOR_48 /;"	d	file:
IMG_STOP_TOR_16	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_STOP_TOR_16 /;"	d	file:
IMG_STOP_TOR_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_STOP_TOR_48 /;"	d	file:
IMG_TOR_RUNNING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_RUNNING /;"	d	file:
IMG_TOR_RUNNING_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_RUNNING_48 /;"	d	file:
IMG_TOR_STARTING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STARTING /;"	d	file:
IMG_TOR_STARTING_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STARTING_48 /;"	d	file:
IMG_TOR_STOPPED	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STOPPED /;"	d	file:
IMG_TOR_STOPPED_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STOPPED_48 /;"	d	file:
IMG_TOR_STOPPING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STOPPING /;"	d	file:
IMG_TOR_STOPPING_48	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define IMG_TOR_STOPPING_48 /;"	d	file:
IMG_WIDTH	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define IMG_WIDTH /;"	d	file:
IMG_WORLD_MAP	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define IMG_WORLD_MAP /;"	d	file:
IMG_ZOOM	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^#define IMG_ZOOM /;"	d	file:
IMG_ZOOM	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^#define IMG_ZOOM /;"	d	file:
IMG_ZOOMIN	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define IMG_ZOOMIN /;"	d	file:
IMG_ZOOMOUT	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define IMG_ZOOMOUT /;"	d	file:
INCIDENTAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES $/;"	v
INCIDENTAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,$/;"	v
INCIDENTAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,$/;"	v
INCLUDING	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT$/;"	v
INCLUDING	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED $/;"	v
INCLUDING	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY$/;"	v
INDIRECT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES $/;"	v
INDIRECT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,$/;"	v
INDIRECT	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,$/;"	v
IP_REGEXP	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^#define IP_REGEXP /;"	d	file:
IS_VALID_LATITUDE	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^#define IS_VALID_LATITUDE(/;"	d	file:
IS_VALID_LONGITUDE	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^#define IS_VALID_LONGITUDE(/;"	d	file:
IS_WHITE_SPACE	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^#define IS_WHITE_SPACE(/;"	d
IconPosition	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  enum IconPosition {$/;"	g	class:VidaliaSettings	access:public
IconRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    IconRole = Qt::UserRole,$/;"	e	enum:StatusEventItem::DataRole
IdentityMismatch	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    IdentityMismatch,$/;"	e	enum:tc::ConnectionStatusReason
IdleState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    IdleState,$/;"	e	enum:UPNPControl::UPNPState
Info	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Info,       \/**< Primarily program flow output. *\/$/;"	e	enum:Log::LogLevel
Info	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Info       = (1u<<3),  \/**< Info level log message. *\/$/;"	e	enum:LogEvent::Severity
InfoSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    InfoSeverity   = (1u<<3), \/**< Verbose events that can occur frequently. *\/$/;"	e	enum:tc::Severity
InstallUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    InstallUpdates,$/;"	e	enum:UpdateProcess::UpdateCommand
InstallUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^    InstallUpdatesLater = 101,$/;"	e	enum:UpdatesAvailableDialog::UpdatesAvailableDialogExitCode
InstallUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^    InstallUpdatesNow   = 100,$/;"	e	enum:UpdatesAvailableDialog::UpdatesAvailableDialogExitCode
InstallingUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    InstallingUpdates,$/;"	e	enum:UpdateProgressDialog::Status
Integer	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Integer,$/;"	e	enum:TorOpt::OptType
Internet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/bridges.html	/^uncensored area of the Internet, and then click on <i>Help censored users<\/i>$/;"	v
Internet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pt_BR/bridges.html	/^o Tor em uma √°rea n√£o censurada da Internet, e cliquem em <i>Ajudar usu√°rios$/;"	v
Internet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/bridges.html	/^uncensored area of the Internet, and then click on <i>Help censored users<\/i>$/;"	v
Internetu	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/bridges.html	/^i Tora na niecenzurowanym obszarze Internetu, a potem kliknij na <i>Pom√≥≈º$/;"	v
IntroPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    IntroPageID = 0,$/;"	e	enum:FirstRunWizard::IDs
IpValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::IpValidator(QObject *parent)$/;"	f	class:IpValidator	signature:(QObject *parent)
IpValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  IpValidator(QObject *parent);$/;"	p	class:IpValidator	access:public	signature:(QObject *parent)
IpValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^class IpValidator : public QRegExpValidator$/;"	c	inherits:QRegExpValidator
IpValidator::IpValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::IpValidator(QObject *parent)$/;"	f	class:IpValidator	signature:(QObject *parent)
IpValidator::IpValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  IpValidator(QObject *parent);$/;"	p	class:IpValidator	access:public	signature:(QObject *parent)
IpValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::validate(QString &input) const$/;"	f	class:IpValidator	signature:(QString &input) const
IpValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::validate(QString &input, int &pos) const$/;"	f	class:IpValidator	signature:(QString &input, int &pos) const
IpValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  QValidator::State validate(QString &input) const;$/;"	p	class:IpValidator	access:public	signature:(QString &input) const
IpValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:IpValidator	access:public	signature:(QString &input, int &pos) const
IsInternal	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    IsInternal   = 0x0002,$/;"	e	enum:Circuit::BuildFlag
IspDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    IspDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
JI	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/gr.png	/^/;"	v
K	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/md.png	/^/;"	v
K	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/pl.png	/^/;"	v
Kansio	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/config.html	/^    Kansio, jossa Tor s√§ilytt√§√§ tallentamansa tiedon kuten Tor-reititin tietoja, reititin avaimia ja asetustiedostoja voidaan m√§√§ritt√§√§. Jos t√§m√§n kehyksen j√§tt√§√§ tyhj√§ksi, Tor-ohjelma k√§ytt√§√§ omaa oletustietojen tallennuskansiota.$/;"	v
Konfiguarionsdatei	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    speziellen Konfiguarionsdatei, <i>torrc<\/i>, auszuf&uuml;hren.$/;"	v
LEFT_PANE_INDEX	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define LEFT_PANE_INDEX /;"	d	file:
LIABILITY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT $/;"	v
LIABILITY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,$/;"	v
LIABILITY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT$/;"	v
LIABILITY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR$/;"	v
LIBSPEC	/Users/chiiph/Code/vidalia/src/miniupnpc/declspec.h	/^		#define LIBSPEC /;"	d
LIBSPEC	/Users/chiiph/Code/vidalia/src/miniupnpc/declspec.h	/^	#define LIBSPEC$/;"	d
LIST_EMPTY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_EMPTY(/;"	d
LIST_END	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_END(/;"	d
LIST_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_ENTRY(/;"	d
LIST_FIRST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_FIRST(/;"	d
LIST_FOREACH	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_FOREACH(/;"	d
LIST_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_HEAD(/;"	d
LIST_HEAD_INITIALIZER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_HEAD_INITIALIZER(/;"	d
LIST_INIT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_INIT(/;"	d
LIST_INSERT_AFTER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_INSERT_AFTER(/;"	d
LIST_INSERT_BEFORE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_INSERT_BEFORE(/;"	d
LIST_INSERT_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_INSERT_HEAD(/;"	d
LIST_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	LIST_NEXT(/;"	d
LIST_REMOVE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_REMOVE(/;"	d
LIST_REPLACE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define LIST_REPLACE(/;"	d
LOAD_SERVICE_FN	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^#define LOAD_SERVICE_FN(/;"	d	file:
LOGFILE_MODE	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^#define LOGFILE_MODE /;"	d	file:
LPPROCESSENTRY32	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^#undef LPPROCESSENTRY32$/;"	d	file:
LanguageSupport	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^class LanguageSupport$/;"	c
LanguageSupport::defaultLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::defaultLanguageCode()$/;"	f	class:LanguageSupport	signature:()
LanguageSupport::defaultLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString defaultLanguageCode();$/;"	p	class:LanguageSupport	access:public	signature:()
LanguageSupport::isValidLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::isValidLanguageCode(const QString &languageCode)$/;"	f	class:LanguageSupport	signature:(const QString &languageCode)
LanguageSupport::isValidLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static bool isValidLanguageCode(const QString &languageCode);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageCode)
LanguageSupport::languageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageCode(const QString &languageName)$/;"	f	class:LanguageSupport	signature:(const QString &languageName)
LanguageSupport::languageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString languageCode(const QString &languageName);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageName)
LanguageSupport::languageCodes	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageCodes()$/;"	f	class:LanguageSupport	signature:()
LanguageSupport::languageCodes	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QStringList languageCodes();$/;"	p	class:LanguageSupport	access:public	signature:()
LanguageSupport::languageName	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageName(const QString &languageCode)$/;"	f	class:LanguageSupport	signature:(const QString &languageCode)
LanguageSupport::languageName	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString languageName(const QString &languageCode);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageCode)
LanguageSupport::languageNames	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageNames()$/;"	f	class:LanguageSupport	signature:()
LanguageSupport::languageNames	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QStringList languageNames();$/;"	p	class:LanguageSupport	access:public	signature:()
LanguageSupport::languages	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languages()$/;"	f	class:LanguageSupport	signature:()
LanguageSupport::languages	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QMap<QString, QString> languages();$/;"	p	class:LanguageSupport	access:public	signature:()
Launched	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Launched,  \/**< Circuit ID assigned to new circuit *\/$/;"	e	enum:Circuit::Status
License	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^the Free Software Foundation; either version 2 of the License, or (at$/;"	v
License	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^version 3 of the License, or (at your option) any later version.$/;"	v
LicenseDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.cpp	/^LicenseDialog::LicenseDialog(QWidget *parent)$/;"	f	class:LicenseDialog	signature:(QWidget *parent)
LicenseDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  LicenseDialog(QWidget *parent = 0);$/;"	p	class:LicenseDialog	access:public	signature:(QWidget *parent = 0)
LicenseDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^class LicenseDialog : public QDialog$/;"	c	inherits:QDialog
LicenseDialog::LicenseDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.cpp	/^LicenseDialog::LicenseDialog(QWidget *parent)$/;"	f	class:LicenseDialog	signature:(QWidget *parent)
LicenseDialog::LicenseDialog	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  LicenseDialog(QWidget *parent = 0);$/;"	p	class:LicenseDialog	access:public	signature:(QWidget *parent = 0)
LicenseDialog::loadHtml	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.cpp	/^LicenseDialog::loadHtml(const QString &source) const$/;"	f	class:LicenseDialog	signature:(const QString &source) const
LicenseDialog::loadHtml	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  virtual QString loadHtml(const QString &source) const;$/;"	p	class:LicenseDialog	access:protected	signature:(const QString &source) const
LicenseDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  Ui::LicenseDialog ui;$/;"	m	class:LicenseDialog	access:private
LineList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    LineList,$/;"	e	enum:TorOpt::OptType
LoadingAuthorityCertificates	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingAuthorityCertificates,$/;"	e	enum:BootstrapStatus::Status
LoadingDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingDescriptors,$/;"	e	enum:BootstrapStatus::Status
LoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    LoadingNetworkStatus,$/;"	e	enum:BootstrapStatus::Status
Local8BitStringValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::Local8BitStringValidator(QObject *parent)$/;"	f	class:Local8BitStringValidator	signature:(QObject *parent)
Local8BitStringValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  Local8BitStringValidator(QObject *parent);$/;"	p	class:Local8BitStringValidator	access:public	signature:(QObject *parent)
Local8BitStringValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^class Local8BitStringValidator : public QValidator$/;"	c	inherits:QValidator
Local8BitStringValidator::Local8BitStringValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::Local8BitStringValidator(QObject *parent)$/;"	f	class:Local8BitStringValidator	signature:(QObject *parent)
Local8BitStringValidator::Local8BitStringValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  Local8BitStringValidator(QObject *parent);$/;"	p	class:Local8BitStringValidator	access:public	signature:(QObject *parent)
Local8BitStringValidator::_codec	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  QTextCodec* _codec;$/;"	m	class:Local8BitStringValidator	access:private
Local8BitStringValidator::canEncode	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::canEncode(const QString &input)$/;"	f	class:Local8BitStringValidator	signature:(const QString &input)
Local8BitStringValidator::canEncode	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  static bool canEncode(const QString &input);$/;"	p	class:Local8BitStringValidator	access:public	signature:(const QString &input)
Local8BitStringValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::validate(QString &input, int &pos) const$/;"	f	class:Local8BitStringValidator	signature:(QString &input, int &pos) const
Local8BitStringValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:Local8BitStringValidator	access:public	signature:(QString &input, int &pos) const
Log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::Log()$/;"	f	class:Log	signature:()
Log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  Log();$/;"	p	class:Log	access:public	signature:()
Log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^class Log$/;"	c
Log::Debug	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Debug = 0,  \/**< Verbose debugging output. *\/$/;"	e	enum:Log::LogLevel
Log::Error	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Error,      \/**< Critical, non-recoverable errors. *\/$/;"	e	enum:Log::LogLevel
Log::Info	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Info,       \/**< Primarily program flow output. *\/$/;"	e	enum:Log::LogLevel
Log::Log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::Log()$/;"	f	class:Log	signature:()
Log::Log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  Log();$/;"	p	class:Log	access:public	signature:()
Log::LogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  enum LogLevel {$/;"	g	class:Log	access:public
Log::LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^class Log::LogMessage$/;"	c	class:Log
Log::LogMessage::LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage(Log::LogLevel t, QIODevice *o)$/;"	f	class:Log::LogMessage	access:public	signature:(Log::LogLevel t, QIODevice *o)
Log::LogMessage::LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage(const LogMessage &o)$/;"	f	class:Log::LogMessage	access:public	signature:(const LogMessage &o)
Log::LogMessage::Stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  struct Stream {$/;"	s	class:Log::LogMessage	access:public
Log::LogMessage::Stream::Stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Stream(Log::LogLevel t, QIODevice *o)$/;"	f	struct:Log::LogMessage::Stream	access:public	signature:(Log::LogLevel t, QIODevice *o)
Log::LogMessage::Stream::buf	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    QString buf;$/;"	m	struct:Log::LogMessage::Stream	access:public
Log::LogMessage::Stream::out	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    QIODevice *out;$/;"	m	struct:Log::LogMessage::Stream	access:public
Log::LogMessage::Stream::ref	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    int ref;$/;"	m	struct:Log::LogMessage::Stream	access:public
Log::LogMessage::Stream::type	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Log::LogLevel type;$/;"	m	struct:Log::LogMessage::Stream	access:public
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QHostAddress &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QHostAddress &a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QString &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QString &a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QStringList &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QStringList &a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(int a)$/;"	f	class:Log::LogMessage	access:public	signature:(int a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(long a)$/;"	f	class:Log::LogMessage	access:public	signature:(long a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(qlonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qlonglong a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(qulonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qulonglong a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(short a)$/;"	f	class:Log::LogMessage	access:public	signature:(short a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(uint a)$/;"	f	class:Log::LogMessage	access:public	signature:(uint a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(ulong a)$/;"	f	class:Log::LogMessage	access:public	signature:(ulong a)
Log::LogMessage::arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(ushort a)$/;"	f	class:Log::LogMessage	access:public	signature:(ushort a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QHostAddress &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QHostAddress &a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QString &t)$/;"	f	class:Log::LogMessage	access:public	signature:(const QString &t)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QStringList &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QStringList &a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(int a)$/;"	f	class:Log::LogMessage	access:public	signature:(int a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(long a)$/;"	f	class:Log::LogMessage	access:public	signature:(long a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(qlonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qlonglong a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(qulonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qulonglong a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(short a)$/;"	f	class:Log::LogMessage	access:public	signature:(short a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(uint a)$/;"	f	class:Log::LogMessage	access:public	signature:(uint a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(ulong a)$/;"	f	class:Log::LogMessage	access:public	signature:(ulong a)
Log::LogMessage::operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(ushort a)$/;"	f	class:Log::LogMessage	access:public	signature:(ushort a)
Log::LogMessage::stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  } *stream;$/;"	m	class:Log::LogMessage	typeref:struct:Log::LogMessage::Stream	access:public
Log::LogMessage::toString	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::LogMessage::toString() const$/;"	f	class:Log::LogMessage	signature:() const
Log::LogMessage::toString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline QString toString() const;$/;"	p	class:Log::LogMessage	access:public	signature:() const
Log::LogMessage::~LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::LogMessage::~LogMessage()$/;"	f	class:Log::LogMessage	signature:()
Log::LogMessage::~LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  ~LogMessage();$/;"	p	class:Log::LogMessage	access:public	signature:()
Log::Notice	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Notice,     \/**< Non-failure (but important) events. *\/$/;"	e	enum:Log::LogLevel
Log::Off	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Off,        \/**< No logging output. *\/$/;"	e	enum:Log::LogLevel
Log::Unknown	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Unknown     \/**< Unknown\/invalid log level. *\/$/;"	e	enum:Log::LogLevel
Log::Warn	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Warn,       \/**< Recoverable failure conditions. *\/$/;"	e	enum:Log::LogLevel
Log::_logFile	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  QFile _logFile;     \/**< Log output destination. *\/$/;"	m	class:Log	access:private
Log::_logLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  LogLevel _logLevel; \/**< Minimum log severity level. *\/$/;"	m	class:Log	access:private
Log::close	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::close()$/;"	f	class:Log	signature:()
Log::close	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  void close();$/;"	p	class:Log	access:public	signature:()
Log::errorString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  QString errorString() { return _logFile.errorString(); }$/;"	f	class:Log	access:public	signature:()
Log::isOpen	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool isOpen() { return _logFile.isOpen() && _logFile.isWritable(); }$/;"	f	class:Log	access:public	signature:()
Log::log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::log(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
Log::log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::log(LogLevel level, QString msg)$/;"	f	class:Log	signature:(LogLevel level, QString msg)
Log::log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  LogMessage log(LogLevel level, QString message);$/;"	p	class:Log	access:public	signature:(LogLevel level, QString message)
Log::log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage log(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
Log::logLevelToString	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::logLevelToString(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
Log::logLevelToString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static inline QString logLevelToString(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
Log::logLevels	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::logLevels()$/;"	f	class:Log	signature:()
Log::logLevels	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static QStringList logLevels();$/;"	p	class:Log	access:public	signature:()
Log::open	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::open(FILE *file)$/;"	f	class:Log	signature:(FILE *file)
Log::open	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::open(QString file)$/;"	f	class:Log	signature:(QString file)
Log::open	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool open(FILE *file);$/;"	p	class:Log	access:public	signature:(FILE *file)
Log::open	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool open(QString file);$/;"	p	class:Log	access:public	signature:(QString file)
Log::setLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::setLogLevel(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
Log::setLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  void setLogLevel(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
Log::stringToLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::stringToLogLevel(QString str)$/;"	f	class:Log	signature:(QString str)
Log::stringToLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static LogLevel stringToLogLevel(QString str);$/;"	p	class:Log	access:public	signature:(QString str)
Log::~Log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::~Log()$/;"	f	class:Log	signature:()
Log::~Log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  ~Log();$/;"	p	class:Log	access:public	signature:()
LogColumns	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  enum LogColumns {$/;"	g	class:LogTreeWidget	access:public
LogDebug	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogDebug      = (1u << 1),$/;"	e	enum:TorEvents::Event
LogError	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogError      = (1u << 5),$/;"	e	enum:TorEvents::Event
LogEvent	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::LogEvent(Severity severity, QString message)$/;"	f	class:LogEvent	signature:(Severity severity, QString message)
LogEvent	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  LogEvent(Severity severity, QString message);$/;"	p	class:LogEvent	access:public	signature:(Severity severity, QString message)
LogEvent	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^class LogEvent : public QEvent$/;"	c	inherits:QEvent
LogEvent::Debug	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Debug      = (1u<<4),  \/**< Debug level log message. *\/$/;"	e	enum:LogEvent::Severity
LogEvent::Error	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Error      = (1u<<0)   \/**< Error level log message. *\/$/;"	e	enum:LogEvent::Severity
LogEvent::Info	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Info       = (1u<<3),  \/**< Info level log message. *\/$/;"	e	enum:LogEvent::Severity
LogEvent::LogEvent	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::LogEvent(Severity severity, QString message)$/;"	f	class:LogEvent	signature:(Severity severity, QString message)
LogEvent::LogEvent	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  LogEvent(Severity severity, QString message);$/;"	p	class:LogEvent	access:public	signature:(Severity severity, QString message)
LogEvent::Notice	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Notice     = (1u<<2),  \/**< Notice level log message. *\/$/;"	e	enum:LogEvent::Severity
LogEvent::Severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  enum Severity {$/;"	g	class:LogEvent	access:public
LogEvent::Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Unknown = 0,$/;"	e	enum:LogEvent::Severity
LogEvent::Warn	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Warn       = (1u<<1),  \/**< Warn level log message. *\/$/;"	e	enum:LogEvent::Severity
LogEvent::_message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  QString  _message;$/;"	m	class:LogEvent	access:private
LogEvent::_severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  Severity _severity;$/;"	m	class:LogEvent	access:private
LogEvent::message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::message() const$/;"	f	class:LogEvent	signature:() const
LogEvent::message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  QString message() const;$/;"	p	class:LogEvent	access:public	signature:() const
LogEvent::severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::severity() const$/;"	f	class:LogEvent	signature:() const
LogEvent::severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  Severity severity() const;$/;"	p	class:LogEvent	access:public	signature:() const
LogEvent::severityToString	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::severityToString(Severity s)$/;"	f	class:LogEvent	signature:(Severity s)
LogEvent::severityToString	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  static QString severityToString(Severity severity);$/;"	p	class:LogEvent	access:public	signature:(Severity severity)
LogEvent::toSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::toSeverity(QString strSeverity)$/;"	f	class:LogEvent	signature:(QString strSeverity)
LogEvent::toSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  static Severity toSeverity(QString strSeverity);$/;"	p	class:LogEvent	access:public	signature:(QString strSeverity)
LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::LogFile()$/;"	f	class:LogFile	signature:()
LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  LogFile();$/;"	p	class:LogFile	access:public	signature:()
LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^class LogFile : QObject$/;"	c	inherits:QObject
LogFile::LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::LogFile()$/;"	f	class:LogFile	signature:()
LogFile::LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  LogFile();$/;"	p	class:LogFile	access:public	signature:()
LogFile::_file	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QFile* _file;        \/**< The log file. *\/$/;"	m	class:LogFile	access:private
LogFile::_stream	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QTextStream _stream; \/**< Stream used to write to the log file. *\/$/;"	m	class:LogFile	access:private
LogFile::close	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::close()$/;"	f	class:LogFile	signature:()
LogFile::close	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  void close();$/;"	p	class:LogFile	access:public	signature:()
LogFile::createPathToFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::createPathToFile(QString filename)$/;"	f	class:LogFile	signature:(QString filename)
LogFile::createPathToFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool createPathToFile(QString filename);$/;"	p	class:LogFile	access:private	signature:(QString filename)
LogFile::filename	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::filename()$/;"	f	class:LogFile	signature:()
LogFile::filename	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QString filename();$/;"	p	class:LogFile	access:public	signature:()
LogFile::isOpen	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::isOpen()$/;"	f	class:LogFile	signature:()
LogFile::isOpen	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool isOpen();$/;"	p	class:LogFile	access:public	signature:()
LogFile::open	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::open(QString filename, QString *errmsg)$/;"	f	class:LogFile	signature:(QString filename, QString *errmsg)
LogFile::open	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool open(QString filename, QString *errmsg = 0);$/;"	p	class:LogFile	access:public	signature:(QString filename, QString *errmsg = 0)
LogFile::operator <<	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::operator<<(const QString &s)$/;"	f	class:LogFile	signature:(const QString &s)
LogFile::operator <<	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  LogFile& operator<<(const QString &s);$/;"	p	class:LogFile	access:public	signature:(const QString &s)
LogFile::~LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::~LogFile()$/;"	f	class:LogFile	signature:()
LogFile::~LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  ~LogFile();$/;"	p	class:LogFile	access:public	signature:()
LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::LogFilter(uint filter)$/;"	f	class:LogFilter	signature:(uint filter)
LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilter(uint filter);$/;"	p	class:LogFilter	access:public	signature:(uint filter)
LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^class LogFilter {$/;"	c
LogFilter::LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::LogFilter(uint filter)$/;"	f	class:LogFilter	signature:(uint filter)
LogFilter::LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilter(uint filter);$/;"	p	class:LogFilter	access:public	signature:(uint filter)
LogFilter::_filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  uint _filter;$/;"	m	class:LogFilter	access:private
LogFilter::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::eval(tc::Severity type, const QString &message) const$/;"	f	class:LogFilter	signature:(tc::Severity type, const QString &message) const
LogFilter::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  virtual bool eval(tc::Severity type, const QString& message) const;$/;"	p	class:LogFilter	access:public	signature:(tc::Severity type, const QString& message) const
LogFilter::~LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::~LogFilter()$/;"	f	class:LogFilter	signature:()
LogFilter::~LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  virtual ~LogFilter();$/;"	p	class:LogFilter	access:public	signature:()
LogFilterRegExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterRegExp::LogFilterRegExp(const QRegExp &exp, uint filter)$/;"	f	class:LogFilterRegExp	signature:(const QRegExp &exp, uint filter)
LogFilterRegExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilterRegExp(const QRegExp& exp, uint filter);$/;"	p	class:LogFilterRegExp	access:public	signature:(const QRegExp& exp, uint filter)
LogFilterRegExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^class LogFilterRegExp : public LogFilter {$/;"	c	inherits:LogFilter
LogFilterRegExp::LogFilterRegExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterRegExp::LogFilterRegExp(const QRegExp &exp, uint filter)$/;"	f	class:LogFilterRegExp	signature:(const QRegExp &exp, uint filter)
LogFilterRegExp::LogFilterRegExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilterRegExp(const QRegExp& exp, uint filter);$/;"	p	class:LogFilterRegExp	access:public	signature:(const QRegExp& exp, uint filter)
LogFilterRegExp::_regExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  QRegExp _regExp;$/;"	m	class:LogFilterRegExp	access:private
LogFilterRegExp::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterRegExp::eval(tc::Severity type, const QString &message) const$/;"	f	class:LogFilterRegExp	signature:(tc::Severity type, const QString &message) const
LogFilterRegExp::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  bool eval(tc::Severity type, const QString &message) const;$/;"	p	class:LogFilterRegExp	access:public	signature:(tc::Severity type, const QString &message) const
LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::LogFilterSearchTerm(const QString &term, uint filter)$/;"	f	class:LogFilterSearchTerm	signature:(const QString &term, uint filter)
LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilterSearchTerm(const QString& term, uint filter);$/;"	p	class:LogFilterSearchTerm	access:public	signature:(const QString& term, uint filter)
LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^class LogFilterSearchTerm : public LogFilter {$/;"	c	inherits:LogFilter
LogFilterSearchTerm::ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^class LogFilterSearchTerm::ExpTree {$/;"	c	class:LogFilterSearchTerm	file:
LogFilterSearchTerm::ExpTree::ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree(const QString& value=QString())$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:(const QString& value=QString())
LogFilterSearchTerm::ExpTree::_invert	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  bool _invert;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
LogFilterSearchTerm::ExpTree::_left	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree * _left;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
LogFilterSearchTerm::ExpTree::_right	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree * _right;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
LogFilterSearchTerm::ExpTree::_value	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  QString _value;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
LogFilterSearchTerm::ExpTree::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  bool eval(const QString& input)$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:(const QString& input)
LogFilterSearchTerm::ExpTree::~ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ~ExpTree()$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:()
LogFilterSearchTerm::LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::LogFilterSearchTerm(const QString &term, uint filter)$/;"	f	class:LogFilterSearchTerm	signature:(const QString &term, uint filter)
LogFilterSearchTerm::LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  LogFilterSearchTerm(const QString& term, uint filter);$/;"	p	class:LogFilterSearchTerm	access:public	signature:(const QString& term, uint filter)
LogFilterSearchTerm::_expressionTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  ExpTree * _expressionTree;$/;"	m	class:LogFilterSearchTerm	access:private
LogFilterSearchTerm::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::eval(tc::Severity type, const QString &msg) const$/;"	f	class:LogFilterSearchTerm	signature:(tc::Severity type, const QString &msg) const
LogFilterSearchTerm::eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  bool eval(tc::Severity type, const QString &message) const;$/;"	p	class:LogFilterSearchTerm	access:public	signature:(tc::Severity type, const QString &message) const
LogFilterSearchTerm::parseString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::parseString(const QString& input)$/;"	f	class:LogFilterSearchTerm	signature:(const QString& input)
LogFilterSearchTerm::parseString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  void parseString(const QString& input);$/;"	p	class:LogFilterSearchTerm	access:private	signature:(const QString& input)
LogFilterSearchTerm::~LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::~LogFilterSearchTerm()$/;"	f	class:LogFilterSearchTerm	signature:()
LogFilterSearchTerm::~LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  ~LogFilterSearchTerm();$/;"	p	class:LogFilterSearchTerm	access:public	signature:()
LogHeaderView	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^LogHeaderView::LogHeaderView(QWidget *parent)$/;"	f	class:LogHeaderView	signature:(QWidget *parent)
LogHeaderView	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^  LogHeaderView(QWidget *parent);$/;"	p	class:LogHeaderView	access:public	signature:(QWidget *parent)
LogHeaderView	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^class LogHeaderView : public QHeaderView$/;"	c	inherits:QHeaderView
LogHeaderView::LogHeaderView	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^LogHeaderView::LogHeaderView(QWidget *parent)$/;"	f	class:LogHeaderView	signature:(QWidget *parent)
LogHeaderView::LogHeaderView	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^  LogHeaderView(QWidget *parent);$/;"	p	class:LogHeaderView	access:public	signature:(QWidget *parent)
LogHeaderView::resetColumnWidths	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^LogHeaderView::resetColumnWidths()$/;"	f	class:LogHeaderView	signature:()
LogHeaderView::resetColumnWidths	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^  void resetColumnWidths();$/;"	p	class:LogHeaderView	access:public	signature:()
LogInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogInfo       = (1u << 2),$/;"	e	enum:TorEvents::Event
LogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  enum LogLevel {$/;"	g	class:Log	access:public
LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage(Log::LogLevel t, QIODevice *o)$/;"	f	class:Log::LogMessage	access:public	signature:(Log::LogLevel t, QIODevice *o)
LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage(const LogMessage &o)$/;"	f	class:Log::LogMessage	access:public	signature:(const LogMessage &o)
LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^class Log::LogMessage$/;"	c	class:Log
LogMessageColumnDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.cpp	/^LogMessageColumnDelegate::LogMessageColumnDelegate(QObject *parent)$/;"	f	class:LogMessageColumnDelegate	signature:(QObject *parent)
LogMessageColumnDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^  LogMessageColumnDelegate(QObject *parent = 0);$/;"	p	class:LogMessageColumnDelegate	access:public	signature:(QObject *parent = 0)
LogMessageColumnDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^class LogMessageColumnDelegate : public QItemDelegate$/;"	c	inherits:QItemDelegate
LogMessageColumnDelegate::LogMessageColumnDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.cpp	/^LogMessageColumnDelegate::LogMessageColumnDelegate(QObject *parent)$/;"	f	class:LogMessageColumnDelegate	signature:(QObject *parent)
LogMessageColumnDelegate::LogMessageColumnDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^  LogMessageColumnDelegate(QObject *parent = 0);$/;"	p	class:LogMessageColumnDelegate	access:public	signature:(QObject *parent = 0)
LogMessageColumnDelegate::paint	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.cpp	/^LogMessageColumnDelegate::paint(QPainter *painter,$/;"	f	class:LogMessageColumnDelegate	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
LogMessageColumnDelegate::paint	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^  virtual void paint(QPainter *painter,$/;"	p	class:LogMessageColumnDelegate	access:public	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
LogNotice	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogNotice     = (1u << 3),$/;"	e	enum:TorEvents::Event
LogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::LogTreeItem(tc::Severity type, const QString &message,$/;"	f	class:LogTreeItem	signature:(tc::Severity type, const QString &message, const QDateTime &timestamp)
LogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  LogTreeItem(tc::Severity type, const QString &message,$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity type, const QString &message, const QDateTime &timestamp = QDateTime::currentDateTime())
LogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^class LogTreeItem : public QTreeWidgetItem$/;"	c	inherits:QTreeWidgetItem
LogTreeItem::LogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::LogTreeItem(tc::Severity type, const QString &message,$/;"	f	class:LogTreeItem	signature:(tc::Severity type, const QString &message, const QDateTime &timestamp)
LogTreeItem::LogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  LogTreeItem(tc::Severity type, const QString &message,$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity type, const QString &message, const QDateTime &timestamp = QDateTime::currentDateTime())
LogTreeItem::_seqnum	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  quint32 _seqnum;  \/**< Sequence number used to disambiguate messages with$/;"	m	class:LogTreeItem	access:private
LogTreeItem::id	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  quint32 id() const { return _seqnum; }$/;"	f	class:LogTreeItem	access:public	signature:() const
LogTreeItem::message	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::message() const$/;"	f	class:LogTreeItem	signature:() const
LogTreeItem::message	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QString message() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
LogTreeItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:LogTreeItem	signature:(const QTreeWidgetItem &other) const
LogTreeItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:LogTreeItem	access:public	signature:(const QTreeWidgetItem &other) const
LogTreeItem::setMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setMessage(const QString &message)$/;"	f	class:LogTreeItem	signature:(const QString &message)
LogTreeItem::setMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setMessage(const QString &message);$/;"	p	class:LogTreeItem	access:public	signature:(const QString &message)
LogTreeItem::setSeverity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setSeverity(tc::Severity type)$/;"	f	class:LogTreeItem	signature:(tc::Severity type)
LogTreeItem::setSeverity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setSeverity(tc::Severity type);$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity type)
LogTreeItem::setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setTimestamp(const QDateTime &timestamp)$/;"	f	class:LogTreeItem	signature:(const QDateTime &timestamp)
LogTreeItem::setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setTimestamp(const QDateTime &timestamp);$/;"	p	class:LogTreeItem	access:public	signature:(const QDateTime &timestamp)
LogTreeItem::severity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::severity() const$/;"	f	class:LogTreeItem	signature:() const
LogTreeItem::severity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  tc::Severity severity() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
LogTreeItem::severityToString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::severityToString(tc::Severity severity)$/;"	f	class:LogTreeItem	signature:(tc::Severity severity)
LogTreeItem::severityToString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  static QString severityToString(tc::Severity severity);$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity severity)
LogTreeItem::timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::timestamp() const$/;"	f	class:LogTreeItem	signature:() const
LogTreeItem::timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QDateTime timestamp() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
LogTreeItem::toString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::toString() const$/;"	f	class:LogTreeItem	signature:() const
LogTreeItem::toString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QString toString() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
LogTreeWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::LogTreeWidget(QWidget *parent)$/;"	f	class:LogTreeWidget	signature:(QWidget *parent)
LogTreeWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  LogTreeWidget(QWidget *parent = 0);$/;"	p	class:LogTreeWidget	access:public	signature:(QWidget *parent = 0)
LogTreeWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^class LogTreeWidget : public QTreeWidget$/;"	c	inherits:QTreeWidget
LogTreeWidget::LogColumns	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  enum LogColumns {$/;"	g	class:LogTreeWidget	access:public
LogTreeWidget::LogTreeWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::LogTreeWidget(QWidget *parent)$/;"	f	class:LogTreeWidget	signature:(QWidget *parent)
LogTreeWidget::LogTreeWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  LogTreeWidget(QWidget *parent = 0);$/;"	p	class:LogTreeWidget	access:public	signature:(QWidget *parent = 0)
LogTreeWidget::MessageColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    MessageColumn = 2  \/**< Message text column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
LogTreeWidget::TimeColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    TimeColumn    = 0, \/**< Timestamp column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
LogTreeWidget::TypeColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    TypeColumn    = 1, \/**< Message severity type column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
LogTreeWidget::_itemHistory	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> _itemHistory;$/;"	m	class:LogTreeWidget	access:private
LogTreeWidget::_maxItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  int _maxItemCount; \/**< Maximum number of items in the tree. *\/$/;"	m	class:LogTreeWidget	access:private
LogTreeWidget::_scrollOnNewItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  bool _scrollOnNewItem; \/**< Set to true if we are to scroll to the new item$/;"	m	class:LogTreeWidget	access:private
LogTreeWidget::addLogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::addLogTreeItem(LogTreeItem *item)$/;"	f	class:LogTreeWidget	signature:(LogTreeItem *item)
LogTreeWidget::addLogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void addLogTreeItem(LogTreeItem *item);$/;"	p	class:LogTreeWidget	access:private	signature:(LogTreeItem *item)
LogTreeWidget::allMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::allMessages() const$/;"	f	class:LogTreeWidget	signature:() const
LogTreeWidget::allMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QStringList allMessages() const;$/;"	p	class:LogTreeWidget	access:public	signature:() const
LogTreeWidget::clearMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::clearMessages()$/;"	f	class:LogTreeWidget	signature:()
LogTreeWidget::clearMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void clearMessages();$/;"	p	class:LogTreeWidget	access:public	signature:()
LogTreeWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::deselectAll()$/;"	f	class:LogTreeWidget	signature:()
LogTreeWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void deselectAll();$/;"	p	class:LogTreeWidget	access:public	signature:()
LogTreeWidget::filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::filter(LogFilter * filter)$/;"	f	class:LogTreeWidget	signature:(LogFilter * filter)
LogTreeWidget::filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void filter(LogFilter * filter);$/;"	p	class:LogTreeWidget	access:public	signature:(LogFilter * filter)
LogTreeWidget::find	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::find(QString text, bool highlight)$/;"	f	class:LogTreeWidget	signature:(QString text, bool highlight)
LogTreeWidget::find	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> find(QString text, bool highlight = true);$/;"	p	class:LogTreeWidget	access:public	signature:(QString text, bool highlight = true)
LogTreeWidget::log	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::log(tc::Severity type, const QString &message)$/;"	f	class:LogTreeWidget	signature:(tc::Severity type, const QString &message)
LogTreeWidget::log	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  LogTreeItem* log(tc::Severity severity, const QString &message);$/;"	p	class:LogTreeWidget	access:public	signature:(tc::Severity severity, const QString &message)
LogTreeWidget::messageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::messageCount()$/;"	f	class:LogTreeWidget	signature:()
LogTreeWidget::messageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  int messageCount();$/;"	p	class:LogTreeWidget	access:public	signature:()
LogTreeWidget::qlist_cast	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::qlist_cast(QList<QTreeWidgetItem *> inlist) const$/;"	f	class:LogTreeWidget	signature:(QList<QTreeWidgetItem *> inlist) const
LogTreeWidget::qlist_cast	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> qlist_cast(QList<QTreeWidgetItem *> inlist) const;$/;"	p	class:LogTreeWidget	access:private	signature:(QList<QTreeWidgetItem *> inlist) const
LogTreeWidget::qlist_sort	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::qlist_sort(QList<LogTreeItem *> inlist) const$/;"	f	class:LogTreeWidget	signature:(QList<LogTreeItem *> inlist) const
LogTreeWidget::qlist_sort	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> qlist_sort(QList<LogTreeItem *> inlist) const;$/;"	p	class:LogTreeWidget	access:private	signature:(QList<LogTreeItem *> inlist) const
LogTreeWidget::selectedMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::selectedMessages() const$/;"	f	class:LogTreeWidget	signature:() const
LogTreeWidget::selectedMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QStringList selectedMessages() const;$/;"	p	class:LogTreeWidget	access:public	signature:() const
LogTreeWidget::setMaximumMessageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::setMaximumMessageCount(int max)$/;"	f	class:LogTreeWidget	signature:(int max)
LogTreeWidget::setMaximumMessageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void setMaximumMessageCount(int max);$/;"	p	class:LogTreeWidget	access:public	signature:(int max)
LogTreeWidget::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::showEvent(QShowEvent *event)$/;"	f	class:LogTreeWidget	signature:(QShowEvent *event)
LogTreeWidget::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void showEvent(QShowEvent *event);$/;"	p	class:LogTreeWidget	access:protected	signature:(QShowEvent *event)
LogTreeWidget::verticalSliderReleased	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::verticalSliderReleased()$/;"	f	class:LogTreeWidget	signature:()
LogTreeWidget::verticalSliderReleased	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void verticalSliderReleased();$/;"	p	class:LogTreeWidget	access:private	signature:()
LogWarn	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogWarn       = (1u << 4),$/;"	e	enum:TorEvents::Event
M	/Users/chiiph/Code/vidalia/src/crashreporter/res/64x64/tools-report-bug.png	/^^∞èÔ~¯&ÄJüœw>˚m∞,Î∑/;"	v
M	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bw.png	/^/;"	v
M	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/zw.png	/^/;"	v
MAKE_CREATABLE	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^#define MAKE_CREATABLE(/;"	d
MAP_BOTTOM	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_BOTTOM /;"	d	file:
MAP_HEIGHT	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_HEIGHT /;"	d	file:
MAP_LEFT	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_LEFT /;"	d	file:
MAP_ORIGIN	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_ORIGIN /;"	d	file:
MAP_RIGHT	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_RIGHT /;"	d	file:
MAP_TOP	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_TOP /;"	d	file:
MAP_WIDTH	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MAP_WIDTH /;"	d	file:
MATCH_ALL	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^#define MATCH_ALL /;"	d	file:
MATCH_ALL	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^#define MATCH_ALL /;"	d	file:
MAXHOSTNAMELEN	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define MAXHOSTNAMELEN /;"	d	file:
MAXHOSTNAMELEN	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define MAXHOSTNAMELEN /;"	d	file:
MAX_BANDWIDTH_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define MAX_BANDWIDTH_RATE /;"	d	file:
MAX_CMD_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_CMD_LEN = 32768;$/;"	m	namespace:CrashReporter
MAX_CONNECT_ATTEMPTS	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^#define MAX_CONNECT_ATTEMPTS /;"	d	file:
MAX_NICKNAME_LEN	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define MAX_NICKNAME_LEN /;"	d	file:
MAX_PATH_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_PATH_LEN = 260;$/;"	m	namespace:CrashReporter
MAX_PORT	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^#define MAX_PORT /;"	d	file:
MAX_VERSION_LEN	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  static const int MAX_VERSION_LEN = 64;$/;"	m	namespace:CrashReporter
MERGE2	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^#define MERGE2(/;"	d	file:
MIN	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define MIN(/;"	d	file:
MINIMUM_PANE_SIZE	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define MINIMUM_PANE_SIZE /;"	d	file:
MINIUPNPC_IGNORE_EINTR	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define MINIUPNPC_IGNORE_EINTR$/;"	d	file:
MINIUPNPC_IGNORE_EINTR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define MINIUPNPC_IGNORE_EINTR$/;"	d	file:
MINIUPNPC_IGNORE_EINTR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define MINIUPNPC_IGNORE_EINTR$/;"	d	file:
MINIUPNPC_URL_MAXSIZE	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^#define MINIUPNPC_URL_MAXSIZE /;"	d
MINIUPNPC_VERSION_STRING	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcstrings.h	/^#define MINIUPNPC_VERSION_STRING /;"	d
MIN_BANDWIDTH_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define MIN_BANDWIDTH_RATE /;"	d	file:
MIN_NEWIDENTITY_INTERVAL	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define MIN_NEWIDENTITY_INTERVAL /;"	d	file:
MIN_PORT	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^#define MIN_PORT /;"	d	file:
MIN_SCALE	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define MIN_SCALE /;"	d
MIN_SIZE	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define MIN_SIZE /;"	d	file:
MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::MainWindow()$/;"	f	class:MainWindow	signature:()
MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^class MainWindow : public VidaliaWindow$/;"	c	inherits:VidaliaWindow
MainWindow::Authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Authenticated,  \/**< Vidalia has authenticated to Tor. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::Authenticating	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Authenticating, \/**< Vidalia is authenticating to Tor. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::CircuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    CircuitEstablished \/**< Tor has built a circuit. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::MainWindow()$/;"	f	class:MainWindow	signature:()
MainWindow::MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
MainWindow::Started	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Started,    \/**< Tor is currently running. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::Starting	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Starting,   \/**< Tor is in the process of starting. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::Stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Stopped,    \/**< Tor is not running. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::Stopping	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Stopping,   \/**< Tor is in the process of shutting down. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::TorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  enum TorStatus {$/;"	g	class:MainWindow	access:private
MainWindow::Unset	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Unset,      \/**< Tor's status has not yet been set. *\/$/;"	e	enum:MainWindow::TorStatus
MainWindow::_actionAbout	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionAbout;$/;"	m	class:MainWindow	access:private
MainWindow::_actionBandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionBandwidthGraph;$/;"	m	class:MainWindow	access:private
MainWindow::_actionConfigure	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionConfigure;$/;"	m	class:MainWindow	access:private
MainWindow::_actionDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionDebugDialog;$/;"	m	class:MainWindow	access:private
MainWindow::_actionExit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionExit;$/;"	m	class:MainWindow	access:private
MainWindow::_actionMessageLog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionMessageLog;$/;"	m	class:MainWindow	access:private
MainWindow::_actionNetworkMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionNetworkMap;$/;"	m	class:MainWindow	access:private
MainWindow::_actionNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionNewIdentity;$/;"	m	class:MainWindow	access:private
MainWindow::_actionPanic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionPanic;$/;"	m	class:MainWindow	access:private
MainWindow::_actionReloadConfig	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionReloadConfig;$/;"	m	class:MainWindow	access:private
MainWindow::_actionRestartTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionRestartTor;$/;"	m	class:MainWindow	access:private
MainWindow::_actionShowControlPanel	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionShowControlPanel;$/;"	m	class:MainWindow	access:private
MainWindow::_actionStartStopTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionStartStopTor;$/;"	m	class:MainWindow	access:private
MainWindow::_actionStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionStatus;$/;"	m	class:MainWindow	access:private
MainWindow::_actionVidaliaHelp	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionVidaliaHelp;$/;"	m	class:MainWindow	access:private
MainWindow::_controlPassword	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _controlPassword;$/;"	m	class:MainWindow	access:private
MainWindow::_delayedShutdownStarted	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _delayedShutdownStarted;$/;"	m	class:MainWindow	access:private
MainWindow::_detachedTabMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QStringList _detachedTabMap; \/**< Map to handle detached tabs *\/$/;"	m	class:MainWindow	access:private
MainWindow::_dummy	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_dummy; \/**< Dummy action to display when there are no more tabs *\/$/;"	m	class:MainWindow	access:private
MainWindow::_engine	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  PluginEngine *_engine;$/;"	m	class:MainWindow	access:private
MainWindow::_graph	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  BandwidthGraph *_graph; \/**< Graph that draws bandwidth usage *\/$/;"	m	class:MainWindow	access:private
MainWindow::_isIntentionalExit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _isIntentionalExit;$/;"	m	class:MainWindow	access:private
MainWindow::_isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _isVidaliaRunningTor;$/;"	m	class:MainWindow	access:private
MainWindow::_messageLog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  MessageLog *_messageLog; \/**< Message log that displays a more detailed log from Tor *\/$/;"	m	class:MainWindow	access:private
MainWindow::_netViewer	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  NetViewer _netViewer; \/**< Network map that draws circuits *\/$/;"	m	class:MainWindow	access:private
MainWindow::_pressedStop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _pressedStop; \/**< True if the user has pressed the Stop Tor button *\/$/;"	m	class:MainWindow	access:private
MainWindow::_previousControlPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _previousControlPort; \/**< Holds the previous controlport used *\/$/;"	m	class:MainWindow	access:private
MainWindow::_previousSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _previousSocksPort; \/**< Holds the previous socksport used *\/$/;"	m	class:MainWindow	access:private
MainWindow::_reattachMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QMenu _reattachMenu; \/**< Menu used to handle tab re-attaching *\/$/;"	m	class:MainWindow	access:private
MainWindow::_restartTorAfterUpgrade	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _restartTorAfterUpgrade;$/;"	m	class:MainWindow	access:private
MainWindow::_startedWithPrevious	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _startedWithPrevious; \/**< True if Vidalia tried to start Tor with the previous ports *\/$/;"	m	class:MainWindow	access:private
MainWindow::_status	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorStatus _status;$/;"	m	class:MainWindow	access:private
MainWindow::_statusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  StatusTab _statusTab; \/**< Status tab that displays the load progress and a short log *\/$/;"	m	class:MainWindow	access:private
MainWindow::_tabMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QStringList _tabMap; \/**< Map to handle opened tabs *\/$/;"	m	class:MainWindow	access:private
MainWindow::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorControl* _torControl;$/;"	m	class:MainWindow	access:private
MainWindow::_trayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QSystemTrayIcon _trayIcon;$/;"	m	class:MainWindow	access:private
MainWindow::_updateProcess	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  UpdateProcess _updateProcess;$/;"	m	class:MainWindow	access:private
MainWindow::_updateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  UpdateProgressDialog _updateProgressDialog;$/;"	m	class:MainWindow	access:private
MainWindow::_updateTimer	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QTimer _updateTimer;$/;"	m	class:MainWindow	access:private
MainWindow::_useSavedPassword	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _useSavedPassword;$/;"	m	class:MainWindow	access:private
MainWindow::_wizard	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  FirstRunWizard *_wizard; \/**< Wizard displayed when running Vidalia for the first time *\/$/;"	m	class:MainWindow	access:private
MainWindow::aboutToQuit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::aboutToQuit()$/;"	f	class:MainWindow	signature:()
MainWindow::aboutToQuit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void aboutToQuit();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::addTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::addTab(VidaliaTab *tab)$/;"	f	class:MainWindow	signature:(VidaliaTab *tab)
MainWindow::addTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void addTab(VidaliaTab *tab);$/;"	p	class:MainWindow	access:private	signature:(VidaliaTab *tab)
MainWindow::attachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::attachTab()$/;"	f	class:MainWindow	signature:()
MainWindow::attachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void attachTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::authenticate	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticate()$/;"	f	class:MainWindow	signature:()
MainWindow::authenticate	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticate();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticated()$/;"	f	class:MainWindow	signature:()
MainWindow::authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticated();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticationFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
MainWindow::authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
MainWindow::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::bootstrapStatusChanged(const BootstrapStatus &bs)$/;"	f	class:MainWindow	signature:(const BootstrapStatus &bs)
MainWindow::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void bootstrapStatusChanged(const BootstrapStatus &bs);$/;"	p	class:MainWindow	access:private	signature:(const BootstrapStatus &bs)
MainWindow::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdates(bool showProgress)$/;"	f	class:MainWindow	signature:(bool showProgress)
MainWindow::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdates(bool showProgress = false);$/;"	p	class:MainWindow	access:private	signature:(bool showProgress = false)
MainWindow::checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdatesFailed(const QString &errmsg)$/;"	f	class:MainWindow	signature:(const QString &errmsg)
MainWindow::checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdatesFailed(const QString &errmsg);$/;"	p	class:MainWindow	access:private	signature:(const QString &errmsg)
MainWindow::checkForUpdatesWithUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdatesWithUi()$/;"	f	class:MainWindow	signature:()
MainWindow::checkForUpdatesWithUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdatesWithUi();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::checkTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkTorVersion()$/;"	f	class:MainWindow	signature:()
MainWindow::checkTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkTorVersion();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::circuitEstablished()$/;"	f	class:MainWindow	signature:()
MainWindow::circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void circuitEstablished();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::clockSkewed(int skew, const QString &source)$/;"	f	class:MainWindow	signature:(int skew, const QString &source)
MainWindow::clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:MainWindow	access:private	signature:(int skew, const QString &source)
MainWindow::close	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::close()$/;"	f	class:MainWindow	signature:()
MainWindow::close	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void close();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::connectFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
MainWindow::connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void connectFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
MainWindow::connectToTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::connectToTor()$/;"	f	class:MainWindow	signature:()
MainWindow::connectToTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void connectToTor();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createActions	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createActions()$/;"	f	class:MainWindow	signature:()
MainWindow::createActions	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createActions();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createConnections	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createConnections()$/;"	f	class:MainWindow	signature:()
MainWindow::createConnections	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createConnections();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createGUI	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createGUI()$/;"	f	class:MainWindow	signature:()
MainWindow::createGUI	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createGUI();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createMenuBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createMenuBar()$/;"	f	class:MainWindow	signature:()
MainWindow::createMenuBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createMenuBar();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createToolBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createToolBar()$/;"	f	class:MainWindow	signature:()
MainWindow::createToolBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createToolBar();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createTrayIcon()$/;"	f	class:MainWindow	signature:()
MainWindow::createTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createTrayIcon();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::createTrayMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createTrayMenu()$/;"	f	class:MainWindow	signature:()
MainWindow::createTrayMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QMenu* createTrayMenu();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::dangerousTorVersion(tc::TorVersionStatus reason,$/;"	f	class:MainWindow	signature:(tc::TorVersionStatus reason, const QString &current, const QStringList &recommended)
MainWindow::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:MainWindow	access:private	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
MainWindow::delTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::delTab(int index)$/;"	f	class:MainWindow	signature:(int index)
MainWindow::delTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void delTab(int index = -1);$/;"	p	class:MainWindow	access:private	signature:(int index = -1)
MainWindow::detachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::detachTab()$/;"	f	class:MainWindow	signature:()
MainWindow::detachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void detachTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::disconnect	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::disconnect()$/;"	f	class:MainWindow	signature:()
MainWindow::disconnect	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void disconnect();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::disconnected	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::disconnected()$/;"	f	class:MainWindow	signature:()
MainWindow::disconnected	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void disconnected();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::displayTorVersionWarning	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::displayTorVersionWarning()$/;"	f	class:MainWindow	signature:()
MainWindow::displayTorVersionWarning	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void displayTorVersionWarning();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::enableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::enableNetwork()$/;"	f	class:MainWindow	signature:()
MainWindow::enableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void enableNetwork();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::enableNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::enableNewIdentity()$/;"	f	class:MainWindow	signature:()
MainWindow::enableNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void enableNewIdentity();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::handleAttachedClose	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::handleAttachedClose()$/;"	f	class:MainWindow	signature:()
MainWindow::handleAttachedClose	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void handleAttachedClose();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::handleCloseTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::handleCloseTab(int index)$/;"	f	class:MainWindow	signature:(int index)
MainWindow::handleCloseTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void handleCloseTab(int index);$/;"	p	class:MainWindow	access:private	signature:(int index)
MainWindow::installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::installUpdates(UpdateProcess::BundleInfo bi)$/;"	f	class:MainWindow	signature:(UpdateProcess::BundleInfo bi)
MainWindow::installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void installUpdates(UpdateProcess::BundleInfo bi);$/;"	p	class:MainWindow	access:private	signature:(UpdateProcess::BundleInfo bi)
MainWindow::installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::installUpdatesFailed(const QString &errmsg)$/;"	f	class:MainWindow	signature:(const QString &errmsg)
MainWindow::installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void installUpdatesFailed(const QString &errmsg);$/;"	p	class:MainWindow	access:private	signature:(const QString &errmsg)
MainWindow::isTorStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::isTorStopped() const$/;"	f	class:MainWindow	signature:() const
MainWindow::isTorStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool isTorStopped() const;$/;"	p	class:MainWindow	access:public	signature:() const
MainWindow::loadControlCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::loadControlCookie(QString cookiePath)$/;"	f	class:MainWindow	signature:(QString cookiePath)
MainWindow::loadControlCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QByteArray loadControlCookie(QString cookiePath = QString());$/;"	p	class:MainWindow	access:private	signature:(QString cookiePath = QString())
MainWindow::newIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::newIdentity()$/;"	f	class:MainWindow	signature:()
MainWindow::newIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void newIdentity();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::panic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::panic()$/;"	f	class:MainWindow	signature:()
MainWindow::panic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void panic();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::restart	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::restart()$/;"	f	class:MainWindow	signature:()
MainWindow::restart	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void restart();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::retranslateUi()$/;"	f	class:MainWindow	signature:()
MainWindow::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  virtual void retranslateUi();$/;"	p	class:MainWindow	access:protected	signature:()
MainWindow::running	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::running()$/;"	f	class:MainWindow	signature:()
MainWindow::running	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void running();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::setStartupProgress	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setStartupProgress(int progressValue,$/;"	f	class:MainWindow	signature:(int progressValue, const QString &description)
MainWindow::setStartupProgress	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setStartupProgress(int percentComplete, const QString &description);$/;"	p	class:MainWindow	access:private	signature:(int percentComplete, const QString &description)
MainWindow::setStartupProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setStartupProgressVisible(bool visible)$/;"	f	class:MainWindow	signature:(bool visible)
MainWindow::setStartupProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setStartupProgressVisible(bool visible);$/;"	p	class:MainWindow	access:private	signature:(bool visible)
MainWindow::setTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setTrayIcon(const QString &iconFile)$/;"	f	class:MainWindow	signature:(const QString &iconFile)
MainWindow::setTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setTrayIcon(const QString &iconFile);$/;"	p	class:MainWindow	access:private	signature:(const QString &iconFile)
MainWindow::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setVisible(bool visible)$/;"	f	class:MainWindow	signature:(bool visible)
MainWindow::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  virtual void setVisible(bool visible);$/;"	p	class:MainWindow	access:public	signature:(bool visible)
MainWindow::showAboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showAboutDialog()$/;"	f	class:MainWindow	signature:()
MainWindow::showAboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showAboutDialog();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showBandwidthTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showBandwidthTab()$/;"	f	class:MainWindow	signature:()
MainWindow::showBandwidthTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showBandwidthTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showConfigDialog(ConfigDialog::Page page)$/;"	f	class:MainWindow	signature:(ConfigDialog::Page page)
MainWindow::showConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showConfigDialog(ConfigDialog::Page page = ConfigDialog::General);$/;"	p	class:MainWindow	access:private	signature:(ConfigDialog::Page page = ConfigDialog::General)
MainWindow::showDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showDebugDialog()$/;"	f	class:MainWindow	signature:()
MainWindow::showDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showDebugDialog();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showHelpDialog()$/;"	f	class:MainWindow	signature:()
MainWindow::showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showHelpDialog(const QString &topic)$/;"	f	class:MainWindow	signature:(const QString &topic)
MainWindow::showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showHelpDialog();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showHelpDialog(const QString &topic);$/;"	p	class:MainWindow	access:private	signature:(const QString &topic)
MainWindow::showMessageLogTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showMessageLogTab()$/;"	f	class:MainWindow	signature:()
MainWindow::showMessageLogTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showMessageLogTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showNetViewerTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showNetViewerTab()$/;"	f	class:MainWindow	signature:()
MainWindow::showNetViewerTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showNetViewerTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::showStatusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showStatusTab()$/;"	f	class:MainWindow	signature:()
MainWindow::showStatusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showStatusTab();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::sighup	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::sighup()$/;"	f	class:MainWindow	signature:()
MainWindow::sighup	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void sighup();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::start	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::start()$/;"	f	class:MainWindow	signature:()
MainWindow::start	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void start();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::startFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::startFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
MainWindow::startFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void startFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
MainWindow::stop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::stop()$/;"	f	class:MainWindow	signature:()
MainWindow::stop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool stop();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::stopped(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:MainWindow	signature:(int exitCode, QProcess::ExitStatus exitStatus)
MainWindow::stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void stopped(int errorCode, QProcess::ExitStatus exitStatus);$/;"	p	class:MainWindow	access:private	signature:(int errorCode, QProcess::ExitStatus exitStatus)
MainWindow::toString	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::toString(TorStatus status)$/;"	f	class:MainWindow	signature:(TorStatus status)
MainWindow::toString	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString toString(TorStatus status);$/;"	p	class:MainWindow	access:private	signature:(TorStatus status)
MainWindow::torStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void torStopped();$/;"	p	class:MainWindow	access:public	signature:()
MainWindow::trayIconActivated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::trayIconActivated(QSystemTrayIcon::ActivationReason reason)$/;"	f	class:MainWindow	signature:(QSystemTrayIcon::ActivationReason reason)
MainWindow::trayIconActivated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void trayIconActivated(QSystemTrayIcon::ActivationReason reason);$/;"	p	class:MainWindow	access:private	signature:(QSystemTrayIcon::ActivationReason reason)
MainWindow::trayMessage	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::trayMessage(const QString &title, const QString &msg,$/;"	f	class:MainWindow	signature:(const QString &title, const QString &msg, QSystemTrayIcon::MessageIcon icon, int milli)
MainWindow::trayMessage	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void trayMessage(const QString &title, const QString &msg,$/;"	p	class:MainWindow	access:public	signature:(const QString &title, const QString &msg, QSystemTrayIcon::MessageIcon icon = QSystemTrayIcon::Information, int milli = 10000)
MainWindow::tryCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::tryCookie(const ProtocolInfo &pi)$/;"	f	class:MainWindow	signature:(const ProtocolInfo &pi)
MainWindow::tryCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool tryCookie(const ProtocolInfo &pi);$/;"	p	class:MainWindow	access:private	signature:(const ProtocolInfo &pi)
MainWindow::tryHashed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::tryHashed()$/;"	f	class:MainWindow	signature:()
MainWindow::tryHashed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool tryHashed();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::ui	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  Ui::MainWindow ui; \/**< Qt Designer generated object. *\/$/;"	m	class:MainWindow	access:private
MainWindow::updateTitle	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updateTitle()$/;"	f	class:MainWindow	signature:()
MainWindow::updateTitle	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updateTitle();$/;"	p	class:MainWindow	access:private	signature:()
MainWindow::updateTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updateTorStatus(TorStatus status)$/;"	f	class:MainWindow	signature:(TorStatus status)
MainWindow::updateTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorStatus updateTorStatus(TorStatus status);$/;"	p	class:MainWindow	access:private	signature:(TorStatus status)
MainWindow::updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updatesAvailable(UpdateProcess::BundleInfo bi,$/;"	f	class:MainWindow	signature:(UpdateProcess::BundleInfo bi, const PackageList &packageList)
MainWindow::updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updatesAvailable(UpdateProcess::BundleInfo bi,$/;"	p	class:MainWindow	access:private	signature:(UpdateProcess::BundleInfo bi, const PackageList &packageList)
MainWindow::updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updatesInstalled(int numUpdates)$/;"	f	class:MainWindow	signature:(int numUpdates)
MainWindow::updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updatesInstalled(int numUpdates);$/;"	p	class:MainWindow	access:private	signature:(int numUpdates)
MainWindow::upnpError	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::upnpError(UPNPControl::UPNPError error)$/;"	f	class:MainWindow	signature:(UPNPControl::UPNPError error)
MainWindow::upnpError	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void upnpError(UPNPControl::UPNPError error);$/;"	p	class:MainWindow	access:private	signature:(UPNPControl::UPNPError error)
MainWindow::warnDangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::warnDangerousPort(quint16 port, bool rejected)$/;"	f	class:MainWindow	signature:(quint16 port, bool rejected)
MainWindow::warnDangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void warnDangerousPort(quint16 port, bool rejected);$/;"	p	class:MainWindow	access:private	signature:(quint16 port, bool rejected)
MainWindow::~MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow	signature:()
MainWindow::~MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  ~MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
Map	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^Network Map, and that is because it is not in the consensus yet.$/;"	v
Marble::GeoDataDocument	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^class Marble::GeoDataDocument;$/;"	m	class:Marble	typeref:class:Marble::
Marble::GeoDataFolder	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^class Marble::GeoDataFolder;$/;"	m	class:Marble	typeref:class:Marble::
MessageColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    MessageColumn = 2  \/**< Message text column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::MessageLog(QStatusBar *st, QWidget *parent)$/;"	f	class:MessageLog	signature:(QStatusBar *st, QWidget *parent)
MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  MessageLog(QStatusBar *st = 0, QWidget *parent = 0);$/;"	p	class:MessageLog	access:public	signature:(QStatusBar *st = 0, QWidget *parent = 0)
MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^class MessageLog : public VidaliaTab$/;"	c	inherits:VidaliaTab
MessageLog::MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::MessageLog(QStatusBar *st, QWidget *parent)$/;"	f	class:MessageLog	signature:(QStatusBar *st, QWidget *parent)
MessageLog::MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  MessageLog(QStatusBar *st = 0, QWidget *parent = 0);$/;"	p	class:MessageLog	access:public	signature:(QStatusBar *st = 0, QWidget *parent = 0)
MessageLog::_enableLogging	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool _enableLogging;$/;"	m	class:MessageLog	access:private
MessageLog::_filter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  uint _filter;$/;"	m	class:MessageLog	access:private
MessageLog::_logFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  LogFile _logFile;$/;"	m	class:MessageLog	access:private
MessageLog::_logFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  LogFilter* _logFilter;$/;"	m	class:MessageLog	access:private
MessageLog::_settings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  VidaliaSettings* _settings;$/;"	m	class:MessageLog	access:private
MessageLog::_statusBar	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  QPointer<QStatusBar> _statusBar;$/;"	m	class:MessageLog	access:private
MessageLog::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  TorControl* _torControl;$/;"	m	class:MessageLog	access:private
MessageLog::browse	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::browse()$/;"	f	class:MessageLog	signature:()
MessageLog::browse	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void browse();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::buildMessageFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::buildMessageFilter(const QString &input)$/;"	f	class:MessageLog	signature:(const QString &input)
MessageLog::buildMessageFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void buildMessageFilter(const QString& input);$/;"	p	class:MessageLog	access:private	signature:(const QString& input)
MessageLog::cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::cancelChanges()$/;"	f	class:MessageLog	signature:()
MessageLog::cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void cancelChanges();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::clear	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::clear()$/;"	f	class:MessageLog	signature:()
MessageLog::clear	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void clear();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::copy	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::copy()$/;"	f	class:MessageLog	signature:()
MessageLog::copy	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void copy();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::createActions	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::createActions()$/;"	f	class:MessageLog	signature:()
MessageLog::createActions	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void createActions();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::find	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::find()$/;"	f	class:MessageLog	signature:()
MessageLog::find	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void find();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::help	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::help()$/;"	f	class:MessageLog	signature:()
MessageLog::help	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void help();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::loadSettings()$/;"	f	class:MessageLog	signature:()
MessageLog::loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void loadSettings();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::log	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::log(tc::Severity type, const QString &message)$/;"	f	class:MessageLog	signature:(tc::Severity type, const QString &message)
MessageLog::log	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void log(tc::Severity severity, const QString &msg);$/;"	p	class:MessageLog	access:private	signature:(tc::Severity severity, const QString &msg)
MessageLog::registerLogEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::registerLogEvents()$/;"	f	class:MessageLog	signature:()
MessageLog::registerLogEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void registerLogEvents();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::retranslateUi()$/;"	f	class:MessageLog	signature:()
MessageLog::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  virtual void retranslateUi();$/;"	p	class:MessageLog	access:protected	signature:()
MessageLog::rotateLogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::rotateLogFile(const QString &filename)$/;"	f	class:MessageLog	signature:(const QString &filename)
MessageLog::rotateLogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool rotateLogFile(const QString &filename);$/;"	p	class:MessageLog	access:private	signature:(const QString &filename)
MessageLog::save	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::save(const QStringList &messages)$/;"	f	class:MessageLog	signature:(const QStringList &messages)
MessageLog::save	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void save(const QStringList &messages);$/;"	p	class:MessageLog	access:private	signature:(const QStringList &messages)
MessageLog::saveAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveAll()$/;"	f	class:MessageLog	signature:()
MessageLog::saveAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveAll();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::saveSelected	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveSelected()$/;"	f	class:MessageLog	signature:()
MessageLog::saveSelected	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveSelected();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::saveSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveSettings()$/;"	f	class:MessageLog	signature:()
MessageLog::saveSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveSettings();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::selectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::selectAll()$/;"	f	class:MessageLog	signature:()
MessageLog::selectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void selectAll();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::setToolTips	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::setToolTips()$/;"	f	class:MessageLog	signature:()
MessageLog::setToolTips	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void setToolTips();$/;"	p	class:MessageLog	access:private	signature:()
MessageLog::testMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::testMessage(tc::Severity severity, const QString &message) const$/;"	f	class:MessageLog	signature:(tc::Severity severity, const QString &message) const
MessageLog::testMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool testMessage(tc::Severity severity, const QString& message) const;$/;"	p	class:MessageLog	access:private	signature:(tc::Severity severity, const QString& message) const
MessageLog::ui	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  Ui::MessageLog ui;$/;"	m	class:MessageLog	access:private
MessageLog::~MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::~MessageLog()$/;"	f	class:MessageLog	signature:()
MessageLog::~MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  ~MessageLog();$/;"	p	class:MessageLog	access:public	signature:()
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/server.html	/^  <td>ÿ™ÿ∑ÿ®ŸäŸÇÿßÿ™ ÿßŸÑÿ™ÿ±ÿßÿ≥ŸÑ ÿßŸÑŸÅŸàÿ±Ÿä ŸÖÿ´ŸÑ MSN Messenger, AIM, ICQ, Ÿà Jabber<\/td>$/;"	v
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^  <td>–û–±–º–µ–Ω –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ —Ç–∞–∫–∏–µ –∫–∞–∫ MSN Messenger, AIM, ICQ, –∏ Jabber<\/td>$/;"	v
Messenger	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^  <td>Instant messaging applications like MSN Messenger, AIM, ICQ, and Jabber<\/td>$/;"	v
Method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	g	class:ControlMethod	access:public
Middleman	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^    Middleman \/**< Specifies a middleman-only exit policy. *\/$/;"	e	enum:ExitPolicy::SpecialExitPolicy
MiscellaneousReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    MiscellaneousReason,$/;"	e	enum:tc::ConnectionStatusReason
N	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/mg.png	/^4ÑOû\/FÜ,Nç5;çAè!Mú+Mç1_´>Vò:Uë:l∂Mf™I]ôBoµQ7oKñ&=u!?x#C}&D~(GÇ*Y¢5JÖ-^¶:Qé3fØBi∞Fa°Bl≥JfßFq¥Pl¨LrµQnØNj•OLá.Oã0Uî5Sê4^ú>r∑OrµP.n>z/;"	v
NAME_COLUMN	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define NAME_COLUMN /;"	d	file:
NIL	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    NIL$/;"	e	enum:TorOpt::OptType
NO_STRETCH	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define NO_STRETCH /;"	d	file:
NSH2PO_CONTACT_ADDR	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po_config.h.in	/^#define NSH2PO_CONTACT_ADDR /;"	d	file:
NSH2PO_LANGUAGE_TEAM	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po_config.h.in	/^#define NSH2PO_LANGUAGE_TEAM /;"	d	file:
NSH2PO_PROJECT_ID	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po_config.h.in	/^#define NSH2PO_PROJECT_ID /;"	d	file:
NSH2PO_VERSION	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po_config.h.in	/^#define NSH2PO_VERSION /;"	d	file:
NSMRWQ	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ug.png	/^/;"	v
Nachrichten	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Debug<\/b>: Sehr ausf&uuml;hrliche Nachrichten, die haupts&auml;chlich$/;"	v
Nachrichten	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Fehler<\/b>: Nachrichten, die erscheinen, wenn ein schwerwiegender Fehler$/;"	v
Nachrichten	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^Die m&ouml;glichen Gewichtungen von Nachrichten, von der schwerwiegendsten zu$/;"	v
NameColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    NameColumn    = 2,  \/**< Router's name. *\/$/;"	e	enum:RouterListWidget::Columns
NameValue	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^struct NameValue {$/;"	s
NameValue::entries	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    LIST_ENTRY(NameValue) entries;$/;"	m	struct:NameValue	access:public
NameValue::name	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char name[64];$/;"	m	struct:NameValue	access:public
NameValue::value	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char value[64];$/;"	m	struct:NameValue	access:public
NameValueParserData	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^struct NameValueParserData {$/;"	s
NameValueParserData::curelt	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char curelt[64];$/;"	m	struct:NameValueParserData	access:public
NameValueParserData::head	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    LIST_HEAD(listhead, NameValue) head;$/;"	m	struct:NameValueParserData	access:public
NameValueParserGetData	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^NameValueParserGetData(void * d, const char * datas, int l)$/;"	f	file:	signature:(void * d, const char * datas, int l)
NameValueParserStartElt	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^NameValueParserStartElt(void * d, const char * name, int l)$/;"	f	file:	signature:(void * d, const char * name, int l)
Named	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Named        = 0x0080,$/;"	e	enum:RouterStatus::Flag
NeedCapacity	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    NeedCapacity = 0x0004,$/;"	e	enum:Circuit::BuildFlag
NeedUptime	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    NeedUptime   = 0x0008,$/;"	e	enum:Circuit::BuildFlag
NetSpeedDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    NetSpeedDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::NetViewer(QWidget *parent)$/;"	f	class:NetViewer	signature:(QWidget *parent)
NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  NetViewer(QWidget* parent = 0);$/;"	p	class:NetViewer	access:public	signature:(QWidget* parent = 0)
NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^class NetViewer : public VidaliaTab$/;"	c	inherits:VidaliaTab
NetViewer::NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::NetViewer(QWidget *parent)$/;"	f	class:NetViewer	signature:(QWidget *parent)
NetViewer::NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  NetViewer(QWidget* parent = 0);$/;"	p	class:NetViewer	access:public	signature:(QWidget* parent = 0)
NetViewer::_addressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  AddressMap _addressMap;$/;"	m	class:NetViewer	access:private
NetViewer::_geoip	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  GeoIpResolver _geoip;$/;"	m	class:NetViewer	access:private
NetViewer::_it	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QList<RouterDescriptor>::const_iterator _it;$/;"	m	class:NetViewer	access:private
NetViewer::_map	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorMapImageView* _map;$/;"	m	class:NetViewer	access:private
NetViewer::_map	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorMapWidget* _map;$/;"	m	class:NetViewer	access:private
NetViewer::_refreshTimer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QTimer _refreshTimer;$/;"	m	class:NetViewer	access:private
NetViewer::_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QList<RouterDescriptor> _routers;$/;"	m	class:NetViewer	access:private
NetViewer::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorControl* _torControl;$/;"	m	class:NetViewer	access:private
NetViewer::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addCircuit(const Circuit &circuit)$/;"	f	class:NetViewer	signature:(const Circuit &circuit)
NetViewer::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addCircuit(const Circuit &circuit);$/;"	p	class:NetViewer	access:public	signature:(const Circuit &circuit)
NetViewer::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addRouter(const RouterDescriptor &rd)$/;"	f	class:NetViewer	signature:(const RouterDescriptor &rd)
NetViewer::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addRouter(const RouterDescriptor &rd);$/;"	p	class:NetViewer	access:public	signature:(const RouterDescriptor &rd)
NetViewer::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addStream(const Stream &stream)$/;"	f	class:NetViewer	signature:(const Stream &stream)
NetViewer::addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addStream(const Stream &stream);$/;"	p	class:NetViewer	access:public	signature:(const Stream &stream)
NetViewer::addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addressMapped(const QString &from, const QString &to,$/;"	f	class:NetViewer	signature:(const QString &from, const QString &to, const QDateTime &expires)
NetViewer::addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:NetViewer	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
NetViewer::circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::circuitSelected(const Circuit &circuit)$/;"	f	class:NetViewer	signature:(const Circuit &circuit)
NetViewer::circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void circuitSelected(const Circuit &circuit);$/;"	p	class:NetViewer	access:private	signature:(const Circuit &circuit)
NetViewer::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::clear()$/;"	f	class:NetViewer	signature:()
NetViewer::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void clear();$/;"	p	class:NetViewer	access:public	signature:()
NetViewer::displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::displayRouterInfo(const QString &id)$/;"	f	class:NetViewer	signature:(const QString &id)
NetViewer::displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:NetViewer	access:private	signature:(const QString &id)
NetViewer::help	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::help()$/;"	f	class:NetViewer	signature:()
NetViewer::help	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void help();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::linkActivated(const QString &url)$/;"	f	class:NetViewer	signature:(const QString &url)
NetViewer::linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void linkActivated(const QString &url);$/;"	p	class:NetViewer	access:private	signature:(const QString &url)
NetViewer::loadAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadAddressMap()$/;"	f	class:NetViewer	signature:()
NetViewer::loadAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadAddressMap();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::loadConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadConnections()$/;"	f	class:NetViewer	signature:()
NetViewer::loadConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadConnections();$/;"	p	class:NetViewer	access:public	signature:()
NetViewer::loadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadNetworkStatus()$/;"	f	class:NetViewer	signature:()
NetViewer::loadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadNetworkStatus();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::newDescriptors(const QStringList &ids)$/;"	f	class:NetViewer	signature:(const QStringList &ids)
NetViewer::newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:NetViewer	access:public	signature:(const QStringList &ids)
NetViewer::onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onAuthenticated()$/;"	f	class:NetViewer	signature:()
NetViewer::onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onAuthenticated();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onDisconnected()$/;"	f	class:NetViewer	signature:()
NetViewer::onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onDisconnected();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onRouterSearch()$/;"	f	class:NetViewer	signature:()
NetViewer::onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onRouterSearch();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::preLoadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::preLoadNetworkStatus()$/;"	f	class:NetViewer	signature:()
NetViewer::preLoadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void preLoadNetworkStatus();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::refresh	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::refresh()$/;"	f	class:NetViewer	signature:()
NetViewer::refresh	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void refresh();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::retranslateUi()$/;"	f	class:NetViewer	signature:()
NetViewer::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void retranslateUi();$/;"	p	class:NetViewer	access:protected	signature:()
NetViewer::routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::routerSelected(const QList<RouterDescriptor> &routers)$/;"	f	class:NetViewer	signature:(const QList<RouterDescriptor> &routers)
NetViewer::routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void routerSelected(const QList<RouterDescriptor> &routers);$/;"	p	class:NetViewer	access:private	signature:(const QList<RouterDescriptor> &routers)
NetViewer::setupGeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::setupGeoIpResolver()$/;"	f	class:NetViewer	signature:()
NetViewer::setupGeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void setupGeoIpResolver();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::toggleFullScreen	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::toggleFullScreen()$/;"	f	class:NetViewer	signature:()
NetViewer::toggleFullScreen	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void toggleFullScreen();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::ui	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  Ui::NetViewer ui;$/;"	m	class:NetViewer	access:private
NetViewer::zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::zoomIn()$/;"	f	class:NetViewer	signature:()
NetViewer::zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void zoomIn();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::zoomOut()$/;"	f	class:NetViewer	signature:()
NetViewer::zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void zoomOut();$/;"	p	class:NetViewer	access:private	signature:()
NetViewer::~NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::~NetViewer()$/;"	f	class:NetViewer	signature:()
NetViewer::~NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  ~NetViewer();$/;"	p	class:NetViewer	access:public	signature:()
Network	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Network,      \/** Network configuration page. *\/$/;"	e	enum:ConfigDialog::Page
NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::NetworkPage(QWidget *parent)$/;"	f	class:NetworkPage	signature:(QWidget *parent)
NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  NetworkPage(QWidget *parent = 0);$/;"	p	class:NetworkPage	access:public	signature:(QWidget *parent = 0)
NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^class NetworkPage : public ConfigPage$/;"	c	inherits:ConfigPage
NetworkPage::NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::NetworkPage(QWidget *parent)$/;"	f	class:NetworkPage	signature:(QWidget *parent)
NetworkPage::NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  NetworkPage(QWidget *parent = 0);$/;"	p	class:NetworkPage	access:public	signature:(QWidget *parent = 0)
NetworkPage::_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  NetworkSettings *_settings;$/;"	m	class:NetworkPage	access:private
NetworkPage::addBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::addBridge()$/;"	f	class:NetworkPage	signature:()
NetworkPage::addBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void addBridge();$/;"	p	class:NetworkPage	access:private	signature:()
NetworkPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::apply(QString &errmsg)$/;"	f	class:NetworkPage	signature:(QString &errmsg)
NetworkPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:NetworkPage	access:public	signature:(QString &errmsg)
NetworkPage::bridgeContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::bridgeContextMenuRequested(const QPoint &pos)$/;"	f	class:NetworkPage	signature:(const QPoint &pos)
NetworkPage::bridgeContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void bridgeContextMenuRequested(const QPoint &pos);$/;"	p	class:NetworkPage	access:private	signature:(const QPoint &pos)
NetworkPage::bridgeSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::bridgeSelectionChanged()$/;"	f	class:NetworkPage	signature:()
NetworkPage::bridgeSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void bridgeSelectionChanged();$/;"	p	class:NetworkPage	access:private	signature:()
NetworkPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::changedSinceLastApply()$/;"	f	class:NetworkPage	signature:()
NetworkPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool changedSinceLastApply();$/;"	p	class:NetworkPage	access:public	signature:()
NetworkPage::copySelectedBridgesToClipboard	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::copySelectedBridgesToClipboard()$/;"	f	class:NetworkPage	signature:()
NetworkPage::copySelectedBridgesToClipboard	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void copySelectedBridgesToClipboard();$/;"	p	class:NetworkPage	access:private	signature:()
NetworkPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::load()$/;"	f	class:NetworkPage	signature:()
NetworkPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void load();$/;"	p	class:NetworkPage	access:public	signature:()
NetworkPage::onLinkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::onLinkActivated(const QString &url)$/;"	f	class:NetworkPage	signature:(const QString &url)
NetworkPage::onLinkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void onLinkActivated(const QString &url);$/;"	p	class:NetworkPage	access:private	signature:(const QString &url)
NetworkPage::proxyTypeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::proxyTypeChanged(int selection)$/;"	f	class:NetworkPage	signature:(int selection)
NetworkPage::proxyTypeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void proxyTypeChanged(int selection);$/;"	p	class:NetworkPage	access:private	signature:(int selection)
NetworkPage::removeBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::removeBridge()$/;"	f	class:NetworkPage	signature:()
NetworkPage::removeBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void removeBridge();$/;"	p	class:NetworkPage	access:private	signature:()
NetworkPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::retranslateUi()$/;"	f	class:NetworkPage	signature:()
NetworkPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  virtual void retranslateUi();$/;"	p	class:NetworkPage	access:public	signature:()
NetworkPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::revert()$/;"	f	class:NetworkPage	signature:()
NetworkPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void revert();$/;"	p	class:NetworkPage	access:public	signature:()
NetworkPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::save(QString &errmsg)$/;"	f	class:NetworkPage	signature:(QString &errmsg)
NetworkPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool save(QString &errmsg);$/;"	p	class:NetworkPage	access:public	signature:(QString &errmsg)
NetworkPage::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  Ui::NetworkPage ui;$/;"	m	class:NetworkPage	access:private
NetworkPage::~NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::~NetworkPage()$/;"	f	class:NetworkPage	signature:()
NetworkPage::~NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  ~NetworkPage();$/;"	p	class:NetworkPage	access:public	signature:()
NetworkPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    NetworkPageID,$/;"	e	enum:FirstRunWizard::IDs
NetworkSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::NetworkSettings(TorControl *torControl)$/;"	f	class:NetworkSettings	signature:(TorControl *torControl)
NetworkSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  NetworkSettings(TorControl *torControl);$/;"	p	class:NetworkSettings	access:public	signature:(TorControl *torControl)
NetworkSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^class NetworkSettings : public AbstractTorSettings$/;"	c	inherits:AbstractTorSettings
NetworkSettings::HttpHttpsProxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    HttpHttpsProxy = 2, \/**< Use HTTP proxy for both dir and OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::NetworkSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::NetworkSettings(TorControl *torControl)$/;"	f	class:NetworkSettings	signature:(TorControl *torControl)
NetworkSettings::NetworkSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  NetworkSettings(TorControl *torControl);$/;"	p	class:NetworkSettings	access:public	signature:(TorControl *torControl)
NetworkSettings::NoProxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    NoProxy = -1, \/**< Have Tor connect directly to the Internet. *\/$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::ProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  enum ProxyType$/;"	g	class:NetworkSettings	access:public
NetworkSettings::ProxyTypeMax	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    ProxyTypeMax = 2$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::ProxyTypeMin	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    ProxyTypeMin = -1,$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::Socks4Proxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    Socks4Proxy = 0, \/**< Use a SOCKS 4 proxy for OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::Socks5Proxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    Socks5Proxy = 1, \/**< Use a SOCKS 5 proxy for OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
NetworkSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::apply(QString *errmsg)$/;"	f	class:NetworkSettings	signature:(QString *errmsg)
NetworkSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:NetworkSettings	access:public	signature:(QString *errmsg = 0)
NetworkSettings::getBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getBridgeList()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QStringList getBridgeList();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getFascistFirewall()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getFascistFirewall();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyAddress()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyAddress();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyPassword()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyPassword();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyType()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  ProxyType getProxyType();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyUsername()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyUsername();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getReachablePorts()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QList<quint16> getReachablePorts();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getTunnelDirConns	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getTunnelDirConns()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getTunnelDirConns	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getTunnelDirConns();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::getUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getUseBridges()$/;"	f	class:NetworkSettings	signature:()
NetworkSettings::getUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getUseBridges();$/;"	p	class:NetworkSettings	access:public	signature:()
NetworkSettings::proxyTypeFromString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::proxyTypeFromString(const QString &type)$/;"	f	class:NetworkSettings	signature:(const QString &type)
NetworkSettings::proxyTypeFromString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  ProxyType proxyTypeFromString(const QString &type);$/;"	p	class:NetworkSettings	access:private	signature:(const QString &type)
NetworkSettings::proxyTypeToString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::proxyTypeToString(ProxyType type)$/;"	f	class:NetworkSettings	signature:(ProxyType type)
NetworkSettings::proxyTypeToString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString proxyTypeToString(ProxyType type);$/;"	p	class:NetworkSettings	access:private	signature:(ProxyType type)
NetworkSettings::setBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setBridgeList(const QStringList &bridgeList)$/;"	f	class:NetworkSettings	signature:(const QStringList &bridgeList)
NetworkSettings::setBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setBridgeList(const QStringList &bridgeList);$/;"	p	class:NetworkSettings	access:public	signature:(const QStringList &bridgeList)
NetworkSettings::setFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setFascistFirewall(bool fascistFirewall)$/;"	f	class:NetworkSettings	signature:(bool fascistFirewall)
NetworkSettings::setFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setFascistFirewall(bool fascistFirewall);$/;"	p	class:NetworkSettings	access:public	signature:(bool fascistFirewall)
NetworkSettings::setProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyAddress(const QString &addr)$/;"	f	class:NetworkSettings	signature:(const QString &addr)
NetworkSettings::setProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyAddress(const QString &addr);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &addr)
NetworkSettings::setProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyPassword(const QString &pass)$/;"	f	class:NetworkSettings	signature:(const QString &pass)
NetworkSettings::setProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyPassword(const QString &pass);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &pass)
NetworkSettings::setProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyType(ProxyType type)$/;"	f	class:NetworkSettings	signature:(ProxyType type)
NetworkSettings::setProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyType(ProxyType type);$/;"	p	class:NetworkSettings	access:public	signature:(ProxyType type)
NetworkSettings::setProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyUsername(const QString &user)$/;"	f	class:NetworkSettings	signature:(const QString &user)
NetworkSettings::setProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyUsername(const QString &user);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &user)
NetworkSettings::setReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setReachablePorts(const QList<quint16> &reachablePorts)$/;"	f	class:NetworkSettings	signature:(const QList<quint16> &reachablePorts)
NetworkSettings::setReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setReachablePorts(const QList<quint16> &reachablePorts);$/;"	p	class:NetworkSettings	access:public	signature:(const QList<quint16> &reachablePorts)
NetworkSettings::setUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setUseBridges(bool useBridges)$/;"	f	class:NetworkSettings	signature:(bool useBridges)
NetworkSettings::setUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setUseBridges(bool useBridges);$/;"	p	class:NetworkSettings	access:public	signature:(bool useBridges)
NetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^typedef QList<RouterStatus> NetworkStatus;$/;"	t
New	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    New,          \/**< New request to connect *\/$/;"	e	enum:Stream::Status
NewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    NewConsensus  = (1u << 14),$/;"	e	enum:TorEvents::Event
NewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    NewDescriptor = (1u << 9),$/;"	e	enum:TorEvents::Event
NewNym	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    NewNym    \/**< NEWNYM: Switch to all new clean circuits *\/$/;"	e	enum:TorSignal::Signal
NewResolve	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    NewResolve,   \/**< New request to resolve an address *\/$/;"	e	enum:Stream::Status
NewTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NewTorVersion$/;"	e	enum:tc::TorVersionStatus
NicknameValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.cpp	/^NicknameValidator::NicknameValidator(QObject *parent)$/;"	f	class:NicknameValidator	signature:(QObject *parent)
NicknameValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^  NicknameValidator(QObject *parent);$/;"	p	class:NicknameValidator	access:public	signature:(QObject *parent)
NicknameValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^class NicknameValidator : public QValidator$/;"	c	inherits:QValidator
NicknameValidator::NicknameValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.cpp	/^NicknameValidator::NicknameValidator(QObject *parent)$/;"	f	class:NicknameValidator	signature:(QObject *parent)
NicknameValidator::NicknameValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^  NicknameValidator(QObject *parent);$/;"	p	class:NicknameValidator	access:public	signature:(QObject *parent)
NicknameValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.cpp	/^NicknameValidator::validate(QString &input, int &pos) const$/;"	f	class:NicknameValidator	signature:(QString &input, int &pos) const
NicknameValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:NicknameValidator	access:public	signature:(QString &input, int &pos) const
No	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    No,$/;"	e	enum:VMessageBox::Button
NoButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    NoButton = 0,$/;"	e	enum:VMessageBox::Button
NoCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    NoCommand,$/;"	e	enum:UpdateProcess::UpdateCommand
NoProxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    NoProxy = -1, \/**< Have Tor connect directly to the Internet. *\/$/;"	e	enum:NetworkSettings::ProxyType
NoRouteToHost	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NoRouteToHost,$/;"	e	enum:tc::ConnectionStatusReason
NoUPNPDevicesFound	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    NoUPNPDevicesFound,$/;"	e	enum:UPNPControl::UPNPError
NoValidIGDsFound	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    NoValidIGDsFound,$/;"	e	enum:UPNPControl::UPNPError
None	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    None,   \/**< No compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
None	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    None         = 0x0000,$/;"	e	enum:Circuit::BuildFlag
Notice	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Notice,     \/**< Non-failure (but important) events. *\/$/;"	e	enum:Log::LogLevel
Notice	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Notice     = (1u<<2),  \/**< Notice level log message. *\/$/;"	e	enum:LogEvent::Severity
NoticeSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NoticeSeverity = (1u<<2), \/**< A not-so-bad event. *\/$/;"	e	enum:tc::Severity
NullAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    NullAuth,      \/**< No authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
OS_STRING	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcstrings.h	/^#define OS_STRING /;"	d
ObsoleteTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ObsoleteTorVersion,$/;"	e	enum:tc::TorVersionStatus
Off	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Off,        \/**< No logging output. *\/$/;"	e	enum:Log::LogLevel
Offline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Offline       \/**< Router is unresponsive. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
Ok	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Ok,$/;"	e	enum:VMessageBox::Button
OneHopTunnel	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    OneHopTunnel = 0x0001,$/;"	e	enum:Circuit::BuildFlag
Online	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Online,       \/**< Router is online and reachable. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
OpenSCManagerA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  OpenSCManagerA_fn        OpenSCManagerA;$/;"	m	struct:ServiceFunctions	access:public
OpenSCManagerA_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef SC_HANDLE (WINAPI *OpenSCManagerA_fn)($/;"	t
OpenServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  OpenServiceA_fn          OpenServiceA;$/;"	m	struct:ServiceFunctions	access:public
OpenServiceA_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef SC_HANDLE (WINAPI *OpenServiceA_fn)($/;"	t
OptType	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  enum OptType {$/;"	g	class:TorOpt	access:public
OrConnStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    OrConnStatus  = (1u << 8),$/;"	e	enum:TorEvents::Event
OrganizationDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    OrganizationDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
Ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    klicken Sie auf <i>&Ouml;ffnen<\/i>, um eine Datei auszuw&auml;hlen.$/;"	v
Ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^  <li>&Ouml;ffnen Sie das Nachrichtenprotokoll aus dem Vidalia Traymen&uuml;.<\/li>$/;"	v
Ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^  <li>&Ouml;ffnen sie das Nachrichtenprotokoll aus dem Vidalia Traymen&uuml;.<\/li>$/;"	v
Ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^    &Ouml;ffnen Sie den <i>Einstellungs-Dialog<\/i> durch einen Klick$/;"	v
P	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/lk.png	/^¬ï3ˇ“jÃà/;"	v
P	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ve.png	/^÷÷/;"	v
PASSWORD_LEN	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define PASSWORD_LEN /;"	d	file:
PATH_SEPARATOR	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^#define PATH_SEPARATOR /;"	d	file:
PEN_CIRCUIT	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define PEN_CIRCUIT /;"	d	file:
PEN_ROUTER	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define PEN_ROUTER /;"	d	file:
PEN_SELECTED	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^#define PEN_SELECTED /;"	d	file:
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/al.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ao.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/be.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bs.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cn.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ee.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/gp.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/jm.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ke.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ki.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/kp.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/pe.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/se.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/tr.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ug.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/vn.png	/^/;"	v
PLTE	/Users/chiiph/Code/vidalia/src/vidalia/res/icons/node-unresponsive.png	/^/;"	v
PLUGINENGINE_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^#define PLUGINENGINE_H$/;"	d
PLUGINWRAPPER_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^#define PLUGINWRAPPER_H$/;"	d
PORT	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define PORT /;"	d	file:
PORTS_HTTP	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define PORTS_HTTP /;"	d	file:
PORTS_HTTPS	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define PORTS_HTTPS /;"	d	file:
PORTS_IM	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define PORTS_IM /;"	d	file:
PORTS_IRC	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define PORTS_IRC /;"	d	file:
PORTS_MAIL	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define PORTS_MAIL /;"	d	file:
PRINT_SOCKET_ERROR	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define PRINT_SOCKET_ERROR(/;"	d	file:
PRINT_SOCKET_ERROR	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.c	/^#define PRINT_SOCKET_ERROR(/;"	d	file:
PRINT_SOCKET_ERROR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define PRINT_SOCKET_ERROR(/;"	d	file:
PROCESSENTRY32	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^#undef PROCESSENTRY32$/;"	d	file:
PRODUCTVERSION	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc	/^PRODUCTVERSION  0,3,2,0$/;"	v
PackageInfo	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::PackageInfo()$/;"	f	class:PackageInfo	signature:()
PackageInfo	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  PackageInfo();$/;"	p	class:PackageInfo	access:public	signature:()
PackageInfo	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^class PackageInfo$/;"	c
PackageInfo::PackageInfo	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::PackageInfo()$/;"	f	class:PackageInfo	signature:()
PackageInfo::PackageInfo	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  PackageInfo();$/;"	p	class:PackageInfo	access:public	signature:()
PackageInfo::_longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QHash<QString,QString> _longDescription;$/;"	m	class:PackageInfo	access:private
PackageInfo::_name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString _name;$/;"	m	class:PackageInfo	access:private
PackageInfo::_shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QHash<QString,QString> _shortDescription;$/;"	m	class:PackageInfo	access:private
PackageInfo::_version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString _version;$/;"	m	class:PackageInfo	access:private
PackageInfo::hasLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::hasLongDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
PackageInfo::hasLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool hasLongDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
PackageInfo::hasShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::hasShortDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
PackageInfo::hasShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool hasShortDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
PackageInfo::isValid	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::isValid() const$/;"	f	class:PackageInfo	signature:() const
PackageInfo::isValid	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool isValid() const;$/;"	p	class:PackageInfo	access:public	signature:() const
PackageInfo::longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::longDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
PackageInfo::longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString longDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
PackageInfo::name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::name() const$/;"	f	class:PackageInfo	signature:() const
PackageInfo::name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString name() const;$/;"	p	class:PackageInfo	access:public	signature:() const
PackageInfo::setLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setLongDescription(const QString &lang, const QString &desc)$/;"	f	class:PackageInfo	signature:(const QString &lang, const QString &desc)
PackageInfo::setLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setLongDescription(const QString &lang, const QString &desc);$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang, const QString &desc)
PackageInfo::setName	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setName(const QString &name)$/;"	f	class:PackageInfo	signature:(const QString &name)
PackageInfo::setName	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setName(const QString &name);$/;"	p	class:PackageInfo	access:public	signature:(const QString &name)
PackageInfo::setShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setShortDescription(const QString &lang, const QString &desc)$/;"	f	class:PackageInfo	signature:(const QString &lang, const QString &desc)
PackageInfo::setShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setShortDescription(const QString &lang, const QString &desc);$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang, const QString &desc)
PackageInfo::setVersion	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setVersion(const QString &version)$/;"	f	class:PackageInfo	signature:(const QString &version)
PackageInfo::setVersion	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setVersion(const QString &version);$/;"	p	class:PackageInfo	access:public	signature:(const QString &version)
PackageInfo::shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::shortDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
PackageInfo::shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString shortDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
PackageInfo::version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::version() const$/;"	f	class:PackageInfo	signature:() const
PackageInfo::version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString version() const;$/;"	p	class:PackageInfo	access:public	signature:() const
PackageList	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^typedef QList<PackageInfo> PackageList;$/;"	t
Page	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  enum Page {$/;"	g	class:ConfigDialog	access:public
Panic	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^    Panic$/;"	e	enum:AdvancedPage::ConfigGroup
PanicPageID	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^    PanicPageID,$/;"	e	enum:FirstRunWizard::IDs
ParseNameValue	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.c	/^ParseNameValue(const char * buffer, int bufsize,$/;"	f	signature:(const char * buffer, int bufsize, struct NameValueParserData * data)
ParseNameValue	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^ParseNameValue(const char * buffer, int bufsize,$/;"	p	signature:(const char * buffer, int bufsize, struct NameValueParserData * data)
PasswordAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    PasswordAuth,  \/**< Use a hashed password for authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::PluginEngine(QObject *parent)$/;"	f	class:PluginEngine	signature:(QObject *parent)
PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    PluginEngine(QObject *parent = 0);$/;"	p	class:PluginEngine	access:public	signature:(QObject *parent = 0)
PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^class PluginEngine : public QScriptEngine {$/;"	c	inherits:QScriptEngine
PluginEngine::PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::PluginEngine(QObject *parent)$/;"	f	class:PluginEngine	signature:(QObject *parent)
PluginEngine::PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    PluginEngine(QObject *parent = 0);$/;"	p	class:PluginEngine	access:public	signature:(QObject *parent = 0)
PluginEngine::findWidget	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::findWidget(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::findWidget	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue findWidget(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::getAllActions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::getAllActions()$/;"	f	class:PluginEngine	signature:()
PluginEngine::getAllActions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    QList<QAction *> getAllActions();$/;"	p	class:PluginEngine	access:public	signature:()
PluginEngine::importExtension	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::importExtension(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::importExtension	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue importExtension(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::loadAllPlugins	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::loadAllPlugins()$/;"	f	class:PluginEngine	signature:()
PluginEngine::loadAllPlugins	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void loadAllPlugins();$/;"	p	class:PluginEngine	access:public	signature:()
PluginEngine::pluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void pluginTab(VidaliaTab *);$/;"	p	class:PluginEngine	access:public	signature:(VidaliaTab *)
PluginEngine::provide	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::provide(const QString &name, QObject *obj)$/;"	f	class:PluginEngine	signature:(const QString &name, QObject *obj)
PluginEngine::provide	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void provide(const QString &name, QObject *obj);$/;"	p	class:PluginEngine	access:public	signature:(const QString &name, QObject *obj)
PluginEngine::sleep	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::sleep(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::sleep	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue sleep(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::tryLoadPlugin	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::tryLoadPlugin(QDir path)$/;"	f	class:PluginEngine	signature:(QDir path)
PluginEngine::tryLoadPlugin	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void tryLoadPlugin(QDir path);$/;"	p	class:PluginEngine	access:protected	signature:(QDir path)
PluginEngine::vdebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::vdebug(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::vdebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue vdebug(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
PluginEngine::wrappers	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    QList<PluginWrapper *> wrappers;$/;"	m	class:PluginEngine	access:protected
PluginEngine::~PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::~PluginEngine()$/;"	f	class:PluginEngine	signature:()
PluginEngine::~PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    ~PluginEngine();$/;"	p	class:PluginEngine	access:public	signature:()
PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::PluginWrapper(const QString &info_path, PluginEngine *engine, QObject *parent)$/;"	f	class:PluginWrapper	signature:(const QString &info_path, PluginEngine *engine, QObject *parent)
PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    PluginWrapper(const QString &info_path, PluginEngine *engine, QObject *parent = 0);$/;"	p	class:PluginWrapper	access:public	signature:(const QString &info_path, PluginEngine *engine, QObject *parent = 0)
PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^class PluginWrapper : public QObject {$/;"	c	inherits:QObject
PluginWrapper::PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::PluginWrapper(const QString &info_path, PluginEngine *engine, QObject *parent)$/;"	f	class:PluginWrapper	signature:(const QString &info_path, PluginEngine *engine, QObject *parent)
PluginWrapper::PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    PluginWrapper(const QString &info_path, PluginEngine *engine, QObject *parent = 0);$/;"	p	class:PluginWrapper	access:public	signature:(const QString &info_path, PluginEngine *engine, QObject *parent = 0)
PluginWrapper::_action	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QAction *_action;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_engine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    PluginEngine *_engine;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QStringList _files;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_gui	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool _persistent, _gui;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _nspace;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::_persistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool _persistent, _gui;$/;"	m	class:PluginWrapper	access:protected
PluginWrapper::author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::author() const$/;"	f	class:PluginWrapper	signature:() const
PluginWrapper::author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString author() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
PluginWrapper::buildGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::buildGUI()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::buildGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    VidaliaTab *buildGUI();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::checkExceptions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::checkExceptions()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::checkExceptions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool checkExceptions();$/;"	p	class:PluginWrapper	access:protected	signature:()
PluginWrapper::date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::date() const$/;"	f	class:PluginWrapper	signature:() const
PluginWrapper::date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString date() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
PluginWrapper::emitPluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::emitPluginTab()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::emitPluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void emitPluginTab();$/;"	p	class:PluginWrapper	access:private	signature:()
PluginWrapper::files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::files() const$/;"	f	class:PluginWrapper	signature:() const
PluginWrapper::files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QStringList files() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
PluginWrapper::hasGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::hasGUI()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::hasGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool hasGUI();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::isPersistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::isPersistent()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::isPersistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool isPersistent();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::menuAction	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::menuAction()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::menuAction	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QAction *menuAction();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::name() const$/;"	f	class:PluginWrapper	signature:() const
PluginWrapper::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString name() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
PluginWrapper::nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::nspace() const$/;"	f	class:PluginWrapper	signature:() const
PluginWrapper::nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString nspace() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
PluginWrapper::pluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void pluginTab(VidaliaTab *);$/;"	p	class:PluginWrapper	access:public	signature:(VidaliaTab *)
PluginWrapper::processInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::processInfo(const QString &path)$/;"	f	class:PluginWrapper	signature:(const QString &path)
PluginWrapper::processInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void processInfo(const QString &path);$/;"	p	class:PluginWrapper	access:protected	signature:(const QString &path)
PluginWrapper::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::start()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void start();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::stop()$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void stop();$/;"	p	class:PluginWrapper	access:public	signature:()
PluginWrapper::~PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::~PluginWrapper() {}$/;"	f	class:PluginWrapper	signature:()
PluginWrapper::~PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    ~PluginWrapper();$/;"	p	class:PluginWrapper	access:public	signature:()
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy()$/;"	f	class:Policy	signature:()
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(Action action, QHostAddress addr, uchar mask,$/;"	f	class:Policy	signature:(Action action, QHostAddress addr, uchar mask, quint16 fromPort, quint16 toPort)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(QString action, QString address, QString ports)$/;"	f	class:Policy	signature:(QString action, QString address, QString ports)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(QString policy)$/;"	f	class:Policy	signature:(QString policy)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(SpecialPolicy policy)$/;"	f	class:Policy	signature:(SpecialPolicy policy)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy();$/;"	p	class:Policy	access:public	signature:()
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(Action action, QHostAddress addr, uchar mask,$/;"	p	class:Policy	access:public	signature:(Action action, QHostAddress addr, uchar mask, quint16 fromPort, quint16 toPort = 0)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(QString action, QString address, QString ports);$/;"	p	class:Policy	access:public	signature:(QString action, QString address, QString ports)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(QString policy);$/;"	p	class:Policy	access:public	signature:(QString policy)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(SpecialPolicy policy);$/;"	p	class:Policy	access:public	signature:(SpecialPolicy policy)
Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^class Policy$/;"	c
Policy::Accept	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    Accept, \/**< Connections matching this policy will be accepted. *\/$/;"	e	enum:Policy::Action
Policy::AcceptAll	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    AcceptAll, \/**< Accepts all connections. Equivalent to "accept *:*". *\/$/;"	e	enum:Policy::SpecialPolicy
Policy::Action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  enum Action {$/;"	g	class:Policy	access:public
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy()$/;"	f	class:Policy	signature:()
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(Action action, QHostAddress addr, uchar mask,$/;"	f	class:Policy	signature:(Action action, QHostAddress addr, uchar mask, quint16 fromPort, quint16 toPort)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(QString action, QString address, QString ports)$/;"	f	class:Policy	signature:(QString action, QString address, QString ports)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(QString policy)$/;"	f	class:Policy	signature:(QString policy)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::Policy(SpecialPolicy policy)$/;"	f	class:Policy	signature:(SpecialPolicy policy)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy();$/;"	p	class:Policy	access:public	signature:()
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(Action action, QHostAddress addr, uchar mask,$/;"	p	class:Policy	access:public	signature:(Action action, QHostAddress addr, uchar mask, quint16 fromPort, quint16 toPort = 0)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(QString action, QString address, QString ports);$/;"	p	class:Policy	access:public	signature:(QString action, QString address, QString ports)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(QString policy);$/;"	p	class:Policy	access:public	signature:(QString policy)
Policy::Policy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Policy(SpecialPolicy policy);$/;"	p	class:Policy	access:public	signature:(SpecialPolicy policy)
Policy::Reject	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    Reject  \/**< Connections matching this policy will be rejected. *\/$/;"	e	enum:Policy::Action
Policy::RejectAll	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    RejectAll  \/**< Rejects all connections. Equivalent to "reject *:*". *\/$/;"	e	enum:Policy::SpecialPolicy
Policy::SpecialPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  enum SpecialPolicy {$/;"	g	class:Policy	access:public
Policy::_action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Action _action; \/**< The action to take for this policy. *\/$/;"	m	class:Policy	access:private
Policy::_address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QHostAddress _address; \/**< Addresses to which this policy applies. *\/$/;"	m	class:Policy	access:private
Policy::_fromPort	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  quint16 _fromPort;  \/**< Start of a port range. *\/$/;"	m	class:Policy	access:private
Policy::_mask	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  uchar _mask;  \/**< Address mask. *\/$/;"	m	class:Policy	access:private
Policy::_toPort	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  quint16 _toPort;  \/**< End of a port range. *\/$/;"	m	class:Policy	access:private
Policy::action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::action() const$/;"	f	class:Policy	signature:() const
Policy::action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString action() const;$/;"	p	class:Policy	access:public	signature:() const
Policy::address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::address() const$/;"	f	class:Policy	signature:() const
Policy::address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString address() const;$/;"	p	class:Policy	access:public	signature:() const
Policy::fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::fromString(QString policy)$/;"	f	class:Policy	signature:(QString policy)
Policy::fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  void fromString(QString policy);$/;"	p	class:Policy	access:public	signature:(QString policy)
Policy::matches	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::matches(const Policy &policy) const$/;"	f	class:Policy	signature:(const Policy &policy) const
Policy::matches	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  bool matches(const Policy &policy) const;$/;"	p	class:Policy	access:public	signature:(const Policy &policy) const
Policy::operator ==	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::operator==(const Policy &policy) const$/;"	f	class:Policy	signature:(const Policy &policy) const
Policy::operator ==	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  bool operator==(const Policy &policy) const;$/;"	p	class:Policy	access:public	signature:(const Policy &policy) const
Policy::ports	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::ports() const$/;"	f	class:Policy	signature:() const
Policy::ports	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString ports() const;$/;"	p	class:Policy	access:public	signature:() const
Policy::toAction	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::toAction(QString action)$/;"	f	class:Policy	signature:(QString action)
Policy::toAction	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  static Action toAction(QString action);$/;"	p	class:Policy	access:public	signature:(QString action)
Policy::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::toString() const$/;"	f	class:Policy	signature:() const
Policy::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString toString() const;$/;"	p	class:Policy	access:public	signature:() const
Port	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	e	enum:ControlMethod::Method
Port	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Port,$/;"	e	enum:TorOpt::OptType
Port	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^your <i>Relay Port<\/i>, which defaults to port 443 on Windows and 9001 on all$/;"	v
Port	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^your <i>Relay Port<\/i>, which defaults to port 443 on Windows and 9001 on all$/;"	v
PortValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^PortValidator::PortValidator(QObject *parent)$/;"	f	class:PortValidator	signature:(QObject *parent)
PortValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^  PortValidator(QObject *parent);$/;"	p	class:PortValidator	access:public	signature:(QObject *parent)
PortValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^class PortValidator : public QIntValidator$/;"	c	inherits:QIntValidator
PortValidator::PortValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^PortValidator::PortValidator(QObject *parent)$/;"	f	class:PortValidator	signature:(QObject *parent)
PortValidator::PortValidator	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^  PortValidator(QObject *parent);$/;"	p	class:PortValidator	access:public	signature:(QObject *parent)
PortValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^PortValidator::validate(QString &input, int &pos) const$/;"	f	class:PortValidator	signature:(QString &input, int &pos) const
PortValidator::validate	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:PortValidator	access:public	signature:(QString &input, int &pos) const
Ports	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^                  <string>Ports 110, 143, 993 and 995<\/string>$/;"	v
Ports	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^                  <string>Ports 706, 1863, 5050, 5190, 5222, 5223, 8300 and 8888<\/string>$/;"	v
Process32First	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^#undef Process32First$/;"	d	file:
Process32First_fn	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^typedef BOOL (WINAPI *Process32First_fn)(HANDLE, LPPROCESSENTRY32);$/;"	t	file:
Process32Next	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^#undef Process32Next$/;"	d	file:
Process32Next_fn	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^typedef BOOL (WINAPI *Process32Next_fn)(HANDLE, LPPROCESSENTRY32);$/;"	t	file:
ProtocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  ProtocolInfo() {}$/;"	f	class:ProtocolInfo	access:public	signature:()
ProtocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^class ProtocolInfo$/;"	c
ProtocolInfo::ProtocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  ProtocolInfo() {}$/;"	f	class:ProtocolInfo	access:public	signature:()
ProtocolInfo::_authMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QStringList _authMethods; \/**< Tor's ccepted authentication methods. *\/$/;"	m	class:ProtocolInfo	access:private
ProtocolInfo::_cookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString _cookieAuthFile;  \/**< Tor's authentication cookie file. *\/$/;"	m	class:ProtocolInfo	access:private
ProtocolInfo::_torVersion	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString _torVersion;      \/**< The Tor version in the PROTOCOLINFO reply. *\/$/;"	m	class:ProtocolInfo	access:private
ProtocolInfo::authMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QStringList authMethods() const { return _authMethods; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
ProtocolInfo::cookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString cookieAuthFile() const { return _cookieAuthFile; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
ProtocolInfo::isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.cpp	/^ProtocolInfo::isEmpty() const$/;"	f	class:ProtocolInfo	signature:() const
ProtocolInfo::isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  bool isEmpty() const;$/;"	p	class:ProtocolInfo	access:public	signature:() const
ProtocolInfo::setAuthMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.cpp	/^ProtocolInfo::setAuthMethods(const QString authMethods)$/;"	f	class:ProtocolInfo	signature:(const QString authMethods)
ProtocolInfo::setAuthMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setAuthMethods(const QString methods);$/;"	p	class:ProtocolInfo	access:public	signature:(const QString methods)
ProtocolInfo::setCookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setCookieAuthFile(const QString cookieAuthFile)$/;"	f	class:ProtocolInfo	access:public	signature:(const QString cookieAuthFile)
ProtocolInfo::setTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setTorVersion(const QString torVersion) { _torVersion = torVersion; }$/;"	f	class:ProtocolInfo	access:public	signature:(const QString torVersion)
ProtocolInfo::torVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString torVersionString() const { return _torVersion; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
ProxyDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    ProxyDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
ProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  enum ProxyType$/;"	g	class:NetworkSettings	access:public
ProxyTypeMax	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    ProxyTypeMax = 2$/;"	e	enum:NetworkSettings::ProxyType
ProxyTypeMin	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    ProxyTypeMin = -1,$/;"	e	enum:NetworkSettings::ProxyType
Purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum Purpose {$/;"	g	class:Circuit	access:public
PyMODINIT_FUNC	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^#define PyMODINIT_FUNC /;"	d	file:
Py_RETURN_FALSE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^#define Py_RETURN_FALSE /;"	d	file:
Py_RETURN_NONE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^#define Py_RETURN_NONE /;"	d	file:
Py_RETURN_TRUE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^#define Py_RETURN_TRUE /;"	d	file:
Pyx	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/md.png	/^≥µΩ¿ÀÕ Ã0}~>ÃÃ/;"	v
Q1s	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cl.png	/^	ˆ≥RîñQ1sı$/;"	v
Q5	/Users/chiiph/Code/vidalia/src/vidalia/res/map/world-map.png	/^Õb«≥’zé>8Ÿª>å ≈ºK‚äwN®7íE“<¢˘ÉÆYúñ!w)tç<<úÔ]‹qŸ◊EummT"˛¯ﬁ≤ÿÿºvaê:mt¡]‹›ææπΩ¡ ®û¥,‹¢ÈNÊÛ«¥&ªó∂w.ŸÏ‰˛√Gô;ÙGmû≥«·ò√†ó≈sN@FIH$KN©˚~fÛßw^‹ôú6ÕkGÌåˇŒçu[Õ6ism¸^ü<^kÊ≠X1}nã˛ÉwNû€_›ˇﬁΩ”ˇ—g∂~xˇÙ©∑À˘_‹ŸRqEıÿê/;"	v
QMetaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^struct QMetaTypeId< QHash<QString,QString> > \\$/;"	s	file:
QMetaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^struct QMetaTypeId< QHash<QString,QStringList> > \\$/;"	s	file:
QMetaTypeId::Defined	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    enum { Defined = 1 }; \\$/;"	e	enum:QMetaTypeId::__anon2	file:
QMetaTypeId::Defined	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    enum { Defined = 1 }; \\$/;"	e	enum:QMetaTypeId::__anon3	file:
QMetaTypeId::qt_metatype_id	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    static int qt_metatype_id() \\$/;"	f	struct:QMetaTypeId	access:public	signature:()
QTSCRIPTSHELL_TORCONTROL_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^#define QTSCRIPTSHELL_TORCONTROL_H$/;"	d	file:
QTSCRIPTSHELL_TORSIGNAL_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^#define QTSCRIPTSHELL_TORSIGNAL_H$/;"	d	file:
QTSCRIPTSHELL_X_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^#define QTSCRIPTSHELL_X_H$/;"	d
QTSCRIPT_IS_GENERATED_FUNCTION	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^#define QTSCRIPT_IS_GENERATED_FUNCTION(/;"	d	file:
QTSCRIPT_IS_GENERATED_FUNCTION	/Users/chiiph/Code/vidalia/src/tools/script_extension/templates.pyc	/^#define QTSCRIPT_IS_GENERATED_FUNCTION(/;"	d	file:
QTSCRIPT_IS_GENERATED_FUNCTION	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^#define QTSCRIPT_IS_GENERATED_FUNCTION(/;"	d	file:
QTSCRIPT_IS_GENERATED_FUNCTION	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^#define QTSCRIPT_IS_GENERATED_FUNCTION(/;"	d	file:
Q_DECLARE_FLAGS	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  Q_DECLARE_FLAGS(Events, Event);$/;"	p	class:TorEvents	access:public	signature:(Events, Event)
Q_DISABLE_COPY	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  Q_DISABLE_COPY(BootstrapTestTorKiller);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(BootstrapTestTorKiller)
QtBindingCreator	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensionsInit.cpp	/^typedef QScriptValue (*QtBindingCreator)(QScriptEngine *engine);$/;"	t	file:
QtBindingCreator	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp	/^typedef QScriptValue (*QtBindingCreator)(QScriptEngine *engine);$/;"	t	file:
QtBindingCreator	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp~	/^typedef QScriptValue (*QtBindingCreator)(QScriptEngine *engine);$/;"	t	file:
QtBindingCreator	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.h~	/^typedef QScriptValue (*QtBindingCreator)(QScriptEngine *engine);$/;"	t	file:
QtBindingCreator	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensionsInit.cpp~	/^typedef QScriptValue (*QtBindingCreator)(QScriptEngine *engine);$/;"	t	file:
QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^QtScriptShell_TorControl::QtScriptShell_TorControl(ControlMethod::Method  method)$/;"	f	class:QtScriptShell_TorControl	signature:(ControlMethod::Method method)
QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    QtScriptShell_TorControl(ControlMethod::Method  method = ControlMethod::Port);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^class QtScriptShell_TorControl : public TorControl$/;"	c	file:	inherits:TorControl
QtScriptShell_TorControl::QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^QtScriptShell_TorControl::QtScriptShell_TorControl(ControlMethod::Method  method)$/;"	f	class:QtScriptShell_TorControl	signature:(ControlMethod::Method method)
QtScriptShell_TorControl::QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    QtScriptShell_TorControl(ControlMethod::Method  method = ControlMethod::Port);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
QtScriptShell_TorControl::__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_TorControl	file:	access:public
QtScriptShell_TorControl::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QChildEvent* arg__1)
QtScriptShell_TorControl::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void childEvent(QChildEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QChildEvent* arg__1)
QtScriptShell_TorControl::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QEvent* arg__1)
QtScriptShell_TorControl::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void customEvent(QEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QEvent* arg__1)
QtScriptShell_TorControl::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^bool  QtScriptShell_TorControl::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QEvent* arg__1)
QtScriptShell_TorControl::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    bool  event(QEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QEvent* arg__1)
QtScriptShell_TorControl::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^bool  QtScriptShell_TorControl::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_TorControl	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_TorControl::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    bool  eventFilter(QObject*  arg__1, QEvent*  arg__2);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_TorControl::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QTimerEvent* arg__1)
QtScriptShell_TorControl::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void timerEvent(QTimerEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QTimerEvent* arg__1)
QtScriptShell_TorControl::~QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^QtScriptShell_TorControl::~QtScriptShell_TorControl() {}$/;"	f	class:QtScriptShell_TorControl	signature:()
QtScriptShell_TorControl::~QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    ~QtScriptShell_TorControl();$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:()
QtScriptShell_TorSignal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    QtScriptShell_TorSignal();$/;"	p	class:QtScriptShell_TorSignal	file:	access:public	signature:()
QtScriptShell_TorSignal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^class QtScriptShell_TorSignal : public TorSignal$/;"	c	file:	inherits:TorSignal
QtScriptShell_TorSignal::QtScriptShell_TorSignal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    QtScriptShell_TorSignal();$/;"	p	class:QtScriptShell_TorSignal	file:	access:public	signature:()
QtScriptShell_TorSignal::__qtscript_self	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_TorSignal	file:	access:public
QtScriptShell_TorSignal::~QtScriptShell_TorSignal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    ~QtScriptShell_TorSignal();$/;"	p	class:QtScriptShell_TorSignal	file:	access:public	signature:()
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::QtScriptShell_X()$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::QtScriptShell_X(const QString& _v_arg0)$/;"	f	class:QtScriptShell_X	signature:(const QString& _v_arg0)
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QtScriptShell_X(const QString& _v_arg0);$/;"	p	class:QtScriptShell_X	access:public	signature:(const QString& _v_arg0)
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^class QtScriptShell_X : public X$/;"	c	inherits:X
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::QtScriptShell_X()$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::QtScriptShell_X(const QString &a)$/;"	f	class:QtScriptShell_X	signature:(const QString &a)
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QtScriptShell_X(const QString &a);$/;"	p	class:QtScriptShell_X	access:public	signature:(const QString &a)
QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^class QtScriptShell_X : public X$/;"	c	inherits:X
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::QtScriptShell_X()$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::QtScriptShell_X(const QString& _v_arg0)$/;"	f	class:QtScriptShell_X	signature:(const QString& _v_arg0)
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QtScriptShell_X(const QString& _v_arg0);$/;"	p	class:QtScriptShell_X	access:public	signature:(const QString& _v_arg0)
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::QtScriptShell_X()$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::QtScriptShell_X(const QString &a)$/;"	f	class:QtScriptShell_X	signature:(const QString &a)
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QtScriptShell_X::QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QtScriptShell_X(const QString &a);$/;"	p	class:QtScriptShell_X	access:public	signature:(const QString &a)
QtScriptShell_X::__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_X	access:public
QtScriptShell_X::__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_X	access:public
QtScriptShell_X::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QChildEvent* arg__1)
QtScriptShell_X::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void childEvent(QChildEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QChildEvent* arg__1)
QtScriptShell_X::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QChildEvent* arg__1)
QtScriptShell_X::childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void childEvent(QChildEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QChildEvent* arg__1)
QtScriptShell_X::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
QtScriptShell_X::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void customEvent(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
QtScriptShell_X::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
QtScriptShell_X::customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void customEvent(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
QtScriptShell_X::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^bool QtScriptShell_X::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
QtScriptShell_X::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  bool event(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
QtScriptShell_X::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^bool QtScriptShell_X::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
QtScriptShell_X::event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  bool event(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
QtScriptShell_X::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^bool QtScriptShell_X::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_X	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_X::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  bool eventFilter(QObject* arg__1, QEvent* arg__2);$/;"	p	class:QtScriptShell_X	access:public	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_X::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^bool QtScriptShell_X::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_X	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_X::eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  bool eventFilter(QObject* arg__1, QEvent* arg__2);$/;"	p	class:QtScriptShell_X	access:public	signature:(QObject* arg__1, QEvent* arg__2)
QtScriptShell_X::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QTimerEvent* arg__1)
QtScriptShell_X::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void timerEvent(QTimerEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QTimerEvent* arg__1)
QtScriptShell_X::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QTimerEvent* arg__1)
QtScriptShell_X::timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void timerEvent(QTimerEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QTimerEvent* arg__1)
QtScriptShell_X::~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::~QtScriptShell_X() {}$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X::~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  virtual ~QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QtScriptShell_X::~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::~QtScriptShell_X() {}$/;"	f	class:QtScriptShell_X	signature:()
QtScriptShell_X::~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  ~QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
QueryServiceStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  QueryServiceStatus_fn    QueryServiceStatus;$/;"	m	struct:ServiceFunctions	access:public
QueryServiceStatus_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *QueryServiceStatus_fn)($/;"	t
Quit	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Quit,$/;"	e	enum:VMessageBox::Button
R	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/media-playback-start.png	/^\/‚√˛)ºJ∏-\/}^ü/;"	v
READ_TIMEOUT	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^#define READ_TIMEOUT /;"	d	file:
RECV_COLOR	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define RECV_COLOR /;"	d
REFRESH_RATE	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^#define REFRESH_RATE /;"	d
RELAY_SIGNAL	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^#define RELAY_SIGNAL(/;"	d	file:
RELAY_SIGNAL	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^#undef RELAY_SIGNAL$/;"	d	file:
ROLE_TOPIC_ID	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ROLE_TOPIC_ID /;"	d	file:
ROLE_TOPIC_QRC_PATH	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^#define ROLE_TOPIC_QRC_PATH /;"	d	file:
ROLE_TYPE	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^#define ROLE_TYPE /;"	d	file:
ReceiveData	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^int ReceiveData(int socket, char * data, int length, int timeout)$/;"	f	signature:(int socket, char * data, int length, int timeout)
ReceiveData	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^int ReceiveData(int socket, char * data, int length, int timeout);$/;"	p	signature:(int socket, char * data, int length, int timeout)
ReceiveStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	g	class:ControlConnection::ReceiveWaiter	access:private
ReceiveWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      ReceiveWaiter() { _status = Waiting; }$/;"	f	class:ControlConnection::ReceiveWaiter	access:public	signature:()
ReceiveWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  class ReceiveWaiter {$/;"	c	class:ControlConnection	access:private
RecommendIgnore	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RecommendIgnore,$/;"	e	enum:BootstrapStatus::Recommendation
RecommendWarn	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RecommendWarn$/;"	e	enum:BootstrapStatus::Recommendation
Recommendation	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  enum Recommendation {$/;"	g	class:BootstrapStatus	access:public
RegionDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    RegionDatabase,$/;"	e	enum:GeoIpDatabase::DatabaseType
Reject	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    Reject  \/**< Connections matching this policy will be rejected. *\/$/;"	e	enum:Policy::Action
RejectAll	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^    RejectAll  \/**< Rejects all connections. Equivalent to "reject *:*". *\/$/;"	e	enum:Policy::SpecialPolicy
Reload	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Reload,   \/**< SIGHUP: Reloads config items and refetch directory *\/$/;"	e	enum:TorSignal::Signal
Remap	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Remap         \/**< Address re-mapped to another *\/$/;"	e	enum:Stream::Status
ReplaceData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^} ReplaceData;$/;"	t	typeref:struct:s_ReplaceData	file:
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine()$/;"	f	class:ReplyLine	signature:()
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine(const QString &status, const QString &msg)$/;"	f	class:ReplyLine	signature:(const QString &status, const QString &msg)
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine(const QString &status, const QString &msg,$/;"	f	class:ReplyLine	signature:(const QString &status, const QString &msg, const QString &data)
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine();$/;"	p	class:ReplyLine	access:public	signature:()
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine(const QString &status, const QString &message);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status, const QString &message)
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine(const QString &status, const QString &message, const QString &data);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status, const QString &message, const QString &data)
ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^class ReplyLine$/;"	c
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine()$/;"	f	class:ReplyLine	signature:()
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine(const QString &status, const QString &msg)$/;"	f	class:ReplyLine	signature:(const QString &status, const QString &msg)
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::ReplyLine(const QString &status, const QString &msg,$/;"	f	class:ReplyLine	signature:(const QString &status, const QString &msg, const QString &data)
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine();$/;"	p	class:ReplyLine	access:public	signature:()
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine(const QString &status, const QString &message);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status, const QString &message)
ReplyLine::ReplyLine	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  ReplyLine(const QString &status, const QString &message, const QString &data);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status, const QString &message, const QString &data)
ReplyLine::_data	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QStringList _data;  \/**< Contents of any DataReplyLines in this line. *\/$/;"	m	class:ReplyLine	access:private
ReplyLine::_message	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString _message;   \/**< ReplyText portion of this reply line. *\/$/;"	m	class:ReplyLine	access:private
ReplyLine::_status	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString _status;    \/**< Response status code. *\/$/;"	m	class:ReplyLine	access:private
ReplyLine::appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::appendData(const QString &data)$/;"	f	class:ReplyLine	signature:(const QString &data)
ReplyLine::appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void appendData(const QString &data);$/;"	p	class:ReplyLine	access:public	signature:(const QString &data)
ReplyLine::getData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getData() const$/;"	f	class:ReplyLine	signature:() const
ReplyLine::getData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QStringList getData() const;$/;"	p	class:ReplyLine	access:public	signature:() const
ReplyLine::getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getMessage() const$/;"	f	class:ReplyLine	signature:() const
ReplyLine::getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString getMessage() const;$/;"	p	class:ReplyLine	access:public	signature:() const
ReplyLine::getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getStatus() const$/;"	f	class:ReplyLine	signature:() const
ReplyLine::getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString getStatus() const;$/;"	p	class:ReplyLine	access:public	signature:() const
ReplyLine::hasData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  bool hasData() const { return _data.size() > 0; }$/;"	f	class:ReplyLine	access:public	signature:() const
ReplyLine::setMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::setMessage(const QString &msg)$/;"	f	class:ReplyLine	signature:(const QString &msg)
ReplyLine::setMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void setMessage(const QString &msg);$/;"	p	class:ReplyLine	access:public	signature:(const QString &msg)
ReplyLine::setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::setStatus(const QString &status)$/;"	f	class:ReplyLine	signature:(const QString &status)
ReplyLine::setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void setStatus(const QString &status);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status)
ReplyLine::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::toString() const$/;"	f	class:ReplyLine	signature:() const
ReplyLine::toString	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString toString() const;$/;"	p	class:ReplyLine	access:public	signature:() const
ReplyLine::unescape	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::unescape(const QString &escaped)$/;"	f	class:ReplyLine	signature:(const QString &escaped)
ReplyLine::unescape	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  static QString unescape(const QString &escaped);$/;"	p	class:ReplyLine	access:private	signature:(const QString &escaped)
RequestingDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RequestingDescriptors,$/;"	e	enum:BootstrapStatus::Status
RequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    RequestingNetworkStatus,$/;"	e	enum:BootstrapStatus::Status
ResourceLimitReached	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ResourceLimitReached$/;"	e	enum:tc::ConnectionStatusReason
Retry	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Retry,$/;"	e	enum:VMessageBox::Button
RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::RouterDescriptor(QStringList descriptor, bool microdesc)$/;"	f	class:RouterDescriptor	signature:(QStringList descriptor, bool microdesc)
RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterDescriptor(QStringList descriptor, bool microdesc = false);$/;"	p	class:RouterDescriptor	access:public	signature:(QStringList descriptor, bool microdesc = false)
RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterDescriptor(bool microdesc = false) : _microdesc(microdesc) {}$/;"	f	class:RouterDescriptor	access:public	signature:(bool microdesc = false)
RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^class RouterDescriptor$/;"	c
RouterDescriptor::Hibernating	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Hibernating,  \/**< Router is currently hibernating. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
RouterDescriptor::Offline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Offline       \/**< Router is unresponsive. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
RouterDescriptor::Online	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^    Online,       \/**< Router is online and reachable. *\/$/;"	e	enum:RouterDescriptor::RouterStatusEnum
RouterDescriptor::RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::RouterDescriptor(QStringList descriptor, bool microdesc)$/;"	f	class:RouterDescriptor	signature:(QStringList descriptor, bool microdesc)
RouterDescriptor::RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterDescriptor(QStringList descriptor, bool microdesc = false);$/;"	p	class:RouterDescriptor	access:public	signature:(QStringList descriptor, bool microdesc = false)
RouterDescriptor::RouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterDescriptor(bool microdesc = false) : _microdesc(microdesc) {}$/;"	f	class:RouterDescriptor	access:public	signature:(bool microdesc = false)
RouterDescriptor::RouterStatusEnum	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  enum RouterStatusEnum {$/;"	g	class:RouterDescriptor	access:public
RouterDescriptor::_avgBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _avgBandwidth;   \/**< Average bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_burstBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _burstBandwidth; \/**< Burst bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_contact	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _contact;        \/**< Router operator contact information. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 _dirPort;        \/**< Router's DirPort. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_exitPolicy	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _exitPolicy;     \/** Exit policy *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_family	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _family;         \/** Family *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_fingerprint	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _fingerprint;    \/**< Router's fingerprint. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _id;             \/**< Router's descriptor ID. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_ip	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QHostAddress _ip;        \/**< Router's IP address. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_location	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _location;       \/**< Geographic location information. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_microdesc	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool _microdesc;         \/** *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _name;           \/**< The router's name. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_observedBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _observedBandwidth; \/**< Observed bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_onionKey	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _onionKey;       \/** Router SSL key *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 _orPort;         \/**< Router's ORPort. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_platform	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _platform;       \/**< Platform on which router is running. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QDateTime _published;    \/**< Date router descriptor was published. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterStatusEnum _status;\/**< Availability status of this router. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::_uptime	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _uptime;         \/**< Time the router has been online. *\/$/;"	m	class:RouterDescriptor	access:private
RouterDescriptor::appendRouterStatusInfo	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::appendRouterStatusInfo(const RouterStatus &rs)$/;"	f	class:RouterDescriptor	signature:(const RouterStatus &rs)
RouterDescriptor::appendRouterStatusInfo	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void appendRouterStatusInfo(const RouterStatus &rs);$/;"	p	class:RouterDescriptor	access:public	signature:(const RouterStatus &rs)
RouterDescriptor::averageBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 averageBandwidth() const { return _avgBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::burstBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 burstBandwidth() const { return _burstBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::contact	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString contact() const { return _contact; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 dirPort() const { return _dirPort; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::exitPolicy	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString exitPolicy() const { return _exitPolicy; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::family	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString family() const { return _family; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::fingerprint	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString fingerprint() const { return _fingerprint; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::fromTorControl	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::fromTorControl(TorControl *tc)$/;"	f	class:RouterDescriptor	signature:(TorControl *tc)
RouterDescriptor::fromTorControl	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  static RouterDescriptor *fromTorControl(TorControl *tc);$/;"	p	class:RouterDescriptor	access:public	signature:(TorControl *tc)
RouterDescriptor::hibernating	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool hibernating() const { return _status == Hibernating; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString id() const { return _id; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::ip	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QHostAddress ip() const { return _ip; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool isEmpty() { return (_id.isEmpty() && _name.isEmpty()); }$/;"	f	class:RouterDescriptor	access:public	signature:()
RouterDescriptor::location	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString location() const { return _location; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString name() const { return _name; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::observedBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 observedBandwidth() const { return _observedBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::offline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool offline() const { return _status == Offline; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::onionKey	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString onionKey() const { return _onionKey; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::online	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool online() const { return _status == Online; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 orPort() const { return _orPort; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::parseDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::parseDescriptor(QStringList descriptor)$/;"	f	class:RouterDescriptor	signature:(QStringList descriptor)
RouterDescriptor::parseDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void parseDescriptor(QStringList descriptor);$/;"	p	class:RouterDescriptor	access:private	signature:(QStringList descriptor)
RouterDescriptor::platform	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString platform() const { return _platform; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QDateTime published() const { return _published; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptor::setLocation	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void setLocation(QString location) { _location = location; }$/;"	f	class:RouterDescriptor	access:public	signature:(QString location)
RouterDescriptor::setOffline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void setOffline(bool offline) { _status = (offline ? Offline : Online); }$/;"	f	class:RouterDescriptor	access:public	signature:(bool offline)
RouterDescriptor::status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::status()$/;"	f	class:RouterDescriptor	signature:()
RouterDescriptor::status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString status();$/;"	p	class:RouterDescriptor	access:public	signature:()
RouterDescriptor::uptime	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 uptime() const { return _uptime; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
RouterDescriptorView	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::RouterDescriptorView(QWidget *parent)$/;"	f	class:RouterDescriptorView	signature:(QWidget *parent)
RouterDescriptorView	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  RouterDescriptorView(QWidget *parent = 0);$/;"	p	class:RouterDescriptorView	access:public	signature:(QWidget *parent = 0)
RouterDescriptorView	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^class RouterDescriptorView : public QTextEdit$/;"	c	inherits:QTextEdit
RouterDescriptorView::RouterDescriptorView	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::RouterDescriptorView(QWidget *parent)$/;"	f	class:RouterDescriptorView	signature:(QWidget *parent)
RouterDescriptorView::RouterDescriptorView	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  RouterDescriptorView(QWidget *parent = 0);$/;"	p	class:RouterDescriptorView	access:public	signature:(QWidget *parent = 0)
RouterDescriptorView::adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::adjustUptime(quint64 uptime, QDateTime published)$/;"	f	class:RouterDescriptorView	signature:(quint64 uptime, QDateTime published)
RouterDescriptorView::adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  quint64 adjustUptime(quint64 uptime, QDateTime published);$/;"	p	class:RouterDescriptorView	access:private	signature:(quint64 uptime, QDateTime published)
RouterDescriptorView::contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:RouterDescriptorView	signature:(QContextMenuEvent *event)
RouterDescriptorView::contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  virtual void contextMenuEvent(QContextMenuEvent *event);$/;"	p	class:RouterDescriptorView	access:protected	signature:(QContextMenuEvent *event)
RouterDescriptorView::copySelectedText	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::copySelectedText()$/;"	f	class:RouterDescriptorView	signature:()
RouterDescriptorView::copySelectedText	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void copySelectedText();$/;"	p	class:RouterDescriptorView	access:public	signature:()
RouterDescriptorView::display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::display(QList<RouterDescriptor> rdlist)$/;"	f	class:RouterDescriptorView	signature:(QList<RouterDescriptor> rdlist)
RouterDescriptorView::display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::display(RouterDescriptor rd)$/;"	f	class:RouterDescriptorView	signature:(RouterDescriptor rd)
RouterDescriptorView::display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void display(QList<RouterDescriptor> rdlist);$/;"	p	class:RouterDescriptorView	access:public	signature:(QList<RouterDescriptor> rdlist)
RouterDescriptorView::display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void display(RouterDescriptor rd);$/;"	p	class:RouterDescriptorView	access:public	signature:(RouterDescriptor rd)
RouterInfoDialog	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::RouterInfoDialog(QWidget *parent)$/;"	f	class:RouterInfoDialog	signature:(QWidget *parent)
RouterInfoDialog	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  RouterInfoDialog(QWidget *parent = 0);$/;"	p	class:RouterInfoDialog	access:public	signature:(QWidget *parent = 0)
RouterInfoDialog	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^class RouterInfoDialog : public QDialog$/;"	c	inherits:QDialog
RouterInfoDialog::RouterInfoDialog	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::RouterInfoDialog(QWidget *parent)$/;"	f	class:RouterInfoDialog	signature:(QWidget *parent)
RouterInfoDialog::RouterInfoDialog	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  RouterInfoDialog(QWidget *parent = 0);$/;"	p	class:RouterInfoDialog	access:public	signature:(QWidget *parent = 0)
RouterInfoDialog::adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::adjustUptime(quint64 uptime, const QDateTime &published)$/;"	f	class:RouterInfoDialog	signature:(quint64 uptime, const QDateTime &published)
RouterInfoDialog::adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  quint64 adjustUptime(quint64 uptime, const QDateTime &published);$/;"	p	class:RouterInfoDialog	access:private	signature:(quint64 uptime, const QDateTime &published)
RouterInfoDialog::setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::setLocation(const QString &location)$/;"	f	class:RouterInfoDialog	signature:(const QString &location)
RouterInfoDialog::setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  void setLocation(const QString &location);$/;"	p	class:RouterInfoDialog	access:public	signature:(const QString &location)
RouterInfoDialog::setRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::setRouterInfo(const QStringList &desc,$/;"	f	class:RouterInfoDialog	signature:(const QStringList &desc, const RouterStatus &status)
RouterInfoDialog::setRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  void setRouterInfo(const QStringList &desc, const RouterStatus &status);$/;"	p	class:RouterInfoDialog	access:public	signature:(const QStringList &desc, const RouterStatus &status)
RouterInfoDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  Ui::RouterInfoDialog ui;$/;"	m	class:RouterInfoDialog	access:private
RouterList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    RouterList,$/;"	e	enum:TorOpt::OptType
RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::RouterListItem(RouterListWidget *list, RouterDescriptor rd)$/;"	f	class:RouterListItem	signature:(RouterListWidget *list, RouterDescriptor rd)
RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterListItem(RouterListWidget *list, RouterDescriptor rd);$/;"	p	class:RouterListItem	access:public	signature:(RouterListWidget *list, RouterDescriptor rd)
RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^class RouterListItem : public QTreeWidgetItem$/;"	c	inherits:QTreeWidgetItem
RouterListItem::RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::RouterListItem(RouterListWidget *list, RouterDescriptor rd)$/;"	f	class:RouterListItem	signature:(RouterListWidget *list, RouterDescriptor rd)
RouterListItem::RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterListItem(RouterListWidget *list, RouterDescriptor rd);$/;"	p	class:RouterListItem	access:public	signature:(RouterListWidget *list, RouterDescriptor rd)
RouterListItem::_countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString _countryCode;$/;"	m	class:RouterListItem	access:private
RouterListItem::_list	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterListWidget* _list; \/**< The list for this list item. *\/$/;"	m	class:RouterListItem	access:private
RouterListItem::_location	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  GeoIpRecord _location;   \/**< Location information for this router. *\/$/;"	m	class:RouterListItem	access:private
RouterListItem::_rd	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterDescriptor* _rd;   \/**< Descriptor for this router item. *\/$/;"	m	class:RouterListItem	access:private
RouterListItem::_statusValue	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  qint64 _statusValue;     \/**< Value used to sort items by status. *\/$/;"	m	class:RouterListItem	access:private
RouterListItem::descriptor	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterDescriptor descriptor() const { return *_rd; }$/;"	f	class:RouterListItem	access:public	signature:() const
RouterListItem::id	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString id() const { return _rd->id(); }$/;"	f	class:RouterListItem	access:public	signature:() const
RouterListItem::location	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  GeoIpRecord location() const { return _location; }$/;"	f	class:RouterListItem	access:public	signature:() const
RouterListItem::name	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString name() const { return _rd->name(); }$/;"	f	class:RouterListItem	access:public	signature:() const
RouterListItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:RouterListItem	signature:(const QTreeWidgetItem &other) const
RouterListItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:RouterListItem	access:public	signature:(const QTreeWidgetItem &other) const
RouterListItem::setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::setLocation(const GeoIpRecord &geoip)$/;"	f	class:RouterListItem	signature:(const GeoIpRecord &geoip)
RouterListItem::setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  void setLocation(const GeoIpRecord &geoip);$/;"	p	class:RouterListItem	access:public	signature:(const GeoIpRecord &geoip)
RouterListItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::update(const RouterDescriptor &rd)$/;"	f	class:RouterListItem	signature:(const RouterDescriptor &rd)
RouterListItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  void update(const RouterDescriptor &rd);$/;"	p	class:RouterListItem	access:public	signature:(const RouterDescriptor &rd)
RouterListItem::~RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::~RouterListItem()$/;"	f	class:RouterListItem	signature:()
RouterListItem::~RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  ~RouterListItem();$/;"	p	class:RouterListItem	access:public	signature:()
RouterListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::RouterListWidget(QWidget *parent)$/;"	f	class:RouterListWidget	signature:(QWidget *parent)
RouterListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListWidget(QWidget *parent = 0);$/;"	p	class:RouterListWidget	access:public	signature:(QWidget *parent = 0)
RouterListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^class RouterListWidget : public QTreeWidget$/;"	c	inherits:QTreeWidget
RouterListWidget::Columns	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  enum Columns {$/;"	g	class:RouterListWidget	access:public
RouterListWidget::CountryColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    CountryColumn = 1,  \/**< Router's country flag. *\/$/;"	e	enum:RouterListWidget::Columns
RouterListWidget::NameColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    NameColumn    = 2,  \/**< Router's name. *\/$/;"	e	enum:RouterListWidget::Columns
RouterListWidget::RouterListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::RouterListWidget(QWidget *parent)$/;"	f	class:RouterListWidget	signature:(QWidget *parent)
RouterListWidget::RouterListWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListWidget(QWidget *parent = 0);$/;"	p	class:RouterListWidget	access:public	signature:(QWidget *parent = 0)
RouterListWidget::StatusColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    StatusColumn  = 0,  \/**< Status column, indicating bandwidth. *\/$/;"	e	enum:RouterListWidget::Columns
RouterListWidget::_idmap	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  QHash<QString,RouterListItem*> _idmap;$/;"	m	class:RouterListWidget	access:private
RouterListWidget::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::addRouter(const RouterDescriptor &rd)$/;"	f	class:RouterListWidget	signature:(const RouterDescriptor &rd)
RouterListWidget::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListItem* addRouter(const RouterDescriptor &rd);$/;"	p	class:RouterListWidget	access:public	signature:(const RouterDescriptor &rd)
RouterListWidget::clearRouters	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::clearRouters()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::clearRouters	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void clearRouters();$/;"	p	class:RouterListWidget	access:public	signature:()
RouterListWidget::contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:RouterListWidget	signature:(QContextMenuEvent *event)
RouterListWidget::contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  virtual void contextMenuEvent(QContextMenuEvent *event);$/;"	p	class:RouterListWidget	access:protected	signature:(QContextMenuEvent *event)
RouterListWidget::copySelectedFingerprints	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::copySelectedFingerprints()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::copySelectedFingerprints	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void copySelectedFingerprints();$/;"	p	class:RouterListWidget	access:private	signature:()
RouterListWidget::copySelectedNicknames	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::copySelectedNicknames()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::copySelectedNicknames	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void copySelectedNicknames();$/;"	p	class:RouterListWidget	access:private	signature:()
RouterListWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::deselectAll()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void deselectAll();$/;"	p	class:RouterListWidget	access:public	signature:()
RouterListWidget::findRouterById	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::findRouterById(QString id)$/;"	f	class:RouterListWidget	signature:(QString id)
RouterListWidget::findRouterById	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListItem* findRouterById(QString id);$/;"	p	class:RouterListWidget	access:public	signature:(QString id)
RouterListWidget::keyPressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::keyPressEvent(QKeyEvent *event)$/;"	f	class:RouterListWidget	signature:(QKeyEvent *event)
RouterListWidget::keyPressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void keyPressEvent(QKeyEvent *event);$/;"	p	class:RouterListWidget	access:protected	signature:(QKeyEvent *event)
RouterListWidget::onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::onRouterSearch(const QString routerNickname)$/;"	f	class:RouterListWidget	signature:(const QString routerNickname)
RouterListWidget::onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void onRouterSearch(const QString routerNickname);$/;"	p	class:RouterListWidget	access:public	signature:(const QString routerNickname)
RouterListWidget::onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::onSelectionChanged()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void onSelectionChanged();$/;"	p	class:RouterListWidget	access:private	signature:()
RouterListWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::retranslateUi()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void retranslateUi();$/;"	p	class:RouterListWidget	access:public	signature:()
RouterListWidget::routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void routerSelected(QList<RouterDescriptor> rd);$/;"	p	class:RouterListWidget	access:public	signature:(QList<RouterDescriptor> rd)
RouterListWidget::searchNextRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::searchNextRouter(const QString routerNickname)$/;"	f	class:RouterListWidget	signature:(const QString routerNickname)
RouterListWidget::searchNextRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void searchNextRouter(const QString routerNickname);$/;"	p	class:RouterListWidget	access:public	signature:(const QString routerNickname)
RouterListWidget::zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void zoomToRouter(QString id);$/;"	p	class:RouterListWidget	access:public	signature:(QString id)
RouterListWidget::zoomToSelectedRelay	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::zoomToSelectedRelay()$/;"	f	class:RouterListWidget	signature:()
RouterListWidget::zoomToSelectedRelay	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void zoomToSelectedRelay();$/;"	p	class:RouterListWidget	access:private	signature:()
RouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.cpp	/^RouterStatus::RouterStatus(const QStringList &status)$/;"	f	class:RouterStatus	signature:(const QStringList &status)
RouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  RouterStatus(const QStringList &status);$/;"	p	class:RouterStatus	access:public	signature:(const QStringList &status)
RouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^class RouterStatus$/;"	c
RouterStatus::Authority	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Authority    = 0x0001,$/;"	e	enum:RouterStatus::Flag
RouterStatus::BadDirectory	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    BadDirectory = 0x0004,$/;"	e	enum:RouterStatus::Flag
RouterStatus::BadExit	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    BadExit      = 0x0002,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Exit	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Exit         = 0x0008,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Fast	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Fast         = 0x0010,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Flag	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  enum Flag {$/;"	g	class:RouterStatus	access:public
RouterStatus::Guard	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Guard        = 0x0020,$/;"	e	enum:RouterStatus::Flag
RouterStatus::HSDir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    HSDir        = 0x0040,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Named	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Named        = 0x0080,$/;"	e	enum:RouterStatus::Flag
RouterStatus::RouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.cpp	/^RouterStatus::RouterStatus(const QStringList &status)$/;"	f	class:RouterStatus	signature:(const QStringList &status)
RouterStatus::RouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  RouterStatus(const QStringList &status);$/;"	p	class:RouterStatus	access:public	signature:(const QStringList &status)
RouterStatus::Running	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Running      = 0x0200,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Stable	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Stable       = 0x0100,$/;"	e	enum:RouterStatus::Flag
RouterStatus::Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Unknown      = 0x0000,$/;"	e	enum:RouterStatus::Flag
RouterStatus::V2Dir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    V2Dir        = 0x0800,$/;"	e	enum:RouterStatus::Flag
RouterStatus::V3Dir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    V3Dir        = 0x1000$/;"	e	enum:RouterStatus::Flag
RouterStatus::Valid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Valid        = 0x0400,$/;"	e	enum:RouterStatus::Flag
RouterStatus::_bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint64 _bandwidth; \/**< Consensus bandwidth *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_digest	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _digest; \/**< Hexadecimal-encoded hash of the router's most recent$/;"	m	class:RouterStatus	access:private
RouterStatus::_dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 _dirPort; \/**< Current directory port. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_flags	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flags _flags;     \/**< OR-ed field of the router's current status flags. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _id;   \/**< Hexadecimal-encoded router identity digest. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_ipAddress	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QHostAddress _ipAddress;  \/**< Current IP address. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _name; \/**< Router nickname. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 _orPort;  \/**< Current OR port. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::_published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QDateTime _published; \/**< The publication time of the router's most recent$/;"	m	class:RouterStatus	access:private
RouterStatus::_valid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool _valid;   \/**< True if this object is a valid RouterStatus. *\/$/;"	m	class:RouterStatus	access:private
RouterStatus::bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint64 bandwidth() const { return _bandwidth; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::descriptorDigest	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString descriptorDigest() const { return _digest; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 dirPort() const { return _dirPort; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.cpp	/^RouterStatus::flagValue(const QString &flag)$/;"	f	class:RouterStatus	signature:(const QString &flag)
RouterStatus::flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flag flagValue(const QString &flag);$/;"	p	class:RouterStatus	access:private	signature:(const QString &flag)
RouterStatus::flags	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flags flags() const { return _flags; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString id() const { return _id; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::ipAddress	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QHostAddress ipAddress() const { return _ipAddress; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool isRunning() const { return (flags() & Running); }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool isValid() const { return _valid; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString name() const { return _name; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 orPort() const { return _orPort; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatus::published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QDateTime published() const { return _published; }$/;"	f	class:RouterStatus	access:public	signature:() const
RouterStatusEnum	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  enum RouterStatusEnum {$/;"	g	class:RouterDescriptor	access:public
Running	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Running,  \/\/!< test still running$/;"	e	enum:BootstrapTestCase::TestResult
Running	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Running      = 0x0200,$/;"	e	enum:RouterStatus::Flag
S	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/preferences-system-network-sharing.png	/^/;"	v
SCALE_COLOR	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define SCALE_COLOR /;"	d
SCROLL_STEP	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define SCROLL_STEP /;"	d
SEND_COLOR	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define SEND_COLOR /;"	d
SERVICEPREFIX	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define SERVICEPREFIX /;"	d	file:
SERVICEPREFIX2	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define SERVICEPREFIX2 /;"	d	file:
SERVICE_ERROR	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define SERVICE_ERROR /;"	d
SETTINGS_DEFAULTS_FILE	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^#define SETTINGS_DEFAULTS_FILE /;"	d	file:
SETTINGS_FILE	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^#define SETTINGS_FILE /;"	d	file:
SETTING_ACCOUNTING_MAX	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_ACCOUNTING_MAX /;"	d	file:
SETTING_ACCOUNTING_START	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_ACCOUNTING_START /;"	d	file:
SETTING_ALLOW_PANIC	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_ALLOW_PANIC /;"	d	file:
SETTING_ALWAYS_ON_TOP	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define SETTING_ALWAYS_ON_TOP /;"	d	file:
SETTING_AUTH_METHOD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_AUTH_METHOD /;"	d	file:
SETTING_AUTH_TOKEN	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_AUTH_TOKEN /;"	d	file:
SETTING_AUTOCONTROL	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_AUTOCONTROL /;"	d	file:
SETTING_BANDWIDTH_BURST	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_BANDWIDTH_BURST /;"	d	file:
SETTING_BANDWIDTH_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_BANDWIDTH_RATE /;"	d	file:
SETTING_BOOTSTRAP	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_BOOTSTRAP /;"	d	file:
SETTING_BOOTSTRAP_FROM	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_BOOTSTRAP_FROM /;"	d	file:
SETTING_BRIDGE_LIST	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_BRIDGE_LIST /;"	d	file:
SETTING_BRIDGE_RELAY	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_BRIDGE_RELAY /;"	d	file:
SETTING_BROWSER_DIRECTORY	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_BROWSER_DIRECTORY /;"	d	file:
SETTING_BROWSER_EXECUTABLE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_BROWSER_EXECUTABLE /;"	d	file:
SETTING_CHANGED	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^#define SETTING_CHANGED /;"	d	file:
SETTING_CHECK_FOR_UPDATES	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_CHECK_FOR_UPDATES /;"	d	file:
SETTING_CONTACT	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_CONTACT /;"	d	file:
SETTING_CONTROL_ADDR	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_CONTROL_ADDR /;"	d	file:
SETTING_CONTROL_METHOD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_CONTROL_METHOD /;"	d	file:
SETTING_CONTROL_PASSWORD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_CONTROL_PASSWORD /;"	d	file:
SETTING_CONTROL_PORT	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_CONTROL_PORT /;"	d	file:
SETTING_DATA_DIRECTORY	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_DATA_DIRECTORY /;"	d	file:
SETTING_DATA_DIRECTORY	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_DATA_DIRECTORY /;"	d	file:
SETTING_DEFAULTS_TORRC	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_DEFAULTS_TORRC /;"	d	file:
SETTING_DIRMIRROR	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_DIRMIRROR /;"	d	file:
SETTING_DIRPORT	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_DIRPORT /;"	d	file:
SETTING_DISABLE_NETWORK	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_DISABLE_NETWORK /;"	d	file:
SETTING_ENABLED	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_ENABLED /;"	d	file:
SETTING_ENABLE_LOGFILE	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define SETTING_ENABLE_LOGFILE /;"	d	file:
SETTING_ENABLE_UPNP	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_ENABLE_UPNP /;"	d	file:
SETTING_EXITPOLICY	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_EXITPOLICY /;"	d	file:
SETTING_FASCIST_FIREWALL	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_FASCIST_FIREWALL /;"	d	file:
SETTING_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define SETTING_FILTER /;"	d	file:
SETTING_FILTER_TERM	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define SETTING_FILTER_TERM /;"	d	file:
SETTING_FIRST_RUN	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_FIRST_RUN /;"	d	file:
SETTING_HTTPS_PROXY	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_HTTPS_PROXY /;"	d	file:
SETTING_HTTPS_PROXY_AUTH	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_HTTPS_PROXY_AUTH /;"	d	file:
SETTING_ICON_PREF	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_ICON_PREF /;"	d	file:
SETTING_IM_EXECUTABLE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_IM_EXECUTABLE /;"	d	file:
SETTING_LANGUAGE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_LANGUAGE /;"	d	file:
SETTING_LAST_UPDATE_CHECK	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_LAST_UPDATE_CHECK /;"	d	file:
SETTING_LOCAL_GEOIP_DATABASE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_LOCAL_GEOIP_DATABASE /;"	d	file:
SETTING_LOGFILE	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define SETTING_LOGFILE /;"	d	file:
SETTING_MAX_MSG_COUNT	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^#define SETTING_MAX_MSG_COUNT /;"	d	file:
SETTING_MAX_MSG_COUNT	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define SETTING_MAX_MSG_COUNT /;"	d	file:
SETTING_MSG_FILTER	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^#define SETTING_MSG_FILTER /;"	d	file:
SETTING_NICKNAME	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_NICKNAME /;"	d	file:
SETTING_NONEXIT_RELAY	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_NONEXIT_RELAY /;"	d	file:
SETTING_OPACITY	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define SETTING_OPACITY /;"	d	file:
SETTING_ORPORT	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_ORPORT /;"	d	file:
SETTING_PANIC_PATH	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_PANIC_PATH /;"	d	file:
SETTING_PLUGIN_PATH	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_PLUGIN_PATH /;"	d	file:
SETTING_PREFER_TUNNELED_DIR_CONNS	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_PREFER_TUNNELED_DIR_CONNS /;"	d	file:
SETTING_PROXY_ADDRESS	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_PROXY_ADDRESS /;"	d	file:
SETTING_PROXY_PASSWORD	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_PROXY_PASSWORD /;"	d	file:
SETTING_PROXY_TYPE	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_PROXY_TYPE /;"	d	file:
SETTING_PROXY_USERNAME	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_PROXY_USERNAME /;"	d	file:
SETTING_PUBLISH_SERVER_DESCRIPTOR	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_PUBLISH_SERVER_DESCRIPTOR /;"	d	file:
SETTING_REACHABLE_ADDRESSES	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_REACHABLE_ADDRESSES /;"	d	file:
SETTING_REJECT_PLAINTEXT_PORTS	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_REJECT_PLAINTEXT_PORTS /;"	d	file:
SETTING_RELAY_BANDWIDTH_BURST	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_RELAY_BANDWIDTH_BURST /;"	d	file:
SETTING_RELAY_BANDWIDTH_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define SETTING_RELAY_BANDWIDTH_RATE /;"	d	file:
SETTING_REMEMBER_SHUTDOWN	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^#define SETTING_REMEMBER_SHUTDOWN /;"	d
SETTING_RUN_TOR_AT_START	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_RUN_TOR_AT_START /;"	d	file:
SETTING_SHOW_MAINWINDOW_AT_START	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_SHOW_MAINWINDOW_AT_START /;"	d	file:
SETTING_SKIP_VERSION_CHECK	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_SKIP_VERSION_CHECK /;"	d	file:
SETTING_SOCKET_PATH	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_SOCKET_PATH /;"	d	file:
SETTING_SOCKS4_PROXY	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_SOCKS4_PROXY /;"	d	file:
SETTING_SOCKS5_PASSWORD	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_SOCKS5_PASSWORD /;"	d	file:
SETTING_SOCKS5_PROXY	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_SOCKS5_PROXY /;"	d	file:
SETTING_SOCKS5_USERNAME	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_SOCKS5_USERNAME /;"	d	file:
SETTING_SOCKS_PORT	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_SOCKS_PORT /;"	d	file:
SETTING_SPLITTER_MAIN	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define SETTING_SPLITTER_MAIN /;"	d	file:
SETTING_SPLITTER_MAP	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define SETTING_SPLITTER_MAP /;"	d	file:
SETTING_SPLITTER_ROUT	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^#define SETTING_SPLITTER_ROUT /;"	d	file:
SETTING_STYLE	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^#define SETTING_STYLE /;"	d	file:
SETTING_STYLE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_STYLE /;"	d	file:
SETTING_TORRC	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_TORRC /;"	d	file:
SETTING_TOR_EXECUTABLE	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_TOR_EXECUTABLE /;"	d	file:
SETTING_TOR_GROUP	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_TOR_GROUP /;"	d	file:
SETTING_TOR_USER	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_TOR_USER /;"	d	file:
SETTING_TUNNEL_DIR_CONNS	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_TUNNEL_DIR_CONNS /;"	d	file:
SETTING_UPDATE_BRIDGES	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_UPDATE_BRIDGES /;"	d	file:
SETTING_USE_BRIDGES	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^#define SETTING_USE_BRIDGES /;"	d	file:
SETTING_USE_LOCAL_GEOIP_DATABASE	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define SETTING_USE_LOCAL_GEOIP_DATABASE /;"	d	file:
SETTING_USE_RANDOM_PASSWORD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_USE_RANDOM_PASSWORD /;"	d	file:
SETTING_WARN_PLAINTEXT_PORTS	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define SETTING_WARN_PLAINTEXT_PORTS /;"	d	file:
SIMPLEQ_EMPTY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SIMPLEQ_EMPTY(/;"	d
SIMPLEQ_END	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SIMPLEQ_END(/;"	d
SIMPLEQ_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_ENTRY(/;"	d
SIMPLEQ_FIRST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SIMPLEQ_FIRST(/;"	d
SIMPLEQ_FOREACH	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_FOREACH(/;"	d
SIMPLEQ_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_HEAD(/;"	d
SIMPLEQ_HEAD_INITIALIZER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_HEAD_INITIALIZER(/;"	d
SIMPLEQ_INIT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SIMPLEQ_INIT(/;"	d
SIMPLEQ_INSERT_AFTER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_INSERT_AFTER(/;"	d
SIMPLEQ_INSERT_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_INSERT_HEAD(/;"	d
SIMPLEQ_INSERT_TAIL	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_INSERT_TAIL(/;"	d
SIMPLEQ_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SIMPLEQ_NEXT(/;"	d
SIMPLEQ_REMOVE_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SIMPLEQ_REMOVE_HEAD(/;"	d
SLIST_EMPTY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_EMPTY(/;"	d
SLIST_END	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_END(/;"	d
SLIST_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SLIST_ENTRY(/;"	d
SLIST_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#undef SLIST_ENTRY$/;"	d
SLIST_FIRST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_FIRST(/;"	d
SLIST_FOREACH	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_FOREACH(/;"	d
SLIST_FOREACH_PREVPTR	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_FOREACH_PREVPTR(/;"	d
SLIST_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SLIST_HEAD(/;"	d
SLIST_HEAD_INITIALIZER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_HEAD_INITIALIZER(/;"	d
SLIST_INIT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_INIT(/;"	d
SLIST_INSERT_AFTER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_INSERT_AFTER(/;"	d
SLIST_INSERT_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_INSERT_HEAD(/;"	d
SLIST_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_NEXT(/;"	d
SLIST_REMOVE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define SLIST_REMOVE(/;"	d
SLIST_REMOVE_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_REMOVE_HEAD(/;"	d
SLIST_REMOVE_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	SLIST_REMOVE_NEXT(/;"	d
SOAPPREFIX	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define SOAPPREFIX /;"	d	file:
SOCKS_CONNECT	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_CONNECT /;"	d	file:
SOCKS_CONNECT_STATUS_OK	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_CONNECT_STATUS_OK /;"	d	file:
SOCKS_FAKE_IP	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_FAKE_IP /;"	d	file:
SOCKS_RESPONSE_LEN	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_RESPONSE_LEN /;"	d	file:
SOCKS_RESPONSE_VERSION	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_RESPONSE_VERSION /;"	d	file:
SOCKS_VERSION	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^#define SOCKS_VERSION /;"	d	file:
SOFTWARE	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.$/;"	v
SOFTWARE	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF$/;"	v
SPECIAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES $/;"	v
SPECIAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT$/;"	v
SPECIAL	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,$/;"	v
STARTUP_PROGRESS_AUTHENTICATING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_AUTHENTICATING /;"	d	file:
STARTUP_PROGRESS_BOOTSTRAPPING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_BOOTSTRAPPING /;"	d	file:
STARTUP_PROGRESS_CIRCUITBUILD	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_CIRCUITBUILD /;"	d	file:
STARTUP_PROGRESS_CONNECTING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_CONNECTING /;"	d	file:
STARTUP_PROGRESS_MAXIMUM	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_MAXIMUM /;"	d	file:
STARTUP_PROGRESS_STARTING	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^#define STARTUP_PROGRESS_STARTING /;"	d	file:
STARTUP_REG_KEY	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define STARTUP_REG_KEY /;"	d	file:
STATICLIB	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^#define STATICLIB$/;"	d	file:
STATICLIB	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^#define STATICLIB$/;"	d
STATICLIB	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^#undef STATICLIB$/;"	d
STATUS_COLUMN	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^#define STATUS_COLUMN /;"	d	file:
STR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define STR(/;"	d	file:
STRTOUI	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define STRTOUI	/;"	d
Se	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/applications-internet.png	/^i“—Íèa¨£å<´næ©à•ï∫úó‡I≠¯–‡q≤ç0Y¢‰∫ﬁRªU∫¯√kı	3Ú\\◊CΩ¡¶ï≤8&ÿ2L-Ã‰¯ﬁ¬”ók8∂0*›S’4ÈêßÆ6§˝øfw„Ãﬁ8ˇñ]y‹97Ç∑ûƒL!Ö@Fáò˜“qÈ∞z,Se‚øü%=[ôn≈9È#—ò-¶—Æ4(À¡iŸ‡ø¿≈•ù…ÿ 5äúl∞Î≠>∏'&ELTéÃ˝˚veqvµâªY–§ô$/;"	v
SendCommandEvent	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendCommandEvent(const ControlCommand &cmd, SendWaiter *w)$/;"	f	class:SendCommandEvent	signature:(const ControlCommand &cmd, SendWaiter *w)
SendCommandEvent	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendCommandEvent(const ControlCommand &cmd, SendWaiter *w = 0);$/;"	p	class:SendCommandEvent	access:public	signature:(const ControlCommand &cmd, SendWaiter *w = 0)
SendCommandEvent	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^class SendCommandEvent : public QEvent {$/;"	c	inherits:QEvent
SendCommandEvent::SendCommandEvent	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendCommandEvent(const ControlCommand &cmd, SendWaiter *w)$/;"	f	class:SendCommandEvent	signature:(const ControlCommand &cmd, SendWaiter *w)
SendCommandEvent::SendCommandEvent	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendCommandEvent(const ControlCommand &cmd, SendWaiter *w = 0);$/;"	p	class:SendCommandEvent	access:public	signature:(const ControlCommand &cmd, SendWaiter *w = 0)
SendCommandEvent::SendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  class SendWaiter {$/;"	c	class:SendCommandEvent	access:public
SendCommandEvent::SendWaiter::Failed	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
SendCommandEvent::SendWaiter::SendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    SendWaiter() { _status = Waiting; }$/;"	f	class:SendCommandEvent::SendWaiter	access:public	signature:()
SendCommandEvent::SendWaiter::SenderStatus	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	g	class:SendCommandEvent::SendWaiter	access:public
SendCommandEvent::SendWaiter::Success	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
SendCommandEvent::SendWaiter::Waiting	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
SendCommandEvent::SendWaiter::_errmsg	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QString _errmsg; \/**< Error message if the send fails. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
SendCommandEvent::SendWaiter::_mutex	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QMutex _mutex; \/**< Mutex around the wait condition. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
SendCommandEvent::SendWaiter::_status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	m	class:SendCommandEvent::SendWaiter	typeref:enum:SendCommandEvent::SendWaiter::SenderStatus	access:public
SendCommandEvent::SendWaiter::_waitCond	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QWaitCondition _waitCond; \/**< Waits for the send to complete. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
SendCommandEvent::SendWaiter::getResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::getResult(QString *errmsg)$/;"	f	class:SendCommandEvent::SendWaiter	signature:(QString *errmsg)
SendCommandEvent::SendWaiter::getResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    bool getResult(QString *errmsg = 0);$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:(QString *errmsg = 0)
SendCommandEvent::SendWaiter::setResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::setResult(bool success, const QString &errmsg)$/;"	f	class:SendCommandEvent::SendWaiter	signature:(bool success, const QString &errmsg)
SendCommandEvent::SendWaiter::setResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    void setResult(bool success, const QString &errmsg = QString());$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:(bool success, const QString &errmsg = QString())
SendCommandEvent::SendWaiter::status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::status()$/;"	f	class:SendCommandEvent::SendWaiter	signature:()
SendCommandEvent::SendWaiter::status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    SenderStatus status();$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:()
SendCommandEvent::_cmd	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  ControlCommand _cmd;  \/**< Command to send to Tor. *\/$/;"	m	class:SendCommandEvent	access:private
SendCommandEvent::_waiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendWaiter* _waiter; \/**< SendWaiter for the result of this event. *\/$/;"	m	class:SendCommandEvent	access:private
SendCommandEvent::command	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  ControlCommand command() { return _cmd; }$/;"	f	class:SendCommandEvent	access:public	signature:()
SendCommandEvent::waiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendWaiter* waiter() { return _waiter; }$/;"	f	class:SendCommandEvent	access:public	signature:()
SendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    SendWaiter() { _status = Waiting; }$/;"	f	class:SendCommandEvent::SendWaiter	access:public	signature:()
SendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  class SendWaiter {$/;"	c	class:SendCommandEvent	access:public
SenderStatus	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	g	class:SendCommandEvent::SendWaiter	access:public
SentConnect	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    SentConnect,  \/**< Sent a connect cell *\/$/;"	e	enum:Stream::Status
SentResolve	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    SentResolve,  \/**< Sent a resolve cell *\/$/;"	e	enum:Stream::Status
Server	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Server,       \/** Server configuration page. *\/$/;"	e	enum:ConfigDialog::Page
ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::ServerPage(QWidget *parent)$/;"	f	class:ServerPage	signature:(QWidget *parent)
ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ServerPage(QWidget *parent = 0);$/;"	p	class:ServerPage	access:public	signature:(QWidget *parent = 0)
ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^class ServerPage : public ConfigPage$/;"	c	inherits:ConfigPage
ServerPage::BwRateIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  enum BwRateIndex {$/;"	g	class:ServerPage	access:private
ServerPage::CableDsl256	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl256 = 0, \/**< Cable\/DSL 256 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::CableDsl512	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl512,     \/**< Cable\/DSL 512 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::CableDsl768	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CableDsl768,     \/**< Cable\/DSL 768 Kbps *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::CustomBwLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    CustomBwLimits   \/**< Custom bandwidth limits *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::GreaterThan1500	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    GreaterThan1500, \/**< > 1.5 Mbps *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::ServerPage(QWidget *parent)$/;"	f	class:ServerPage	signature:(QWidget *parent)
ServerPage::ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ServerPage(QWidget *parent = 0);$/;"	p	class:ServerPage	access:public	signature:(QWidget *parent = 0)
ServerPage::T1CableDsl1500	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    T1CableDsl1500,  \/**< T1\/Cable\/DSL 1.5 Mbps *\/$/;"	e	enum:ServerPage::BwRateIndex
ServerPage::_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ServerSettings*  _settings;$/;"	m	class:ServerPage	access:private
ServerPage::_tmpDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  QString _tmpDirPort;$/;"	m	class:ServerPage	access:private
ServerPage::_tmpMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool _tmpMirror;$/;"	m	class:ServerPage	access:private
ServerPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::apply(QString &errmsg)$/;"	f	class:ServerPage	signature:(QString &errmsg)
ServerPage::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:ServerPage	access:public	signature:(QString &errmsg)
ServerPage::bandwidthHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::bandwidthHelp()$/;"	f	class:ServerPage	signature:()
ServerPage::bandwidthHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void bandwidthHelp();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::changedSinceLastApply()$/;"	f	class:ServerPage	signature:()
ServerPage::changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool changedSinceLastApply();$/;"	p	class:ServerPage	access:public	signature:()
ServerPage::copyBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::copyBridgeIdentity()$/;"	f	class:ServerPage	signature:()
ServerPage::copyBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void copyBridgeIdentity();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::customRateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::customRateChanged()$/;"	f	class:ServerPage	signature:()
ServerPage::customRateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void customRateChanged();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::displayBridgeUsage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::displayBridgeUsage()$/;"	f	class:ServerPage	signature:()
ServerPage::displayBridgeUsage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void displayBridgeUsage();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::exitPolicyHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::exitPolicyHelp()$/;"	f	class:ServerPage	signature:()
ServerPage::exitPolicyHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void exitPolicyHelp();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::linkActivated(const QString &url)$/;"	f	class:ServerPage	signature:(const QString &url)
ServerPage::linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void linkActivated(const QString &url);$/;"	p	class:ServerPage	access:private	signature:(const QString &url)
ServerPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::load()$/;"	f	class:ServerPage	signature:()
ServerPage::load	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void load();$/;"	p	class:ServerPage	access:public	signature:()
ServerPage::loadBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadBandwidthLimits()$/;"	f	class:ServerPage	signature:()
ServerPage::loadBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadBandwidthLimits();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::loadBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadBridgeIdentity()$/;"	f	class:ServerPage	signature:()
ServerPage::loadBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadBridgeIdentity();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::loadExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadExitPolicies()$/;"	f	class:ServerPage	signature:()
ServerPage::loadExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadExitPolicies();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::onAuthenticated()$/;"	f	class:ServerPage	signature:()
ServerPage::onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void onAuthenticated();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::onDisconnected()$/;"	f	class:ServerPage	signature:()
ServerPage::onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void onDisconnected();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::rateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::rateChanged(int index)$/;"	f	class:ServerPage	signature:(int index)
ServerPage::rateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void rateChanged(int rate);$/;"	p	class:ServerPage	access:private	signature:(int rate)
ServerPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::retranslateUi()$/;"	f	class:ServerPage	signature:()
ServerPage::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  virtual void retranslateUi();$/;"	p	class:ServerPage	access:public	signature:()
ServerPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::revert()$/;"	f	class:ServerPage	signature:()
ServerPage::revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void revert();$/;"	p	class:ServerPage	access:public	signature:()
ServerPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::save(QString &errmsg)$/;"	f	class:ServerPage	signature:(QString &errmsg)
ServerPage::save	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool save(QString &errmsg);$/;"	p	class:ServerPage	access:public	signature:(QString &errmsg)
ServerPage::saveBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::saveBandwidthLimits()$/;"	f	class:ServerPage	signature:()
ServerPage::saveBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void saveBandwidthLimits();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::saveExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::saveExitPolicies()$/;"	f	class:ServerPage	signature:()
ServerPage::saveExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void saveExitPolicies();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::selectedIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  int selectedIndex();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::serverModeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::serverModeChanged(bool enabled)$/;"	f	class:ServerPage	signature:(bool enabled)
ServerPage::serverModeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void serverModeChanged(bool enabled);$/;"	p	class:ServerPage	access:private	signature:(bool enabled)
ServerPage::testUpnp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::testUpnp()$/;"	f	class:ServerPage	signature:()
ServerPage::testUpnp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void testUpnp();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::toggleAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::toggleAccounting(int state)$/;"	f	class:ServerPage	signature:(int state)
ServerPage::toggleAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void toggleAccounting(int state);$/;"	p	class:ServerPage	access:private	signature:(int state)
ServerPage::toggleDisplayDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::toggleDisplayDay(const QString &str)$/;"	f	class:ServerPage	signature:(const QString &str)
ServerPage::toggleDisplayDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void toggleDisplayDay(const QString &str);$/;"	p	class:ServerPage	access:private	signature:(const QString &str)
ServerPage::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  Ui::ServerPage ui;$/;"	m	class:ServerPage	access:private
ServerPage::upnpHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::upnpHelp()$/;"	f	class:ServerPage	signature:()
ServerPage::upnpHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void upnpHelp();$/;"	p	class:ServerPage	access:private	signature:()
ServerPage::~ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::~ServerPage()$/;"	f	class:ServerPage	signature:()
ServerPage::~ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ~ServerPage();$/;"	p	class:ServerPage	access:public	signature:()
ServerSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::ServerSettings(TorControl *torControl)$/;"	f	class:ServerSettings	signature:(TorControl *torControl)
ServerSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  ServerSettings(TorControl *torControl);$/;"	p	class:ServerSettings	access:public	signature:(TorControl *torControl)
ServerSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^class ServerSettings : public AbstractTorSettings$/;"	c	inherits:AbstractTorSettings
ServerSettings::ServerSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::ServerSettings(TorControl *torControl)$/;"	f	class:ServerSettings	signature:(TorControl *torControl)
ServerSettings::ServerSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  ServerSettings(TorControl *torControl);$/;"	p	class:ServerSettings	access:public	signature:(TorControl *torControl)
ServerSettings::accountingMaxAmount	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingMaxAmount()$/;"	f	class:ServerSettings	signature:()
ServerSettings::accountingMaxAmount	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  int accountingMaxAmount();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::accountingMaxUnit	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingMaxUnit()$/;"	f	class:ServerSettings	signature:()
ServerSettings::accountingMaxUnit	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingMaxUnit();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::accountingStartDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartDay()$/;"	f	class:ServerSettings	signature:()
ServerSettings::accountingStartDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  int accountingStartDay();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::accountingStartDwm	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartDwm()$/;"	f	class:ServerSettings	signature:()
ServerSettings::accountingStartDwm	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingStartDwm();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::accountingStartTime	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartTime()$/;"	f	class:ServerSettings	signature:()
ServerSettings::accountingStartTime	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingStartTime();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::apply(QString *errmsg)$/;"	f	class:ServerSettings	signature:(QString *errmsg)
ServerSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:ServerSettings	access:public	signature:(QString *errmsg = 0)
ServerSettings::cleanupPortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::cleanupPortForwarding()$/;"	f	class:ServerSettings	signature:()
ServerSettings::cleanupPortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void cleanupPortForwarding();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::configurePortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::configurePortForwarding()$/;"	f	class:ServerSettings	signature:()
ServerSettings::configurePortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void configurePortForwarding();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::disableAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::disableAccounting()$/;"	f	class:ServerSettings	signature:()
ServerSettings::disableAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void disableAccounting();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getBandwidthAvgRate()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint32 getBandwidthAvgRate();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getBandwidthBurstRate()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint32 getBandwidthBurstRate();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getContactInfo()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  QString getContactInfo();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getDirPort()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint16 getDirPort();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getExitPolicy()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  ExitPolicy getExitPolicy();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getNickname()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  QString getNickname();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::getORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getORPort()$/;"	f	class:ServerSettings	signature:()
ServerSettings::getORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint16 getORPort();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isAccountingEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isAccountingEnabled()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isAccountingEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isAccountingEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isBridgeEnabled()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isBridgeEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isDirectoryMirror()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isDirectoryMirror();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isNonExitEnabled()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isNonExitEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isServerEnabled()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isServerEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::isUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isUpnpEnabled()$/;"	f	class:ServerSettings	signature:()
ServerSettings::isUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isUpnpEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::publishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::publishServerDescriptor()$/;"	f	class:ServerSettings	signature:()
ServerSettings::publishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool publishServerDescriptor();$/;"	p	class:ServerSettings	access:public	signature:()
ServerSettings::setAccountingMax	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setAccountingMax(int amount, const QString &unit)$/;"	f	class:ServerSettings	signature:(int amount, const QString &unit)
ServerSettings::setAccountingMax	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setAccountingMax(int amount, const QString &unit);$/;"	p	class:ServerSettings	access:public	signature:(int amount, const QString &unit)
ServerSettings::setAccountingStart	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setAccountingStart(const QString &dwm,$/;"	f	class:ServerSettings	signature:(const QString &dwm, int day, const QString &time)
ServerSettings::setAccountingStart	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setAccountingStart(const QString &dwm, int day, const QString &time);$/;"	p	class:ServerSettings	access:public	signature:(const QString &dwm, int day, const QString &time)
ServerSettings::setBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBandwidthAvgRate(quint32 rate)$/;"	f	class:ServerSettings	signature:(quint32 rate)
ServerSettings::setBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBandwidthAvgRate(quint32 rate);$/;"	p	class:ServerSettings	access:public	signature:(quint32 rate)
ServerSettings::setBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBandwidthBurstRate(quint32 rate)$/;"	f	class:ServerSettings	signature:(quint32 rate)
ServerSettings::setBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBandwidthBurstRate(quint32 rate);$/;"	p	class:ServerSettings	access:public	signature:(quint32 rate)
ServerSettings::setBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBridgeEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
ServerSettings::setBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBridgeEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
ServerSettings::setContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setContactInfo(QString contact)$/;"	f	class:ServerSettings	signature:(QString contact)
ServerSettings::setContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setContactInfo(QString info);$/;"	p	class:ServerSettings	access:public	signature:(QString info)
ServerSettings::setDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setDirPort(quint16 dirPort)$/;"	f	class:ServerSettings	signature:(quint16 dirPort)
ServerSettings::setDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setDirPort(quint16 dirPort);$/;"	p	class:ServerSettings	access:public	signature:(quint16 dirPort)
ServerSettings::setDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setDirectoryMirror(bool mirror)$/;"	f	class:ServerSettings	signature:(bool mirror)
ServerSettings::setDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setDirectoryMirror(bool mirror);$/;"	p	class:ServerSettings	access:public	signature:(bool mirror)
ServerSettings::setExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setExitPolicy(ExitPolicy &exitPolicy)$/;"	f	class:ServerSettings	signature:(ExitPolicy &exitPolicy)
ServerSettings::setExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setExitPolicy(ExitPolicy &policy);$/;"	p	class:ServerSettings	access:public	signature:(ExitPolicy &policy)
ServerSettings::setNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setNickname(QString nickname)$/;"	f	class:ServerSettings	signature:(QString nickname)
ServerSettings::setNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setNickname(QString nickname);$/;"	p	class:ServerSettings	access:public	signature:(QString nickname)
ServerSettings::setNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setNonExitEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
ServerSettings::setNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setNonExitEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
ServerSettings::setORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setORPort(quint16 orPort)$/;"	f	class:ServerSettings	signature:(quint16 orPort)
ServerSettings::setORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setORPort(quint16 orPort);$/;"	p	class:ServerSettings	access:public	signature:(quint16 orPort)
ServerSettings::setPublishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setPublishServerDescriptor(bool publish)$/;"	f	class:ServerSettings	signature:(bool publish)
ServerSettings::setPublishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setPublishServerDescriptor(bool publish);$/;"	p	class:ServerSettings	access:public	signature:(bool publish)
ServerSettings::setServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setServerEnabled(bool enable)$/;"	f	class:ServerSettings	signature:(bool enable)
ServerSettings::setServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setServerEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
ServerSettings::setUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setUpnpEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
ServerSettings::setUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setUpnpEnabled(bool enabled);$/;"	p	class:ServerSettings	access:public	signature:(bool enabled)
ServerSettings::torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::torValue(const QString &key) const$/;"	f	class:ServerSettings	signature:(const QString &key) const
ServerSettings::torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  virtual QVariant torValue(const QString &key) const;$/;"	p	class:ServerSettings	access:protected	signature:(const QString &key) const
ServerStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    ServerStatus  = (1u << 13),$/;"	e	enum:TorEvents::Event
Service	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^    Service,      \/** Service Configuration page *\/$/;"	e	enum:ConfigDialog::Page
ServiceFunctions	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^struct ServiceFunctions {$/;"	s
ServiceFunctions::ChangeServiceConfig2A	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ChangeServiceConfig2A_fn ChangeServiceConfig2A;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::CloseServiceHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  CloseServiceHandle_fn    CloseServiceHandle;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::ControlService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ControlService_fn        ControlService;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::CreateServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  CreateServiceA_fn        CreateServiceA;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::DeleteService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  DeleteService_fn         DeleteService;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::OpenSCManagerA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  OpenSCManagerA_fn        OpenSCManagerA;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::OpenServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  OpenServiceA_fn          OpenServiceA;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::QueryServiceStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  QueryServiceStatus_fn    QueryServiceStatus;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::SetServiceStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SetServiceStatus_fn      SetServiceStatus;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::StartServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  StartServiceA_fn         StartServiceA;$/;"	m	struct:ServiceFunctions	access:public
ServiceFunctions::loaded	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool loaded;$/;"	m	struct:ServiceFunctions	access:public
SetServiceStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SetServiceStatus_fn      SetServiceStatus;$/;"	m	struct:ServiceFunctions	access:public
SetServiceStatus_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *SetServiceStatus_fn)(SERVICE_STATUS_HANDLE,$/;"	t
Severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  enum Severity {$/;"	g	class:LogEvent	access:public
Severity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum Severity {$/;"	g	namespace:tc
ShowLog	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    ShowLog,$/;"	e	enum:VMessageBox::Button
ShowSettings	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    ShowSettings,$/;"	e	enum:VMessageBox::Button
Shutdown	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Shutdown, \/**< SIGINT: Controlled shutdown *\/$/;"	e	enum:TorSignal::Signal
Sie	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/running.html	/^benachrichtigt Sie, falls Tor unerwartet beendet wurde.$/;"	v
Signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^  enum Signal {$/;"	g	class:TorSignal	access:public
Socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    enum Method { Port, Socket };$/;"	e	enum:ControlMethod::Method
SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  SocketWrapper(ControlMethod::Method method)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(ControlMethod::Method method)
SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^class ControlSocket::SocketWrapper{$/;"	c	class:ControlSocket	file:
Socks4Proxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    Socks4Proxy = 0, \/**< Use a SOCKS 4 proxy for OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
Socks5Proxy	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^    Socks5Proxy = 1, \/**< Use a SOCKS 5 proxy for OR connections. *\/$/;"	e	enum:NetworkSettings::ProxyType
SocksError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum SocksError {$/;"	g	namespace:tc
SolidLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^    SolidLine = 0,  \/**< Plot bandwidth as solid lines. *\/$/;"	e	enum:GraphFrame::GraphStyle
SpecialExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  enum SpecialExitPolicy {$/;"	g	class:ExitPolicy	access:public
SpecialPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  enum SpecialPolicy {$/;"	g	class:Policy	access:public
SpliceData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^} SpliceData;$/;"	t	typeref:struct:s_SpliceData	file:
Stable	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Stable       = 0x0100,$/;"	e	enum:RouterStatus::Flag
StartServiceA	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  StartServiceA_fn         StartServiceA;$/;"	m	struct:ServiceFunctions	access:public
StartServiceA_fn	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^typedef BOOL (WINAPI *StartServiceA_fn)($/;"	t
Started	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Started,    \/**< Tor is currently running. *\/$/;"	e	enum:MainWindow::TorStatus
Starting	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Starting,   \/**< Tor is in the process of starting. *\/$/;"	e	enum:MainWindow::TorStatus
Status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  enum Status {$/;"	g	class:BootstrapStatus	access:public
Status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  enum Status {$/;"	g	class:Circuit	access:public
Status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  enum Status {$/;"	g	class:ControlConnection	access:public
Status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  enum Status {$/;"	g	class:Stream	access:public
Status	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  enum Status {$/;"	g	class:UpdateProgressDialog	access:public
StatusColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^    StatusColumn = 1      \/**< Status of the connection. *\/$/;"	e	enum:CircuitListWidget::Columns
StatusColumn	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^    StatusColumn  = 0,  \/**< Status column, indicating bandwidth. *\/$/;"	e	enum:RouterListWidget::Columns
StatusEventItem	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::StatusEventItem(QTreeWidget *parent)$/;"	f	class:StatusEventItem	signature:(QTreeWidget *parent)
StatusEventItem	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  StatusEventItem(QTreeWidget *parent = 0);$/;"	p	class:StatusEventItem	access:public	signature:(QTreeWidget *parent = 0)
StatusEventItem	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^class StatusEventItem : public QTreeWidgetItem$/;"	c	inherits:QTreeWidgetItem
StatusEventItem::DataRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  enum DataRole {$/;"	g	class:StatusEventItem	access:public
StatusEventItem::DescriptionRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    DescriptionRole,$/;"	e	enum:StatusEventItem::DataRole
StatusEventItem::HelpUrlRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    HelpUrlRole,$/;"	e	enum:StatusEventItem::DataRole
StatusEventItem::IconRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    IconRole = Qt::UserRole,$/;"	e	enum:StatusEventItem::DataRole
StatusEventItem::StatusEventItem	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::StatusEventItem(QTreeWidget *parent)$/;"	f	class:StatusEventItem	signature:(QTreeWidget *parent)
StatusEventItem::StatusEventItem	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  StatusEventItem(QTreeWidget *parent = 0);$/;"	p	class:StatusEventItem	access:public	signature:(QTreeWidget *parent = 0)
StatusEventItem::TimestampRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    TimestampRole,$/;"	e	enum:StatusEventItem::DataRole
StatusEventItem::TitleRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    TitleRole,$/;"	e	enum:StatusEventItem::DataRole
StatusEventItem::description	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::description() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::description	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString description() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItem::helpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::helpUrl() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::helpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString helpUrl() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItem::icon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::icon() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::icon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QPixmap icon() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:StatusEventItem	signature:(const QTreeWidgetItem &other) const
StatusEventItem::operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:StatusEventItem	access:public	signature:(const QTreeWidgetItem &other) const
StatusEventItem::setDescription	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setDescription(const QString &description)$/;"	f	class:StatusEventItem	signature:(const QString &description)
StatusEventItem::setDescription	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setDescription(const QString &description);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &description)
StatusEventItem::setHelpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setHelpUrl(const QString &url)$/;"	f	class:StatusEventItem	signature:(const QString &url)
StatusEventItem::setHelpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setHelpUrl(const QString &url);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &url)
StatusEventItem::setIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setIcon(const QPixmap &pixmap)$/;"	f	class:StatusEventItem	signature:(const QPixmap &pixmap)
StatusEventItem::setIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setIcon(const QPixmap &pixmap);$/;"	p	class:StatusEventItem	access:public	signature:(const QPixmap &pixmap)
StatusEventItem::setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setTimestamp(const QDateTime &timestamp)$/;"	f	class:StatusEventItem	signature:(const QDateTime &timestamp)
StatusEventItem::setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setTimestamp(const QDateTime &timestamp);$/;"	p	class:StatusEventItem	access:public	signature:(const QDateTime &timestamp)
StatusEventItem::setTitle	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setTitle(const QString &title)$/;"	f	class:StatusEventItem	signature:(const QString &title)
StatusEventItem::setTitle	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setTitle(const QString &title);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &title)
StatusEventItem::setToolTip	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setToolTip(const QString &toolTip)$/;"	f	class:StatusEventItem	signature:(const QString &toolTip)
StatusEventItem::setToolTip	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setToolTip(const QString &toolTip);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &toolTip)
StatusEventItem::timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::timestamp() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QDateTime timestamp() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItem::title	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::title() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::title	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString title() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItem::toString	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::toString() const$/;"	f	class:StatusEventItem	signature:() const
StatusEventItem::toString	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString toString() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
StatusEventItemDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::StatusEventItemDelegate(QObject *parent)$/;"	f	class:StatusEventItemDelegate	signature:(QObject *parent)
StatusEventItemDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  StatusEventItemDelegate(QObject *parent = 0);$/;"	p	class:StatusEventItemDelegate	access:public	signature:(QObject *parent = 0)
StatusEventItemDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^class StatusEventItemDelegate : public QItemDelegate$/;"	c	inherits:QItemDelegate
StatusEventItemDelegate::StatusEventItemDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::StatusEventItemDelegate(QObject *parent)$/;"	f	class:StatusEventItemDelegate	signature:(QObject *parent)
StatusEventItemDelegate::StatusEventItemDelegate	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  StatusEventItemDelegate(QObject *parent = 0);$/;"	p	class:StatusEventItemDelegate	access:public	signature:(QObject *parent = 0)
StatusEventItemDelegate::_helpIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  QPixmap _helpIcon;$/;"	m	class:StatusEventItemDelegate	access:private
StatusEventItemDelegate::layoutText	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::layoutText(const QString &text,$/;"	f	class:StatusEventItemDelegate	signature:(const QString &text, const QFont &font, int maxLineWidth, int maxLines, int *textHeight)
StatusEventItemDelegate::layoutText	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  static QStringList layoutText(const QString &text,$/;"	p	class:StatusEventItemDelegate	access:protected	signature:(const QString &text, const QFont &fontMetrics, int maxLineWidth, int maxLines = -1, int *textHeight = 0)
StatusEventItemDelegate::paint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::paint(QPainter *painter,$/;"	f	class:StatusEventItemDelegate	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
StatusEventItemDelegate::paint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  virtual void paint(QPainter *painter,$/;"	p	class:StatusEventItemDelegate	access:public	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
StatusEventItemDelegate::sizeHint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::sizeHint(const QStyleOptionViewItem &option,$/;"	f	class:StatusEventItemDelegate	signature:(const QStyleOptionViewItem &option, const QModelIndex &index) const
StatusEventItemDelegate::sizeHint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  virtual QSize sizeHint(const QStyleOptionViewItem &option,$/;"	p	class:StatusEventItemDelegate	access:public	signature:(const QStyleOptionViewItem &option, const QModelIndex &index) const
StatusEventWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::StatusEventWidget(QWidget *parent)$/;"	f	class:StatusEventWidget	signature:(QWidget *parent)
StatusEventWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  StatusEventWidget(QWidget *parent = 0);$/;"	p	class:StatusEventWidget	access:public	signature:(QWidget *parent = 0)
StatusEventWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^class StatusEventWidget : public QTreeWidget$/;"	c	inherits:QTreeWidget
StatusEventWidget::StatusEventWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::StatusEventWidget(QWidget *parent)$/;"	f	class:StatusEventWidget	signature:(QWidget *parent)
StatusEventWidget::StatusEventWidget	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  StatusEventWidget(QWidget *parent = 0);$/;"	p	class:StatusEventWidget	access:public	signature:(QWidget *parent = 0)
StatusEventWidget::_maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  int _maximumItemCount;$/;"	m	class:StatusEventWidget	access:private
StatusEventWidget::_squelchDescriptorAcceptedEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  bool _squelchDescriptorAcceptedEvent;$/;"	m	class:StatusEventWidget	access:private
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QPixmap &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &pixmap, const QPixmap &badge)
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QPixmap &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &pixmap, const QString &badge)
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QString &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QString &pixmap, const QString &badge)
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QPixmap &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &pixmap, const QPixmap &badge)
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QPixmap &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &pixmap, const QString &badge)
StatusEventWidget::addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QString &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QString &pixmap, const QString &badge)
StatusEventWidget::addNotification	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addNotification(const QPixmap &icon,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &icon, const QString &title, const QString &description, const QString &helpUrl)
StatusEventWidget::addNotification	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void addNotification(const QPixmap &icon,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &icon, const QString &title, const QString &description, const QString &helpUrl = QString())
StatusEventWidget::allEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::allEvents() const$/;"	f	class:StatusEventWidget	signature:() const
StatusEventWidget::allEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QStringList allEvents() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
StatusEventWidget::authenticated	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::authenticated()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::authenticated	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void authenticated();$/;"	p	class:StatusEventWidget	access:private	signature:()
StatusEventWidget::bug	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::bug(const QString &description)$/;"	f	class:StatusEventWidget	signature:(const QString &description)
StatusEventWidget::bug	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void bug(const QString &reason);$/;"	p	class:StatusEventWidget	access:private	signature:(const QString &reason)
StatusEventWidget::checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::checkingDirPortReachability(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::checkingOrPortReachability(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::circuitEstablished()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void circuitEstablished();$/;"	p	class:StatusEventWidget	access:private	signature:()
StatusEventWidget::clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::clockSkewed(int skew, const QString &source)$/;"	f	class:StatusEventWidget	signature:(int skew, const QString &source)
StatusEventWidget::clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:StatusEventWidget	access:private	signature:(int skew, const QString &source)
StatusEventWidget::customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::customContextMenuRequested(const QPoint &pos)$/;"	f	class:StatusEventWidget	signature:(const QPoint &pos)
StatusEventWidget::customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void customContextMenuRequested(const QPoint &pos);$/;"	p	class:StatusEventWidget	access:private	signature:(const QPoint &pos)
StatusEventWidget::dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dangerousPort(quint16 port, bool rejected)$/;"	f	class:StatusEventWidget	signature:(quint16 port, bool rejected)
StatusEventWidget::dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:StatusEventWidget	access:private	signature:(quint16 port, bool rejected)
StatusEventWidget::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dangerousTorVersion(tc::TorVersionStatus reason,$/;"	f	class:StatusEventWidget	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
StatusEventWidget::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:StatusEventWidget	access:private	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
StatusEventWidget::dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dirPortReachabilityFinished(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, bool reachable)
StatusEventWidget::dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, bool reachable)
StatusEventWidget::disconnected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::disconnected()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::disconnected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void disconnected();$/;"	p	class:StatusEventWidget	access:private	signature:()
StatusEventWidget::dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dnsHijacked()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dnsHijacked();$/;"	p	class:StatusEventWidget	access:private	signature:()
StatusEventWidget::dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dnsUseless()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dnsUseless();$/;"	p	class:StatusEventWidget	access:private	signature:()
StatusEventWidget::externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::externalAddressChanged(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, const QString &hostname)
StatusEventWidget::externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, const QString &hostname)
StatusEventWidget::find	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::find(const QString &text, bool highlight)$/;"	f	class:StatusEventWidget	signature:(const QString &text, bool highlight)
StatusEventWidget::find	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QList<StatusEventItem *> find(const QString &text, bool highlight = true);$/;"	p	class:StatusEventWidget	access:public	signature:(const QString &text, bool highlight = true)
StatusEventWidget::maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::maximumItemCount() const$/;"	f	class:StatusEventWidget	signature:() const
StatusEventWidget::maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  int maximumItemCount() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
StatusEventWidget::orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::orPortReachabilityFinished(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, bool reachable)
StatusEventWidget::orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, bool reachable)
StatusEventWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::retranslateUi()$/;"	f	class:StatusEventWidget	signature:()
StatusEventWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  virtual void retranslateUi();$/;"	p	class:StatusEventWidget	access:protected	signature:()
StatusEventWidget::selectedEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::selectedEvents() const$/;"	f	class:StatusEventWidget	signature:() const
StatusEventWidget::selectedEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QStringList selectedEvents() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
StatusEventWidget::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::serverDescriptorAccepted(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
StatusEventWidget::serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::serverDescriptorRejected(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
StatusEventWidget::serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
StatusEventWidget::setMaximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::setMaximumItemCount(int maximumItemCount)$/;"	f	class:StatusEventWidget	signature:(int maximumItemCount)
StatusEventWidget::setMaximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void setMaximumItemCount(int maximumItemCount);$/;"	p	class:StatusEventWidget	access:public	signature:(int maximumItemCount)
StatusEventWidget::socksError	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::socksError(tc::SocksError type, const QString &destination)$/;"	f	class:StatusEventWidget	signature:(tc::SocksError type, const QString &destination)
StatusEventWidget::socksError	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:StatusEventWidget	access:private	signature:(tc::SocksError type, const QString &destination)
StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::StatusTab(QWidget *parent)$/;"	f	class:StatusTab	signature:(QWidget *parent)
StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  StatusTab(QWidget *parent = 0);$/;"	p	class:StatusTab	access:public	signature:(QWidget *parent = 0)
StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^class StatusTab : public VidaliaTab$/;"	c	inherits:VidaliaTab
StatusTab::StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::StatusTab(QWidget *parent)$/;"	f	class:StatusTab	signature:(QWidget *parent)
StatusTab::StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  StatusTab(QWidget *parent = 0);$/;"	p	class:StatusTab	access:public	signature:(QWidget *parent = 0)
StatusTab::checkShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::checkShowOnStartup(bool check)$/;"	f	class:StatusTab	signature:(bool check)
StatusTab::checkShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void checkShowOnStartup(bool check);$/;"	p	class:StatusTab	access:public	signature:(bool check)
StatusTab::hideCheckShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::hideCheckShowOnStartup()$/;"	f	class:StatusTab	signature:()
StatusTab::hideCheckShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void hideCheckShowOnStartup();$/;"	p	class:StatusTab	access:public	signature:()
StatusTab::isCheckedShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::isCheckedShowOnStartup()$/;"	f	class:StatusTab	signature:()
StatusTab::isCheckedShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  bool isCheckedShowOnStartup();$/;"	p	class:StatusTab	access:public	signature:()
StatusTab::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::retranslateUi()$/;"	f	class:StatusTab	signature:()
StatusTab::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void retranslateUi();$/;"	p	class:StatusTab	access:protected	signature:()
StatusTab::setProgress	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setProgress(int progress, const QString &description)$/;"	f	class:StatusTab	signature:(int progress, const QString &description)
StatusTab::setProgress	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setProgress(int progress, const QString &description);$/;"	p	class:StatusTab	access:public	signature:(int progress, const QString &description)
StatusTab::setProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setProgressVisible(bool visible)$/;"	f	class:StatusTab	signature:(bool visible)
StatusTab::setProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setProgressVisible(bool visible);$/;"	p	class:StatusTab	access:public	signature:(bool visible)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QPixmap &icon)$/;"	f	class:StatusTab	signature:(const QPixmap &icon)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QPixmap &icon, const QString &text)$/;"	f	class:StatusTab	signature:(const QPixmap &icon, const QString &text)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QString &text)$/;"	f	class:StatusTab	signature:(const QString &text)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QPixmap &icon);$/;"	p	class:StatusTab	access:public	signature:(const QPixmap &icon)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QPixmap &icon, const QString &text);$/;"	p	class:StatusTab	access:public	signature:(const QPixmap &icon, const QString &text)
StatusTab::setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QString &text);$/;"	p	class:StatusTab	access:public	signature:(const QString &text)
StatusTab::setTorStatusVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatusVisible(bool visible)$/;"	f	class:StatusTab	signature:(bool visible)
StatusTab::setTorStatusVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatusVisible(bool visible);$/;"	p	class:StatusTab	access:public	signature:(bool visible)
StatusTab::toggleShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::toggleShowOnStartup(bool checked)$/;"	f	class:StatusTab	signature:(bool checked)
StatusTab::toggleShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void toggleShowOnStartup(bool checked);$/;"	p	class:StatusTab	access:private	signature:(bool checked)
StatusTab::ui	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  Ui::StatusTab ui;$/;"	m	class:StatusTab	access:private
StatusTab::~StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::~StatusTab()$/;"	f	class:StatusTab	signature:()
StatusTab::~StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  ~StatusTab();$/;"	p	class:StatusTab	access:public	signature:()
Stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Stopped,    \/**< Tor is not running. *\/$/;"	e	enum:MainWindow::TorStatus
Stopping	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Stopping,   \/**< Tor is in the process of shutting down. *\/$/;"	e	enum:MainWindow::TorStatus
Stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Stream(Log::LogLevel t, QIODevice *o)$/;"	f	struct:Log::LogMessage::Stream	access:public	signature:(Log::LogLevel t, QIODevice *o)
Stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  struct Stream {$/;"	s	class:Log::LogMessage	access:public
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream()$/;"	f	class:Stream	signature:()
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream(const StreamId &streamId, Status status,$/;"	f	class:Stream	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &address, quint16 port)
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream(const StreamId &streamId, Status status,$/;"	f	class:Stream	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &target)
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream();$/;"	p	class:Stream	access:public	signature:()
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream(const StreamId &streamId, Status status, const CircuitId &circuitId,$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &address, quint16 port)
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream(const StreamId &streamId, Status status, const CircuitId &circuitId,$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &target)
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^Q_DECLARE_METATYPE(Stream);$/;"	v
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^class Stream$/;"	c
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      Stream(QtMsgType t, const QString &fmt)$/;"	f	struct:tc::DebugMessage::Stream	access:public	signature:(QtMsgType t, const QString &fmt)
Stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    struct Stream {$/;"	s	class:tc::DebugMessage	access:private
Stream::Closed	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Closed,       \/**< Stream closed *\/$/;"	e	enum:Stream::Status
Stream::Detached	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Detached,     \/**< Detached from circuit *\/$/;"	e	enum:Stream::Status
Stream::Failed	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Failed,       \/**< Stream failed *\/$/;"	e	enum:Stream::Status
Stream::New	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    New,          \/**< New request to connect *\/$/;"	e	enum:Stream::Status
Stream::NewResolve	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    NewResolve,   \/**< New request to resolve an address *\/$/;"	e	enum:Stream::Status
Stream::Remap	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Remap         \/**< Address re-mapped to another *\/$/;"	e	enum:Stream::Status
Stream::SentConnect	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    SentConnect,  \/**< Sent a connect cell *\/$/;"	e	enum:Stream::Status
Stream::SentResolve	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    SentResolve,  \/**< Sent a resolve cell *\/$/;"	e	enum:Stream::Status
Stream::Status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  enum Status {$/;"	g	class:Stream	access:public
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream()$/;"	f	class:Stream	signature:()
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream(const StreamId &streamId, Status status,$/;"	f	class:Stream	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &address, quint16 port)
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::Stream(const StreamId &streamId, Status status,$/;"	f	class:Stream	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &target)
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream();$/;"	p	class:Stream	access:public	signature:()
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream(const StreamId &streamId, Status status, const CircuitId &circuitId,$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &address, quint16 port)
Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Stream(const StreamId &streamId, Status status, const CircuitId &circuitId,$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId, Status status, const CircuitId &circuitId, const QString &target)
Stream::Succeeded	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Succeeded,    \/**< Stream established *\/$/;"	e	enum:Stream::Status
Stream::Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Unknown,      \/**< Unknown status type given *\/$/;"	e	enum:Stream::Status
Stream::_address	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString _address;    \/**< Stream target address. *\/$/;"	m	class:Stream	access:private
Stream::_circuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  CircuitId _circuitId; \/**< ID of the circuit carrying this stream. *\/$/;"	m	class:Stream	access:private
Stream::_port	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  quint16 _port;       \/**< Stream target port. *\/$/;"	m	class:Stream	access:private
Stream::_status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Status  _status;     \/**< Stream status value. *\/$/;"	m	class:Stream	access:private
Stream::_streamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  StreamId _streamId;   \/**< Unique ID associated with this stream. *\/$/;"	m	class:Stream	access:private
Stream::circuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  CircuitId circuitId() const { return _circuitId; }$/;"	f	class:Stream	access:public	signature:() const
Stream::fromString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::fromString(const QString &stream)$/;"	f	class:Stream	signature:(const QString &stream)
Stream::fromString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  static Stream fromString(const QString &stream);$/;"	p	class:Stream	access:public	signature:(const QString &stream)
Stream::id	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  StreamId id() const { return _streamId; }$/;"	f	class:Stream	access:public	signature:() const
Stream::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::isValid() const$/;"	f	class:Stream	signature:() const
Stream::isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  bool isValid() const;$/;"	p	class:Stream	access:public	signature:() const
Stream::isValidStreamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::isValidStreamId(const StreamId &streamId)$/;"	f	class:Stream	signature:(const StreamId &streamId)
Stream::isValidStreamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^   static bool isValidStreamId(const StreamId &streamId);$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId)
Stream::status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Status status() const { return _status; }$/;"	f	class:Stream	access:public	signature:() const
Stream::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::statusString() const$/;"	f	class:Stream	signature:() const
Stream::statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString statusString() const;$/;"	p	class:Stream	access:public	signature:() const
Stream::target	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString target() const { return (_address + ":" + QString::number(_port)); }$/;"	f	class:Stream	access:public	signature:() const
Stream::targetAddress	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString targetAddress() const { return _address; }$/;"	f	class:Stream	access:public	signature:() const
Stream::targetPort	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  quint16 targetPort() const { return _port; }$/;"	f	class:Stream	access:public	signature:() const
Stream::toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::toStatus(const QString &strStatus)$/;"	f	class:Stream	signature:(const QString &strStatus)
Stream::toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  static Status toStatus(const QString &strStatus);$/;"	p	class:Stream	access:public	signature:(const QString &strStatus)
StreamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^typedef QString StreamId;$/;"	t
StreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.cpp	/^StreamItem::StreamItem(const Stream &stream)$/;"	f	class:StreamItem	signature:(const Stream &stream)
StreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  StreamItem(const Stream &stream);$/;"	p	class:StreamItem	access:public	signature:(const Stream &stream)
StreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^class StreamItem : public QTreeWidgetItem$/;"	c	inherits:QTreeWidgetItem
StreamItem::StreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.cpp	/^StreamItem::StreamItem(const Stream &stream)$/;"	f	class:StreamItem	signature:(const Stream &stream)
StreamItem::StreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  StreamItem(const Stream &stream);$/;"	p	class:StreamItem	access:public	signature:(const Stream &stream)
StreamItem::_stream	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  Stream _stream;$/;"	m	class:StreamItem	access:private
StreamItem::id	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  StreamId id() const { return _stream.id(); }$/;"	f	class:StreamItem	access:public	signature:() const
StreamItem::stream	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  Stream stream() const { return _stream; }$/;"	f	class:StreamItem	access:public	signature:() const
StreamItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.cpp	/^StreamItem::update(const Stream &stream)$/;"	f	class:StreamItem	signature:(const Stream &stream)
StreamItem::update	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  void update(const Stream &stream);$/;"	p	class:StreamItem	access:public	signature:(const Stream &stream)
StreamList	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^typedef QList<Stream> StreamList;$/;"	t
StreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    StreamStatus  = (1u << 7),$/;"	e	enum:TorEvents::Event
Street	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.$/;"	v
String	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    String,$/;"	e	enum:TorOpt::OptType
Succeeded	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Succeeded,    \/**< Stream established *\/$/;"	e	enum:Stream::Status
Success	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Success,  \/\/!< test finished with success$/;"	e	enum:BootstrapTestCase::TestResult
Success	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
Success	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
Success	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    Success,$/;"	e	enum:UPNPControl::UPNPError
T	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ua.png	/^/;"	v
T1CableDsl1500	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^    T1CableDsl1500,  \/**< T1\/Cable\/DSL 1.5 Mbps *\/$/;"	e	enum:ServerPage::BwRateIndex
T1_AVG_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define T1_AVG_RATE /;"	d	file:
T1_MAX_RATE	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^#define T1_MAX_RATE /;"	d	file:
TAILQ_EMPTY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_EMPTY(/;"	d
TAILQ_END	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_END(/;"	d
TAILQ_ENTRY	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_ENTRY(/;"	d
TAILQ_FIRST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_FIRST(/;"	d
TAILQ_FOREACH	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_FOREACH(/;"	d
TAILQ_FOREACH_REVERSE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_FOREACH_REVERSE(/;"	d
TAILQ_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_HEAD(/;"	d
TAILQ_HEAD_INITIALIZER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_HEAD_INITIALIZER(/;"	d
TAILQ_INIT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_INIT(/;"	d
TAILQ_INSERT_AFTER	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_INSERT_AFTER(/;"	d
TAILQ_INSERT_BEFORE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_INSERT_BEFORE(/;"	d
TAILQ_INSERT_HEAD	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_INSERT_HEAD(/;"	d
TAILQ_INSERT_TAIL	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_INSERT_TAIL(/;"	d
TAILQ_LAST	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_LAST(/;"	d
TAILQ_NEXT	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	TAILQ_NEXT(/;"	d
TAILQ_PREV	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_PREV(/;"	d
TAILQ_REMOVE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_REMOVE(/;"	d
TAILQ_REPLACE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define TAILQ_REPLACE(/;"	d
TIMESTAMP_FMT	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^#define TIMESTAMP_FMT /;"	d	file:
TIMEVAL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define TIMEVAL /;"	d	file:
TIME_FORMAT	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.cpp	/^#define TIME_FORMAT /;"	d	file:
TIME_TO_STRING	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^#   define TIME_TO_STRING(/;"	d	file:
TO	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED $/;"	v
TO	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY$/;"	v
TO	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR$/;"	v
TORRCPARSER_H	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^#define TORRCPARSER_H$/;"	d
TORRC_H	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^#define TORRC_H$/;"	d
TOR_ARG_CONTROLFILE	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_CONTROLFILE /;"	d	file:
TOR_ARG_CONTROL_PORT	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_CONTROL_PORT /;"	d	file:
TOR_ARG_COOKIE_AUTH	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_COOKIE_AUTH /;"	d	file:
TOR_ARG_DATA_DIRECTORY	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_DATA_DIRECTORY /;"	d	file:
TOR_ARG_HASHED_PASSWORD	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_HASHED_PASSWORD /;"	d	file:
TOR_ARG_SOCKSPORT	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_SOCKSPORT /;"	d	file:
TOR_ARG_TORRC	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^#define TOR_ARG_TORRC /;"	d	file:
TOR_SERVICE_ACCESS	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define TOR_SERVICE_ACCESS /;"	d
TOR_SERVICE_DESC	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define TOR_SERVICE_DESC /;"	d
TOR_SERVICE_DISP	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define TOR_SERVICE_DISP /;"	d
TOR_SERVICE_NAME	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define TOR_SERVICE_NAME /;"	d
TS2PO_CONTACT_ADDR	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po_config.h.in	/^#define TS2PO_CONTACT_ADDR /;"	d	file:
TS2PO_LANGUAGE_TEAM	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po_config.h.in	/^#define TS2PO_LANGUAGE_TEAM /;"	d	file:
TS2PO_PROJECT_ID	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po_config.h.in	/^#define TS2PO_PROJECT_ID /;"	d	file:
TS2PO_VERSION	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po_config.h.in	/^#define TS2PO_VERSION /;"	d	file:
TS_ATTR_FILENAME	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ATTR_FILENAME /;"	d	file:
TS_ATTR_LINE	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ATTR_LINE /;"	d	file:
TS_ATTR_TRANSLATION_TYPE	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ATTR_TRANSLATION_TYPE /;"	d	file:
TS_ATTR_VERSION	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ATTR_VERSION /;"	d	file:
TS_DOCTYPE	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_DOCTYPE /;"	d	file:
TS_DOCTYPE	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_DOCTYPE /;"	d	file:
TS_ELEMENT_CONTEXT	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_CONTEXT /;"	d	file:
TS_ELEMENT_CONTEXT	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_CONTEXT /;"	d	file:
TS_ELEMENT_LOCATION	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_LOCATION /;"	d	file:
TS_ELEMENT_MESSAGE	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_MESSAGE /;"	d	file:
TS_ELEMENT_MESSAGE	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_MESSAGE /;"	d	file:
TS_ELEMENT_NAME	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_NAME /;"	d	file:
TS_ELEMENT_NAME	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_NAME /;"	d	file:
TS_ELEMENT_ROOT	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_ROOT /;"	d	file:
TS_ELEMENT_SOURCE	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_SOURCE /;"	d	file:
TS_ELEMENT_SOURCE	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_SOURCE /;"	d	file:
TS_ELEMENT_TRANSLATION	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^#define TS_ELEMENT_TRANSLATION /;"	d	file:
TS_ELEMENT_TRANSLATION	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^#define TS_ELEMENT_TRANSLATION /;"	d	file:
Tapahtumat	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/log.html	/^    <b>Virhe<\/b>: Tapahtumat, jotka tapahtuvat kun jotain on pahasti mennyt pieleen eik√§ Tor-ohjelma pysty jatkamaan toimintaansa. N√§m√§ tapahtumat korostetaan <i>punaisella<\/i> tapahtumalokissa.$/;"	v
TestResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  enum TestResult{$/;"	g	class:BootstrapTestCase	access:public
Testing	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Testing,$/;"	e	enum:Circuit::Purpose
TimeColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    TimeColumn    = 0, \/**< Timestamp column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
TimeInterval	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    TimeInterval = 0,$/;"	e	enum:TorOpt::OptType
TimeMsecInterval	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    TimeMsecInterval,$/;"	e	enum:TorOpt::OptType
Timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^    Timeout   \/\/!< test case timedout$/;"	e	enum:BootstrapTestCase::TestResult
TimestampRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    TimestampRole,$/;"	e	enum:StatusEventItem::DataRole
TitleRole	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^    TitleRole,$/;"	e	enum:StatusEventItem::DataRole
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^When you want to communicate anonymously through Tor (say, connecting to a$/;"	p	file:	signature:(say, connecting to a website)
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/running.html	/^Tor, as well as monitoring Tor's status and letting you know if it exits$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/es/bridges.html	/^filtrando connexiones a todos los conocidos relevos de Tor, es muy probable$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/es/bridges.html	/^tengan aceso a la red Tor,  bloqueando connexiones con conocidos relevos de$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/running.html	/^Pour <i>d√©marrer<\/i> Tor,$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/troubleshooting.html	/^nouvelle identit√©, de configurer les param√®tres de Tor, etc... Chaque fois$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/bridges.html	/^mostkowego przepuszcza tylko dane z sieci Tor lub do sieci Tor, wiƒôc nie$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pt_BR/bridges.html	/^dados de e para a rede Tor, ent√£o n√£o deveria expor o operador a quaisquer$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pt_BR/bridges.html	/^esteja filtrando todas as conex√µes conhecidas de desvios do Tor, eles$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/bridges.html	/^–∏–∑ —Å–µ—Ç–∏ Tor,–ø–æ—ç—Ç–æ–º—É –Ω–µ —Å–ª–µ–¥—É–µ—Ç –∂–∞–ª–æ–≤–∞—Ç—å—Å—è –æ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/bridges.html	/^–∫ —Å–µ—Ç–∏ Tor, –±–ª–æ–∫–∏—Ä—É—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–∑–≤–µ—Å—Ç–Ω—ã–º —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä–∞–º$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/config.html	/^–±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ç—å—é Tor, Tor –º–æ–∂–µ—Ç –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –∏–∑–±–µ–∂–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/config.html	/^—Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Tor, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ —Ñ–ª–∞–∂–æ–∫ –Ω–∞ –æ–ø—Ü–∏–∏ <i>–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/config.html	/^—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Tor ,–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.–ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ Tor –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/netview.html	/^—ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Tor, —Ç–∞–∫ —á—Ç–æ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^Tor —Å–µ—Ç–∏ —á–µ—Ä–µ–∑ –≤–∞—à —Ä–µ—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä,–≤—ã –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≤—Å–µ —Ñ–ª–∞–∂–∫–∏.–î–∞–∂–µ –µ—Å–ª–∏ –≤—ã$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^—Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—â–∏–µ—Å—è –Ω–∞ –¥—Ä—É–≥–∏–µ —Ñ–ª–∞–∂–∫–∏ –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ Tor –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/troubleshooting.html	/^Tor,–≤–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞–∑–Ω–∞—á–∏—Ç—å –¥—Ä—É–≥–æ–π –ø–æ—Ä—Ç. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç—É –Ω–∞—Å—Ç—Ä–æ–π–∫—É$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^When you want to communicate anonymously through Tor (say, connecting to a$/;"	p	file:	signature:(say, connecting to a website)
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/running.html	/^Med Vidalia du kan kontrolla Tor; startar och stoppar det, √∂vervakar Tors st√§llning och vet om det har ov√§ntat avslutats.$/;"	v
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^When you want to communicate anonymously through Tor (say, connecting to a$/;"	p	file:	signature:(say, connecting to a website)
Tor	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/running.html	/^Â¶ÇÊûú Vidalia Êó†Ê≥ïÂÅúÊ≠¢ Tor,Vidalia ‰ºöÊòæÁ§∫‰∏Ä‰∏™ÈîôËØØ‰ø°ÊÅØÊù•ÂëäËØâÊÇ®Âì™ÈáåÂá∫‰∫ÜÈóÆÈ¢ò„ÄÇÊÇ®‰πüÂèØ‰ª•ÈÄöËøá<a$/;"	v
TorBundleInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    TorBundleInfo,$/;"	e	enum:UpdateProcess::BundleInfo
TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::TorControl(ControlMethod::Method method)$/;"	f	class:TorControl	signature:(ControlMethod::Method method)
TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorControl(ControlMethod::Method method = ControlMethod::Port);$/;"	p	class:TorControl	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^class TorControl : public QObject$/;"	c	inherits:QObject
TorControl::TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::TorControl(ControlMethod::Method method)$/;"	f	class:TorControl	signature:(ControlMethod::Method method)
TorControl::TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorControl(ControlMethod::Method method = ControlMethod::Port);$/;"	p	class:TorControl	access:public	signature:(ControlMethod::Method method = ControlMethod::Port)
TorControl::_authenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool _authenticated;$/;"	m	class:TorControl	access:private
TorControl::_controlConn	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ControlConnection* _controlConn;$/;"	m	class:TorControl	access:private
TorControl::_eventHandler	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorEvents* _eventHandler;$/;"	m	class:TorControl	access:private
TorControl::_events	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorEvents::Events _events;$/;"	m	class:TorControl	access:private
TorControl::_method	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ControlMethod::Method _method;$/;"	m	class:TorControl	access:private
TorControl::_reason	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString _reason;$/;"	m	class:TorControl	access:private
TorControl::_shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool _shouldContinue;$/;"	m	class:TorControl	access:private
TorControl::_torProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorProcess* _torProcess;$/;"	m	class:TorControl	access:private
TorControl::_torService	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorService* _torService;$/;"	m	class:TorControl	access:private
TorControl::_torVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString _torVersion;$/;"	m	class:TorControl	access:private
TorControl::addressMapped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorControl	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
TorControl::authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::authenticate(const QByteArray cookie, QString *errmsg)$/;"	f	class:TorControl	signature:(const QByteArray cookie, QString *errmsg)
TorControl::authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::authenticate(const QString &password, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &password, QString *errmsg)
TorControl::authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool authenticate(const QByteArray cookie, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QByteArray cookie, QString *errmsg = 0)
TorControl::authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool authenticate(const QString &password = QString(), QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &password = QString(), QString *errmsg = 0)
TorControl::authenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void authenticated();$/;"	p	class:TorControl	access:public	signature:()
TorControl::authenticationFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
TorControl::bandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorControl	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
TorControl::bootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::bootstrapStatus(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::bootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  BootstrapStatus bootstrapStatus(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorControl	access:public	signature:(const BootstrapStatus &status)
TorControl::bug	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bug(const QString &reason);$/;"	p	class:TorControl	access:public	signature:(const QString &reason)
TorControl::checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControl::checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControl::circuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void circuitEstablished();$/;"	p	class:TorControl	access:public	signature:()
TorControl::circuitStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorControl	access:public	signature:(const Circuit &circuit)
TorControl::clearErrState	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::clearErrState()$/;"	f	class:TorControl	signature:()
TorControl::clearErrState	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void clearErrState();$/;"	p	class:TorControl	access:public	signature:()
TorControl::clockSkewed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorControl	access:public	signature:(int skew, const QString &source)
TorControl::closeCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeCircuit(const CircuitId &circId, bool ifUnused, QString *errmsg)$/;"	f	class:TorControl	signature:(const CircuitId &circId, bool ifUnused, QString *errmsg)
TorControl::closeCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool closeCircuit(const CircuitId &circId, bool ifUnused = false,$/;"	p	class:TorControl	access:public	signature:(const CircuitId &circId, bool ifUnused = false, QString *errmsg = 0)
TorControl::closeStream	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeStream(const StreamId &streamId, QString *errmsg)$/;"	f	class:TorControl	signature:(const StreamId &streamId, QString *errmsg)
TorControl::closeStream	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool closeStream(const StreamId &streamId, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const StreamId &streamId, QString *errmsg = 0)
TorControl::closeTorStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeTorStdout()$/;"	f	class:TorControl	signature:()
TorControl::closeTorStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void closeTorStdout();$/;"	p	class:TorControl	access:public	signature:()
TorControl::connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::connect(const QHostAddress &address, quint16 port)$/;"	f	class:TorControl	signature:(const QHostAddress &address, quint16 port)
TorControl::connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::connect(const QString &path)$/;"	f	class:TorControl	signature:(const QString &path)
TorControl::connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connect(const QHostAddress &address, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &address, quint16 port)
TorControl::connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connect(const QString &path);$/;"	p	class:TorControl	access:public	signature:(const QString &path)
TorControl::connectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connectFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
TorControl::connected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connected();$/;"	p	class:TorControl	access:public	signature:()
TorControl::dangerousPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorControl	access:public	signature:(quint16 port, bool rejected)
TorControl::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorControl	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
TorControl::dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorControl::disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::disconnect()$/;"	f	class:TorControl	signature:()
TorControl::disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void disconnect();$/;"	p	class:TorControl	access:public	signature:()
TorControl::disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void disconnected();$/;"	p	class:TorControl	access:public	signature:()
TorControl::dnsHijacked	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dnsHijacked();$/;"	p	class:TorControl	access:public	signature:()
TorControl::dnsUseless	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dnsUseless();$/;"	p	class:TorControl	access:public	signature:()
TorControl::externalAddressChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, const QString &hostname)
TorControl::finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::finished(int *exitCode, QProcess::ExitStatus *exitStatus)$/;"	f	class:TorControl	signature:(int *exitCode, QProcess::ExitStatus *exitStatus)
TorControl::finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool finished(int *exitCode, QProcess::ExitStatus *exitStatus);$/;"	p	class:TorControl	access:public	signature:(int *exitCode, QProcess::ExitStatus *exitStatus)
TorControl::getAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getAddressMap(AddressMap::AddressMapType type, QString *errmsg)$/;"	f	class:TorControl	signature:(AddressMap::AddressMapType type, QString *errmsg)
TorControl::getAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  AddressMap getAddressMap($/;"	p	class:TorControl	access:public	signature:( AddressMap::AddressMapType type = AddressMap::AddressMapAll, QString *errmsg = 0)
TorControl::getBootstrapPhase	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getBootstrapPhase()$/;"	f	class:TorControl	signature:()
TorControl::getBootstrapPhase	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void getBootstrapPhase();$/;"	p	class:TorControl	access:private	signature:()
TorControl::getCircuits	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getCircuits(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getCircuits	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  CircuitList getCircuits(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QString> &map, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QHash<QString,QStringList> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QStringList> &map, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QString key, QString &value, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString &value, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QString key, QStringList &value, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QStringList &value, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControl	signature:(const QStringList &keys, QString *errmsg)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariant getConf(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariantMap getConf(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QHash<QString,QString> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> &map, QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QHash<QString,QStringList> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QStringList> &map, QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QString key, QString &value, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString &value, QString *errmsg = 0)
TorControl::getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QString key, QStringList &value, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QStringList &value, QString *errmsg = 0)
TorControl::getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getDescriptorAnnotations(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
TorControl::getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  DescriptorAnnotations getDescriptorAnnotations(const QString &id,$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControl::getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getHiddenServiceConf(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
TorControl::getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString getHiddenServiceConf(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QString> &map, QString *errmsg)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(QString key, QString &val, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString &val, QString *errmsg)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControl	signature:(const QStringList &keys, QString *errmsg)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariant getInfo(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariantMap getInfo(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getInfo(QHash<QString,QString> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> &map, QString *errmsg = 0)
TorControl::getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getInfo(QString key, QString &val, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString &val, QString *errmsg = 0)
TorControl::getNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getNetworkStatus(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  NetworkStatus getNetworkStatus(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getRouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterDescriptor(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
TorControl::getRouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  RouterDescriptor getRouterDescriptor(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControl::getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterDescriptorText(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
TorControl::getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QStringList getRouterDescriptorText(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControl::getRouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterStatus(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
TorControl::getRouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  RouterStatus getRouterStatus(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControl::getSocksAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksAddress(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getSocksAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QHostAddress getSocksAddress(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getSocksAddressList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksAddressList(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getSocksAddressList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QStringList getSocksAddressList(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getSocksPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksPort(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getSocksPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  quint16 getSocksPort(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getSocksPortList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksPortList(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getSocksPortList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QList<quint16> getSocksPortList(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getStreams	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getStreams(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::getStreams	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  StreamList getStreams(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::getTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getTorVersion()$/;"	f	class:TorControl	signature:()
TorControl::getTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  quint32 getTorVersion();$/;"	p	class:TorControl	access:public	signature:()
TorControl::getTorVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getTorVersionString()$/;"	f	class:TorControl	signature:()
TorControl::getTorVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString getTorVersionString();$/;"	p	class:TorControl	access:public	signature:()
TorControl::ipToCountry	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::ipToCountry(const QHostAddress &ip, QString *errmsg)$/;"	f	class:TorControl	signature:(const QHostAddress &ip, QString *errmsg)
TorControl::ipToCountry	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString ipToCountry(const QHostAddress &ip, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, QString *errmsg = 0)
TorControl::isAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isAuthenticated()$/;"	f	class:TorControl	signature:()
TorControl::isAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isAuthenticated();$/;"	p	class:TorControl	access:public	signature:()
TorControl::isCircuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isCircuitEstablished()$/;"	f	class:TorControl	signature:()
TorControl::isCircuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isCircuitEstablished();$/;"	p	class:TorControl	access:public	signature:()
TorControl::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isConnected()$/;"	f	class:TorControl	signature:()
TorControl::isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isConnected();$/;"	p	class:TorControl	access:public	signature:()
TorControl::isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isRunning()$/;"	f	class:TorControl	signature:()
TorControl::isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isRunning();$/;"	p	class:TorControl	access:public	signature:()
TorControl::isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isVidaliaRunningTor()$/;"	f	class:TorControl	signature:()
TorControl::isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isVidaliaRunningTor();$/;"	p	class:TorControl	access:public	signature:()
TorControl::kill	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::kill()$/;"	f	class:TorControl	signature:()
TorControl::kill	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void kill();$/;"	p	class:TorControl	access:public	signature:()
TorControl::loadConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::loadConf(const QString &contents, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &contents, QString *errmsg)
TorControl::loadConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool loadConf(const QString &contents, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &contents, QString *errmsg = 0)
TorControl::logMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorControl	access:public	signature:(tc::Severity level, const QString &msg)
TorControl::newConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void newConsensus();$/;"	p	class:TorControl	access:public	signature:()
TorControl::newDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorControl	access:public	signature:(const QStringList &ids)
TorControl::onAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onAuthenticated()$/;"	f	class:TorControl	signature:()
TorControl::onAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onAuthenticated();$/;"	p	class:TorControl	access:private	signature:()
TorControl::onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onDisconnected()$/;"	f	class:TorControl	signature:()
TorControl::onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onDisconnected();$/;"	p	class:TorControl	access:private	signature:()
TorControl::onLogStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onLogStdout(const QString &severity, const QString &message)$/;"	f	class:TorControl	signature:(const QString &severity, const QString &message)
TorControl::onLogStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onLogStdout(const QString &severity, const QString &message);$/;"	p	class:TorControl	access:private	signature:(const QString &severity, const QString &message)
TorControl::onStopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onStopped(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:TorControl	signature:(int exitCode, QProcess::ExitStatus exitStatus)
TorControl::onStopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onStopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControl	access:private	signature:(int exitCode, QProcess::ExitStatus exitStatus)
TorControl::orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorControl::protocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::protocolInfo(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::protocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ProtocolInfo protocolInfo(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::resetConf(QString key, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString *errmsg)
TorControl::resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::resetConf(QStringList keys, QString *errmsg)$/;"	f	class:TorControl	signature:(QStringList keys, QString *errmsg)
TorControl::resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool resetConf(QString key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString *errmsg = 0)
TorControl::resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool resetConf(QStringList keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QStringList keys, QString *errmsg = 0)
TorControl::saveConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::saveConf(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::saveConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool saveConf(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::send(ControlCommand cmd, ControlReply &reply, QString *errmsg)$/;"	f	class:TorControl	signature:(ControlCommand cmd, ControlReply &reply, QString *errmsg)
TorControl::send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::send(ControlCommand cmd, QString *errmsg)$/;"	f	class:TorControl	signature:(ControlCommand cmd, QString *errmsg)
TorControl::send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool send(ControlCommand cmd, ControlReply &reply, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(ControlCommand cmd, ControlReply &reply, QString *errmsg = 0)
TorControl::send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool send(ControlCommand cmd, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(ControlCommand cmd, QString *errmsg = 0)
TorControl::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorControl	access:public	signature:()
TorControl::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControl::serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QHash<QString,QString> map, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QHash<QString,QString> map, QString *errmsg, ControlReply *reply)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QString key, QString value, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QString key, QString value, QString *errmsg, ControlReply *reply)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QString keyAndValue, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QString keyAndValue, QString *errmsg, ControlReply *reply)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QHash<QString,QString> map, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> map, QString *errmsg = 0, ControlReply *reply = 0)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QString key, QString value, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString value, QString *errmsg = 0, ControlReply *reply = 0)
TorControl::setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QString keyAndValue, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QString keyAndValue, QString *errmsg = 0, ControlReply *reply = 0)
TorControl::setEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setEvent(TorEvents::Event e, bool add, bool set, QString *errmsg)$/;"	f	class:TorControl	signature:(TorEvents::Event e, bool add, bool set, QString *errmsg)
TorControl::setEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setEvent(TorEvents::Event e, bool add = true, bool set = true,$/;"	p	class:TorControl	access:public	signature:(TorEvents::Event e, bool add = true, bool set = true, QString *errmsg = 0)
TorControl::setEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setEvents(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::setEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setEvents(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::shouldContinue(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool shouldContinue(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::signal(TorSignal::Signal sig, QString *errmsg)$/;"	f	class:TorControl	signature:(TorSignal::Signal sig, QString *errmsg)
TorControl::signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool signal(TorSignal::Signal sig, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(TorSignal::Signal sig, QString *errmsg = 0)
TorControl::socksError	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:TorControl	access:public	signature:(tc::SocksError type, const QString &destination)
TorControl::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::start(const QString &tor, const QStringList &args)$/;"	f	class:TorControl	signature:(const QString &tor, const QStringList &args)
TorControl::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void start(const QString &tor, const QStringList &args);$/;"	p	class:TorControl	access:public	signature:(const QString &tor, const QStringList &args)
TorControl::startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void startFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
TorControl::started	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void started();$/;"	p	class:TorControl	access:public	signature:()
TorControl::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::stop(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool stop(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::stopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void stopped();$/;"	p	class:TorControl	access:public	signature:()
TorControl::stopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void stopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControl	access:public	signature:(int exitCode, QProcess::ExitStatus exitStatus)
TorControl::streamStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorControl	access:public	signature:(const Stream &stream)
TorControl::takeOwnership	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::takeOwnership(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::takeOwnership	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool takeOwnership(QString *errmsg);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg)
TorControl::torConnectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::torConnectFailed(QString errmsg)$/;"	f	class:TorControl	signature:(QString errmsg)
TorControl::torConnectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void torConnectFailed(QString errmsg);$/;"	p	class:TorControl	access:private	signature:(QString errmsg)
TorControl::torStartFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::torStartFailed(QString errmsg)$/;"	f	class:TorControl	signature:(QString errmsg)
TorControl::torStartFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void torStartFailed(QString errmsg);$/;"	p	class:TorControl	access:private	signature:(QString errmsg)
TorControl::useFeature	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::useFeature(const QString &feature, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &feature, QString *errmsg)
TorControl::useFeature	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool useFeature(const QString &feature, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(const QString &feature, QString *errmsg = 0)
TorControl::useMicrodescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::useMicrodescriptors(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
TorControl::useMicrodescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool useMicrodescriptors(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
TorControl::~TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::~TorControl()$/;"	f	class:TorControl	signature:()
TorControl::~TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ~TorControl();$/;"	p	class:TorControl	access:public	signature:()
TorControlPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::TorControlPrototype()$/;"	f	class:TorControlPrototype	signature:()
TorControlPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  TorControlPrototype();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^class TorControlPrototype : public QObject, QScriptable$/;"	c	inherits:QObject,QScriptable
TorControlPrototype::TorControlPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::TorControlPrototype()$/;"	f	class:TorControlPrototype	signature:()
TorControlPrototype::TorControlPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  TorControlPrototype();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
TorControlPrototype::authenticate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant authenticate(const QByteArray cookie);$/;"	p	class:TorControlPrototype	access:public	signature:(const QByteArray cookie)
TorControlPrototype::authenticate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant authenticate(const QString &password = QString());$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &password = QString())
TorControlPrototype::authenticated	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void authenticated();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
TorControlPrototype::bandwidthUpdate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorControlPrototype	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
TorControlPrototype::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorControlPrototype	access:public	signature:(const BootstrapStatus &status)
TorControlPrototype::bug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bug(const QString &reason);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &reason)
TorControlPrototype::checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControlPrototype::checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControlPrototype::circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void circuitEstablished();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::circuitStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorControlPrototype	access:public	signature:(const Circuit &circuit)
TorControlPrototype::clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorControlPrototype	access:public	signature:(int skew, const QString &source)
TorControlPrototype::closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::closeCircuit(const CircuitId &circId, bool ifUnused, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const CircuitId &circId, bool ifUnused, QString *errmsg)
TorControlPrototype::closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  bool closeCircuit(const CircuitId &circId, bool ifUnused = false,$/;"	p	class:TorControlPrototype	access:public	signature:(const CircuitId &circId, bool ifUnused = false, QString *errmsg = 0)
TorControlPrototype::closeStream	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::closeStream(const StreamId &streamId, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const StreamId &streamId, QString *errmsg)
TorControlPrototype::closeStream	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  bool closeStream(const StreamId &streamId, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const StreamId &streamId, QString *errmsg = 0)
TorControlPrototype::closeTorStdout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void closeTorStdout();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::connect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void connect(const QHostAddress &address, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &address, quint16 port)
TorControlPrototype::connect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void connect(const QString &path);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &path)
TorControlPrototype::connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void connectFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
TorControlPrototype::connected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void connected();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorControlPrototype	access:public	signature:(quint16 port, bool rejected)
TorControlPrototype::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorControlPrototype	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
TorControlPrototype::dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorControlPrototype::disconnect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void disconnect();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::disconnected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void disconnected();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dnsHijacked();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dnsUseless();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, const QString &hostname)
TorControlPrototype::getAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getAddressMap(AddressMap::AddressMapType type, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(AddressMap::AddressMapType type, QString *errmsg)
TorControlPrototype::getAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE AddressMap getAddressMap($/;"	p	class:TorControlPrototype	access:public	signature:( AddressMap::AddressMapType type = AddressMap::AddressMapAll, QString *errmsg = 0)
TorControlPrototype::getCircuits	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getCircuits(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
TorControlPrototype::getCircuits	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE CircuitList getCircuits(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QHash<QString,QString> &map, QString *errmsg)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QHash<QString,QStringList> &map, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QHash<QString,QStringList> &map, QString *errmsg)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QString key, QStringList &value, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString key, QStringList &value, QString *errmsg)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QStringList &keys, QString *errmsg)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getConf(QString key);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariantMap getConf(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QHash<QString,QString> &map, QString *errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> &map, QString *errmsg)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QHash<QString,QStringList> &map, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QStringList> &map, QString *errmsg = 0)
TorControlPrototype::getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QString key, QStringList &value, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key, QStringList &value, QString *errmsg = 0)
TorControlPrototype::getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getDescriptorAnnotations(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
TorControlPrototype::getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE DescriptorAnnotations getDescriptorAnnotations(const QString &id,$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControlPrototype::getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getHiddenServiceConf(const QString &key);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &key)
TorControlPrototype::getInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getInfo(QHash<QString,QString> &map);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> &map)
TorControlPrototype::getInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getInfo(const QString &key);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &key)
TorControlPrototype::getNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getNetworkStatus(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
TorControlPrototype::getNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE NetworkStatus getNetworkStatus(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
TorControlPrototype::getRouterDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterDescriptor(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
TorControlPrototype::getRouterDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE RouterDescriptor getRouterDescriptor(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControlPrototype::getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterDescriptorText(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
TorControlPrototype::getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QStringList getRouterDescriptorText(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControlPrototype::getRouterStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterStatus(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
TorControlPrototype::getRouterStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE RouterStatus getRouterStatus(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
TorControlPrototype::getSocksAddressList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getSocksAddressList(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
TorControlPrototype::getSocksAddressList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QStringList getSocksAddressList(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
TorControlPrototype::getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getSocksPort();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::getSocksPortList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getSocksPortList(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
TorControlPrototype::getSocksPortList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QList<quint16> getSocksPortList(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
TorControlPrototype::getStreams	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getStreams(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
TorControlPrototype::getStreams	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE StreamList getStreams(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
TorControlPrototype::getTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE quint32 getTorVersion();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::getTorVersionString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QString getTorVersionString();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::ipToCountry	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant ipToCountry(const QHostAddress &ip);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip)
TorControlPrototype::isCircuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isCircuitEstablished();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::isConnected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isConnected();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::isRunning	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isRunning();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isVidaliaRunningTor();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::logMessage	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorControlPrototype	access:public	signature:(tc::Severity level, const QString &msg)
TorControlPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::metaTypeId() {$/;"	f	class:TorControlPrototype	signature:()
TorControlPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  static int metaTypeId();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::name() {$/;"	f	class:TorControlPrototype	signature:()
TorControlPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  static QString name();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorControlPrototype	access:public	signature:(const QStringList &ids)
TorControlPrototype::orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorControlPrototype::resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::resetConf(QStringList keys, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QStringList keys, QString *errmsg)
TorControlPrototype::resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant resetConf(QString key);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key)
TorControlPrototype::resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool resetConf(QStringList keys, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QStringList keys, QString *errmsg = 0)
TorControlPrototype::saveConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant saveConf();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
TorControlPrototype::serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
TorControlPrototype::setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QHash<QString,QString> map);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> map)
TorControlPrototype::setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QString key, QString value);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key, QString value)
TorControlPrototype::setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QString keyAndValue);$/;"	p	class:TorControlPrototype	access:public	signature:(QString keyAndValue)
TorControlPrototype::setEvent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setEvent(TorEvents::Event e, bool add = true, bool set = true);$/;"	p	class:TorControlPrototype	access:public	signature:(TorEvents::Event e, bool add = true, bool set = true)
TorControlPrototype::setEvents	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setEvents();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::signal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant signal(TorSignal::Signal sig);$/;"	p	class:TorControlPrototype	access:public	signature:(TorSignal::Signal sig)
TorControlPrototype::socksError	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:TorControlPrototype	access:public	signature:(tc::SocksError type, const QString &destination)
TorControlPrototype::start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void start(const QString &tor, const QStringList &args);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &tor, const QStringList &args)
TorControlPrototype::startFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void startFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
TorControlPrototype::started	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void started();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant stop();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::stopped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void stopped();$/;"	p	class:TorControlPrototype	access:public	signature:()
TorControlPrototype::stopped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void stopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControlPrototype	access:public	signature:(int exitCode, QProcess::ExitStatus exitStatus)
TorControlPrototype::streamStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorControlPrototype	access:public	signature:(const Stream &stream)
TorEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::TorEvents(QObject *parent)$/;"	f	class:TorEvents	signature:(QObject *parent)
TorEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  TorEvents(QObject *parent = 0);$/;"	p	class:TorEvents	access:public	signature:(QObject *parent = 0)
TorEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^class TorEvents : public QObject$/;"	c	inherits:QObject
TorEvents::AddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    AddressMap    = (1u << 10),$/;"	e	enum:TorEvents::Event
TorEvents::Bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    Bandwidth     = (1u << 0),$/;"	e	enum:TorEvents::Event
TorEvents::CircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    CircuitStatus = (1u << 6),$/;"	e	enum:TorEvents::Event
TorEvents::ClientStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    ClientStatus  = (1u << 12),$/;"	e	enum:TorEvents::Event
TorEvents::EVENT_MAX	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static const Event EVENT_MAX = TorEvents::NewConsensus;$/;"	m	class:TorEvents	access:public
TorEvents::EVENT_MIN	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static const Event EVENT_MIN = TorEvents::Bandwidth;$/;"	m	class:TorEvents	access:public
TorEvents::Event	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  enum Event {$/;"	g	class:TorEvents	access:public
TorEvents::GeneralStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    GeneralStatus = (1u << 11),$/;"	e	enum:TorEvents::Event
TorEvents::LogDebug	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogDebug      = (1u << 1),$/;"	e	enum:TorEvents::Event
TorEvents::LogError	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogError      = (1u << 5),$/;"	e	enum:TorEvents::Event
TorEvents::LogInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogInfo       = (1u << 2),$/;"	e	enum:TorEvents::Event
TorEvents::LogNotice	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogNotice     = (1u << 3),$/;"	e	enum:TorEvents::Event
TorEvents::LogWarn	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    LogWarn       = (1u << 4),$/;"	e	enum:TorEvents::Event
TorEvents::NewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    NewConsensus  = (1u << 14),$/;"	e	enum:TorEvents::Event
TorEvents::NewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    NewDescriptor = (1u << 9),$/;"	e	enum:TorEvents::Event
TorEvents::OrConnStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    OrConnStatus  = (1u << 8),$/;"	e	enum:TorEvents::Event
TorEvents::Q_DECLARE_FLAGS	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  Q_DECLARE_FLAGS(Events, Event);$/;"	p	class:TorEvents	access:public	signature:(Events, Event)
TorEvents::ServerStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    ServerStatus  = (1u << 13),$/;"	e	enum:TorEvents::Event
TorEvents::StreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    StreamStatus  = (1u << 7),$/;"	e	enum:TorEvents::Event
TorEvents::TorEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::TorEvents(QObject *parent)$/;"	f	class:TorEvents	signature:(QObject *parent)
TorEvents::TorEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  TorEvents(QObject *parent = 0);$/;"	p	class:TorEvents	access:public	signature:(QObject *parent = 0)
TorEvents::Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    Unknown       = 0,$/;"	e	enum:TorEvents::Event
TorEvents::addressMapped	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorEvents	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
TorEvents::bandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorEvents	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
TorEvents::bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorEvents	access:public	signature:(const BootstrapStatus &status)
TorEvents::bug	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bug(const QString &reason);$/;"	p	class:TorEvents	access:public	signature:(const QString &reason)
TorEvents::checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
TorEvents::checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
TorEvents::circuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void circuitEstablished();$/;"	p	class:TorEvents	access:public	signature:()
TorEvents::circuitStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorEvents	access:public	signature:(const Circuit &circuit)
TorEvents::clockSkewed	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorEvents	access:public	signature:(int skew, const QString &source)
TorEvents::dangerousPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorEvents	access:public	signature:(quint16 port, bool rejected)
TorEvents::dangerousTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorEvents	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
TorEvents::dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorEvents::dnsHijacked	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dnsHijacked();$/;"	p	class:TorEvents	access:public	signature:()
TorEvents::dnsUseless	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dnsUseless();$/;"	p	class:TorEvents	access:public	signature:()
TorEvents::externalAddressChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, const QString &hostname)
TorEvents::handleAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleAddressMap(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleAddressMap(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleBandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleBandwidthUpdate(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleBandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleBandwidthUpdate(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleCircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleCircuitStatus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleCircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleCircuitStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleClientStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleClientStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleClientStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleClientStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleEvent(const ControlReply &reply)$/;"	f	class:TorEvents	signature:(const ControlReply &reply)
TorEvents::handleEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleEvent(const ControlReply &reply);$/;"	p	class:TorEvents	access:public	signature:(const ControlReply &reply)
TorEvents::handleGeneralStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleGeneralStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleGeneralStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleGeneralStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleLogMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleLogMessage(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleLogMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleLogMessage(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleNewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleNewConsensus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleNewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleNewConsensus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleNewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleNewDescriptor(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleNewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleNewDescriptor(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleOrConnStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleOrConnStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::handleServerStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleServerStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleServerStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleServerStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
TorEvents::handleStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleStatusEvent(Event e, const ReplyLine &line)$/;"	f	class:TorEvents	signature:(Event e, const ReplyLine &line)
TorEvents::handleStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleStatusEvent(Event type, const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(Event type, const ReplyLine &line)
TorEvents::handleStreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleStreamStatus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::handleStreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleStreamStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::logMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorEvents	access:public	signature:(tc::Severity level, const QString &msg)
TorEvents::newConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void newConsensus();$/;"	p	class:TorEvents	access:public	signature:()
TorEvents::newDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorEvents	access:public	signature:(const QStringList &ids)
TorEvents::orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
TorEvents::parseEventType	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::parseEventType(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
TorEvents::parseEventType	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static Event parseEventType(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
TorEvents::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorEvents	access:public	signature:()
TorEvents::serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
TorEvents::serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
TorEvents::socksError	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void socksError(tc::SocksError error, const QString &destination);$/;"	p	class:TorEvents	access:public	signature:(tc::SocksError error, const QString &destination)
TorEvents::splitAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::splitAddress(const QString &address)$/;"	f	class:TorEvents	signature:(const QString &address)
TorEvents::splitAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^   static QPair<QHostAddress,quint16> splitAddress(const QString &address);$/;"	p	class:TorEvents	access:private	signature:(const QString &address)
TorEvents::streamStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorEvents	access:public	signature:(const Stream &stream)
TorEvents::toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::toString(Event e)$/;"	f	class:TorEvents	signature:(Event e)
TorEvents::toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static QString toString(TorEvents::Event e);$/;"	p	class:TorEvents	access:public	signature:(TorEvents::Event e)
TorEvents::toTorEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::toTorEvent(const QString &event)$/;"	f	class:TorEvents	signature:(const QString &event)
TorEvents::toTorEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static Event toTorEvent(const QString &event);$/;"	p	class:TorEvents	access:private	signature:(const QString &event)
TorHighlighter	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    TorHighlighter(QTextEdit *te) : QSyntaxHighlighter(te) {}$/;"	f	class:TorHighlighter	access:public	signature:(QTextEdit *te)
TorHighlighter	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^class TorHighlighter : public QSyntaxHighlighter {$/;"	c	inherits:QSyntaxHighlighter
TorHighlighter::TorHighlighter	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    TorHighlighter(QTextEdit *te) : QSyntaxHighlighter(te) {}$/;"	f	class:TorHighlighter	access:public	signature:(QTextEdit *te)
TorHighlighter::highlightBlock	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorHighlighter::highlightBlock(const QString &text)$/;"	f	class:TorHighlighter	signature:(const QString &text)
TorHighlighter::highlightBlock	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    void highlightBlock(const QString &text);$/;"	p	class:TorHighlighter	access:public	signature:(const QString &text)
TorHighlighter::~TorHighlighter	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    ~TorHighlighter() {}$/;"	f	class:TorHighlighter	access:public	signature:()
TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::TorMapImageView(QWidget *parent)$/;"	f	class:TorMapImageView	signature:(QWidget *parent)
TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  TorMapImageView(QWidget *parent = 0);$/;"	p	class:TorMapImageView	access:public	signature:(QWidget *parent = 0)
TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^class TorMapImageView : public ZImageView$/;"	c	inherits:ZImageView
TorMapImageView::TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::TorMapImageView(QWidget *parent)$/;"	f	class:TorMapImageView	signature:(QWidget *parent)
TorMapImageView::TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  TorMapImageView(QWidget *parent = 0);$/;"	p	class:TorMapImageView	access:public	signature:(QWidget *parent = 0)
TorMapImageView::_circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QHash<CircuitId, QPair<QPainterPath *,bool>* > _circuits;$/;"	m	class:TorMapImageView	access:private
TorMapImageView::_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QHash<QString, QPair<QPointF,bool>* > _routers;$/;"	m	class:TorMapImageView	access:private
TorMapImageView::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::addCircuit(const CircuitId &circid, const QStringList &path)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid, const QStringList &path)
TorMapImageView::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void addCircuit(const CircuitId &circid, const QStringList &path);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid, const QStringList &path)
TorMapImageView::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip)$/;"	f	class:TorMapImageView	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
TorMapImageView::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip);$/;"	p	class:TorMapImageView	access:public	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
TorMapImageView::circuitBoundingBox	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::circuitBoundingBox()$/;"	f	class:TorMapImageView	signature:()
TorMapImageView::circuitBoundingBox	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QRectF circuitBoundingBox();$/;"	p	class:TorMapImageView	access:private	signature:()
TorMapImageView::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::clear()$/;"	f	class:TorMapImageView	signature:()
TorMapImageView::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void clear();$/;"	p	class:TorMapImageView	access:public	signature:()
TorMapImageView::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::deselectAll()$/;"	f	class:TorMapImageView	signature:()
TorMapImageView::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void deselectAll();$/;"	p	class:TorMapImageView	access:public	signature:()
TorMapImageView::lerp	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::lerp(float input, float *table)$/;"	f	class:TorMapImageView	signature:(float input, float *table)
TorMapImageView::lerp	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  float lerp(float input, float *table);$/;"	p	class:TorMapImageView	access:private	signature:(float input, float *table)
TorMapImageView::minimumSizeHint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::minimumSizeHint() const$/;"	f	class:TorMapImageView	signature:() const
TorMapImageView::minimumSizeHint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QSize minimumSizeHint() const;$/;"	p	class:TorMapImageView	access:public	signature:() const
TorMapImageView::paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::paintImage(QPainter *painter)$/;"	f	class:TorMapImageView	signature:(QPainter *painter)
TorMapImageView::paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  virtual void paintImage(QPainter *painter);$/;"	p	class:TorMapImageView	access:protected	signature:(QPainter *painter)
TorMapImageView::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::removeCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
TorMapImageView::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void removeCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
TorMapImageView::selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::selectCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
TorMapImageView::selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void selectCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
TorMapImageView::selectRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::selectRouter(const QString &id)$/;"	f	class:TorMapImageView	signature:(const QString &id)
TorMapImageView::selectRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void selectRouter(const QString &id);$/;"	p	class:TorMapImageView	access:public	signature:(const QString &id)
TorMapImageView::toMapSpace	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::toMapSpace(float latitude, float longitude)$/;"	f	class:TorMapImageView	signature:(float latitude, float longitude)
TorMapImageView::toMapSpace	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QPointF toMapSpace(float latitude, float longitude);$/;"	p	class:TorMapImageView	access:private	signature:(float latitude, float longitude)
TorMapImageView::zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
TorMapImageView::zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
TorMapImageView::zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToFit()$/;"	f	class:TorMapImageView	signature:()
TorMapImageView::zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToFit();$/;"	p	class:TorMapImageView	access:public	signature:()
TorMapImageView::zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToRouter(const QString &id)$/;"	f	class:TorMapImageView	signature:(const QString &id)
TorMapImageView::zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToRouter(const QString &id);$/;"	p	class:TorMapImageView	access:public	signature:(const QString &id)
TorMapImageView::~TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::~TorMapImageView()$/;"	f	class:TorMapImageView	signature:()
TorMapImageView::~TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  ~TorMapImageView();$/;"	p	class:TorMapImageView	access:public	signature:()
TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::TorMapWidget(QWidget *parent)$/;"	f	class:TorMapWidget	signature:(QWidget *parent)
TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  TorMapWidget(QWidget *parent = 0);$/;"	p	class:TorMapWidget	access:public	signature:(QWidget *parent = 0)
TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^class TorMapWidget : public Marble::MarbleWidget$/;"	c	inherits:Marble::MarbleWidget
TorMapWidget::TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::TorMapWidget(QWidget *parent)$/;"	f	class:TorMapWidget	signature:(QWidget *parent)
TorMapWidget::TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  TorMapWidget(QWidget *parent = 0);$/;"	p	class:TorMapWidget	access:public	signature:(QWidget *parent = 0)
TorMapWidget::_circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  QHash<CircuitId, CircuitGeoPath*> _circuits;$/;"	m	class:TorMapWidget	access:private
TorMapWidget::_document	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  Marble::GeoDataDocument *_document;$/;"	m	class:TorMapWidget	access:private
TorMapWidget::_folder	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  Marble::GeoDataFolder *_folder;$/;"	m	class:TorMapWidget	access:private
TorMapWidget::_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  QHash<QString, Marble::GeoDataCoordinates> _routers;$/;"	m	class:TorMapWidget	access:private
TorMapWidget::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::addCircuit(const CircuitId &circid, const QStringList &path)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid, const QStringList &path)
TorMapWidget::addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void addCircuit(const CircuitId &circid, const QStringList &path);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid, const QStringList &path)
TorMapWidget::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip)$/;"	f	class:TorMapWidget	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
TorMapWidget::addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip);$/;"	p	class:TorMapWidget	access:public	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
TorMapWidget::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::clear()$/;"	f	class:TorMapWidget	signature:()
TorMapWidget::clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void clear();$/;"	p	class:TorMapWidget	access:public	signature:()
TorMapWidget::customPaint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::customPaint(GeoPainter *painter)$/;"	f	class:TorMapWidget	signature:(GeoPainter *painter)
TorMapWidget::customPaint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  virtual void customPaint(Marble::GeoPainter *painter);$/;"	p	class:TorMapWidget	access:protected	signature:(Marble::GeoPainter *painter)
TorMapWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::deselectAll()$/;"	f	class:TorMapWidget	signature:()
TorMapWidget::deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void deselectAll();$/;"	p	class:TorMapWidget	access:public	signature:()
TorMapWidget::displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:TorMapWidget	access:public	signature:(const QString &id)
TorMapWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::removeCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
TorMapWidget::removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void removeCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
TorMapWidget::selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::selectCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
TorMapWidget::selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void selectCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
TorMapWidget::zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
TorMapWidget::zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
TorMapWidget::zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToFit()$/;"	f	class:TorMapWidget	signature:()
TorMapWidget::zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToFit();$/;"	p	class:TorMapWidget	access:public	signature:()
TorMapWidget::zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToRouter(const QString &id)$/;"	f	class:TorMapWidget	signature:(const QString &id)
TorMapWidget::zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToRouter(const QString &id);$/;"	p	class:TorMapWidget	access:public	signature:(const QString &id)
TorMapWidget::~TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::~TorMapWidget()$/;"	f	class:TorMapWidget	signature:()
TorMapWidget::~TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  ~TorMapWidget();$/;"	p	class:TorMapWidget	access:public	signature:()
TorMapWidgetPopupMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::TorMapWidgetPopupMenu(TorMapWidget *widget)$/;"	f	class:TorMapWidgetPopupMenu	signature:(TorMapWidget *widget)
TorMapWidgetPopupMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  TorMapWidgetPopupMenu(TorMapWidget *widget);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(TorMapWidget *widget)
TorMapWidgetPopupMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^class TorMapWidgetPopupMenu : public QObject$/;"	c	inherits:QObject
TorMapWidgetPopupMenu::TorMapWidgetPopupMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::TorMapWidgetPopupMenu(TorMapWidget *widget)$/;"	f	class:TorMapWidgetPopupMenu	signature:(TorMapWidget *widget)
TorMapWidgetPopupMenu::TorMapWidgetPopupMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  TorMapWidgetPopupMenu(TorMapWidget *widget);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(TorMapWidget *widget)
TorMapWidgetPopupMenu::_leftClickMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  QMenu *_leftClickMenu;$/;"	m	class:TorMapWidgetPopupMenu	access:private
TorMapWidgetPopupMenu::_widget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  TorMapWidget *_widget;$/;"	m	class:TorMapWidgetPopupMenu	access:private
TorMapWidgetPopupMenu::displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(const QString &id)
TorMapWidgetPopupMenu::featureLeftClicked	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::featureLeftClicked(int x, int y)$/;"	f	class:TorMapWidgetPopupMenu	signature:(int x, int y)
TorMapWidgetPopupMenu::featureLeftClicked	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void featureLeftClicked(int x, int y);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(int x, int y)
TorMapWidgetPopupMenu::relaySelected	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::relaySelected(QAction *action)$/;"	f	class:TorMapWidgetPopupMenu	signature:(QAction *action)
TorMapWidgetPopupMenu::relaySelected	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void relaySelected(QAction *action);$/;"	p	class:TorMapWidgetPopupMenu	access:private	signature:(QAction *action)
TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorOpt()$/;"	f	class:TorOpt	access:public	signature:()
TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^ TorOpt(const QString &name, OptType type, QString defaultValue = "")$/;"	f	class:TorOpt	access:public	signature:(const QString &name, OptType type, QString defaultValue = ”)
TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^ TorOpt(const TorOpt &opt)$/;"	f	class:TorOpt	access:public	signature:(const TorOpt &opt)
TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^class TorOpt$/;"	c
TorOpt::Boolean	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Boolean,$/;"	e	enum:TorOpt::OptType
TorOpt::BooleanAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    BooleanAuto,$/;"	e	enum:TorOpt::OptType
TorOpt::CommaList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    CommaList,$/;"	e	enum:TorOpt::OptType
TorOpt::DataSize	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    DataSize,$/;"	e	enum:TorOpt::OptType
TorOpt::Dependant	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Dependant,$/;"	e	enum:TorOpt::OptType
TorOpt::Filename	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Filename,$/;"	e	enum:TorOpt::OptType
TorOpt::Float	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Float,$/;"	e	enum:TorOpt::OptType
TorOpt::Integer	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Integer,$/;"	e	enum:TorOpt::OptType
TorOpt::LineList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    LineList,$/;"	e	enum:TorOpt::OptType
TorOpt::NIL	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    NIL$/;"	e	enum:TorOpt::OptType
TorOpt::OptType	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  enum OptType {$/;"	g	class:TorOpt	access:public
TorOpt::Port	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Port,$/;"	e	enum:TorOpt::OptType
TorOpt::RouterList	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    RouterList,$/;"	e	enum:TorOpt::OptType
TorOpt::String	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    String,$/;"	e	enum:TorOpt::OptType
TorOpt::TimeInterval	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    TimeInterval = 0,$/;"	e	enum:TorOpt::OptType
TorOpt::TimeMsecInterval	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    TimeMsecInterval,$/;"	e	enum:TorOpt::OptType
TorOpt::TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorOpt()$/;"	f	class:TorOpt	access:public	signature:()
TorOpt::TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^ TorOpt(const QString &name, OptType type, QString defaultValue = "")$/;"	f	class:TorOpt	access:public	signature:(const QString &name, OptType type, QString defaultValue = ”)
TorOpt::TorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^ TorOpt(const TorOpt &opt)$/;"	f	class:TorOpt	access:public	signature:(const TorOpt &opt)
TorOpt::Virtual	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Virtual,$/;"	e	enum:TorOpt::OptType
TorOpt::_default	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _default;$/;"	m	class:TorOpt	access:private
TorOpt::_line	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine *_line;$/;"	m	class:TorOpt	access:private
TorOpt::_name	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _name;$/;"	m	class:TorOpt	access:private
TorOpt::_type	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  OptType _type;$/;"	m	class:TorOpt	access:private
TorOpt::defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString defaultValue() const$/;"	f	class:TorOpt	access:public	signature:() const
TorOpt::isMultilined	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultilined()$/;"	f	class:TorOpt	access:public	signature:()
TorOpt::isMultivalued	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultivalued()$/;"	f	class:TorOpt	access:public	signature:()
TorOpt::isNull	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isNull() const$/;"	f	class:TorOpt	access:public	signature:() const
TorOpt::line	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine *line() const$/;"	f	class:TorOpt	access:public	signature:() const
TorOpt::name	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString name() const$/;"	f	class:TorOpt	access:public	signature:() const
TorOpt::null	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  static TorOpt null()$/;"	f	class:TorOpt	access:public	signature:()
TorOpt::setLine	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setLine(TorrcLine *line)$/;"	f	class:TorOpt	access:public	signature:(TorrcLine *line)
TorOpt::type	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  OptType type() const$/;"	f	class:TorOpt	access:public	signature:() const
TorProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::TorProcess(QObject *parent)$/;"	f	class:TorProcess	signature:(QObject *parent)
TorProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  TorProcess(QObject *parent = 0);$/;"	p	class:TorProcess	access:public	signature:(QObject *parent = 0)
TorProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^class TorProcess : public QProcess$/;"	c	inherits:QProcess
TorProcess::TorProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::TorProcess(QObject *parent)$/;"	f	class:TorProcess	signature:(QObject *parent)
TorProcess::TorProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  TorProcess(QObject *parent = 0);$/;"	p	class:TorProcess	access:public	signature:(QObject *parent = 0)
TorProcess::closeStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::closeStdout()$/;"	f	class:TorProcess	signature:()
TorProcess::closeStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void closeStdout();$/;"	p	class:TorProcess	access:public	signature:()
TorProcess::crash	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::crash()$/;"	f	class:TorProcess	signature:()
TorProcess::crash	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void crash();$/;"	p	class:TorProcess	access:public	signature:()
TorProcess::formatArguments	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::formatArguments(const QStringList &args)$/;"	f	class:TorProcess	signature:(const QStringList &args)
TorProcess::formatArguments	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  QString formatArguments(const QStringList &args);$/;"	p	class:TorProcess	access:private	signature:(const QStringList &args)
TorProcess::log	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void log(const QString &severity, const QString &message);$/;"	p	class:TorProcess	access:public	signature:(const QString &severity, const QString &message)
TorProcess::onError	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::onError(QProcess::ProcessError error)$/;"	f	class:TorProcess	signature:(QProcess::ProcessError error)
TorProcess::onError	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:TorProcess	access:private	signature:(QProcess::ProcessError error)
TorProcess::onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::onReadyRead()$/;"	f	class:TorProcess	signature:()
TorProcess::onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void onReadyRead();$/;"	p	class:TorProcess	access:private	signature:()
TorProcess::openStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::openStdout()$/;"	f	class:TorProcess	signature:()
TorProcess::openStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void openStdout();$/;"	p	class:TorProcess	access:public	signature:()
TorProcess::pid	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::pid()$/;"	f	class:TorProcess	signature:()
TorProcess::pid	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  quint64 pid();$/;"	p	class:TorProcess	access:public	signature:()
TorProcess::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::start(const QString &app, const QStringList &args)$/;"	f	class:TorProcess	signature:(const QString &app, const QStringList &args)
TorProcess::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void start(const QString &app, const QStringList &args);$/;"	p	class:TorProcess	access:public	signature:(const QString &app, const QStringList &args)
TorProcess::startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void startFailed(const QString &errorMessage);$/;"	p	class:TorProcess	access:public	signature:(const QString &errorMessage)
TorProcess::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::stop(QString *errmsg)$/;"	f	class:TorProcess	signature:(QString *errmsg)
TorProcess::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  bool stop(QString *errmsg = 0);$/;"	p	class:TorProcess	access:public	signature:(QString *errmsg = 0)
TorProcess::version	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::version(const QString &exe)$/;"	f	class:TorProcess	signature:(const QString &exe)
TorProcess::version	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  static QString version(const QString &exe);$/;"	p	class:TorProcess	access:public	signature:(const QString &exe)
TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::TorService(QObject *parent)$/;"	f	class:TorService	signature:(QObject *parent)
TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  TorService(QObject* parent = 0);$/;"	p	class:TorService	access:public	signature:(QObject* parent = 0)
TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^class TorService : public QObject$/;"	c	inherits:QObject
TorService::TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::TorService(QObject *parent)$/;"	f	class:TorService	signature:(QObject *parent)
TorService::TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  TorService(QObject* parent = 0);$/;"	p	class:TorService	access:public	signature:(QObject* parent = 0)
TorService::_scm	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SC_HANDLE _scm;$/;"	m	class:TorService	access:private
TorService::_service_fns	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^ServiceFunctions TorService::_service_fns =$/;"	m	class:TorService	file:
TorService::_service_fns	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static ServiceFunctions _service_fns;$/;"	m	class:TorService	access:private
TorService::closeHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::closeHandle(SC_HANDLE handle)$/;"	f	class:TorService	signature:(SC_HANDLE handle)
TorService::closeHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static void closeHandle(SC_HANDLE handle);$/;"	p	class:TorService	access:private	signature:(SC_HANDLE handle)
TorService::exitCode	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::exitCode()$/;"	f	class:TorService	signature:()
TorService::exitCode	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  int exitCode();$/;"	p	class:TorService	access:public	signature:()
TorService::exitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::exitStatus()$/;"	f	class:TorService	signature:()
TorService::exitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  QProcess::ExitStatus exitStatus();$/;"	p	class:TorService	access:public	signature:()
TorService::finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void finished(int exitCode, QProcess::ExitStatus);$/;"	p	class:TorService	access:public	signature:(int exitCode, QProcess::ExitStatus)
TorService::install	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::install(const QString &torPath, const QString &torrc,$/;"	f	class:TorService	signature:(const QString &torPath, const QString &torrc, quint16 controlPort)
TorService::install	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool install(const QString &torPath, const QString &torrc,$/;"	p	class:TorService	access:public	signature:(const QString &torPath, const QString &torrc, quint16 controlPort)
TorService::isInstalled	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isInstalled()$/;"	f	class:TorService	signature:()
TorService::isInstalled	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool isInstalled();$/;"	p	class:TorService	access:public	signature:()
TorService::isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isRunning()$/;"	f	class:TorService	signature:()
TorService::isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool isRunning();$/;"	p	class:TorService	access:public	signature:()
TorService::isSupported	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isSupported()$/;"	f	class:TorService	signature:()
TorService::isSupported	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static bool isSupported();$/;"	p	class:TorService	access:public	signature:()
TorService::loadServiceFunctions	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::loadServiceFunctions()$/;"	f	class:TorService	signature:()
TorService::loadServiceFunctions	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static bool loadServiceFunctions();$/;"	p	class:TorService	access:public	signature:()
TorService::openSCM	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::openSCM()$/;"	f	class:TorService	signature:()
TorService::openSCM	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static SC_HANDLE openSCM();$/;"	p	class:TorService	access:private	signature:()
TorService::openService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::openService()$/;"	f	class:TorService	signature:()
TorService::openService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SC_HANDLE openService();$/;"	p	class:TorService	access:private	signature:()
TorService::remove	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::remove()$/;"	f	class:TorService	signature:()
TorService::remove	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool remove();$/;"	p	class:TorService	access:public	signature:()
TorService::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::start()$/;"	f	class:TorService	signature:()
TorService::start	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void start();$/;"	p	class:TorService	access:public	signature:()
TorService::startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void startFailed(QString error);$/;"	p	class:TorService	access:public	signature:(QString error)
TorService::started	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void started();$/;"	p	class:TorService	access:public	signature:()
TorService::status	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::status()$/;"	f	class:TorService	signature:()
TorService::status	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  DWORD status();$/;"	p	class:TorService	access:private	signature:()
TorService::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::stop()$/;"	f	class:TorService	signature:()
TorService::stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool stop();$/;"	p	class:TorService	access:public	signature:()
TorService::~TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::~TorService()$/;"	f	class:TorService	signature:()
TorService::~TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ~TorService();$/;"	p	class:TorService	access:public	signature:()
TorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::TorSettings(TorControl *torControl)$/;"	f	class:TorSettings	signature:(TorControl *torControl)
TorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  TorSettings(TorControl *torControl = 0);$/;"	p	class:TorSettings	access:public	signature:(TorControl *torControl = 0)
TorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^class TorSettings : public AbstractTorSettings$/;"	c	inherits:AbstractTorSettings
TorSettings::AuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  enum AuthenticationMethod {$/;"	g	class:TorSettings	access:public
TorSettings::CookieAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    CookieAuth,    \/**< Use a "magic" cookie for authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
TorSettings::NullAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    NullAuth,      \/**< No authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
TorSettings::PasswordAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    PasswordAuth,  \/**< Use a hashed password for authentication. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
TorSettings::TorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::TorSettings(TorControl *torControl)$/;"	f	class:TorSettings	signature:(TorControl *torControl)
TorSettings::TorSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  TorSettings(TorControl *torControl = 0);$/;"	p	class:TorSettings	access:public	signature:(TorControl *torControl = 0)
TorSettings::UnknownAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    UnknownAuth    \/**< Unknown authentication method. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
TorSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::apply(QString *errmsg)$/;"	f	class:TorSettings	signature:(QString *errmsg)
TorSettings::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:TorSettings	access:public	signature:(QString *errmsg = 0)
TorSettings::autoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::autoControlPort() const$/;"	f	class:TorSettings	signature:() const
TorSettings::autoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool autoControlPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::bootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::bootstrap() const$/;"	f	class:TorSettings	signature:() const
TorSettings::bootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool bootstrap() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::bootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::bootstrapFrom() const$/;"	f	class:TorSettings	signature:() const
TorSettings::bootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString bootstrapFrom() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getAuthenticationMethod() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  AuthenticationMethod getAuthenticationMethod() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlAddress() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QHostAddress getControlAddress() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlMethod() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  ControlMethod::Method getControlMethod() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlPassword() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getControlPassword() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlPort() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  quint16 getControlPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDataDirectory() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getDataDirectory() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDefaultsTorrc() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getDefaultsTorrc() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDisableNetwork() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool getDisableNetwork() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getExecutable() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getExecutable() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getRejectPlaintextPorts() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QList<quint16> getRejectPlaintextPorts() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getSocketPath() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getSocketPath() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getSocksPort() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  quint16 getSocksPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getTorrc() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getTorrc() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::getWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getWarnPlaintextPorts() const$/;"	f	class:TorSettings	signature:() const
TorSettings::getWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QList<quint16> getWarnPlaintextPorts() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSettings::hashPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::hashPassword(const QString &password)$/;"	f	class:TorSettings	signature:(const QString &password)
TorSettings::hashPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  static QString hashPassword(const QString &password);$/;"	p	class:TorSettings	access:public	signature:(const QString &password)
TorSettings::randomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::randomPassword()$/;"	f	class:TorSettings	signature:()
TorSettings::randomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  static QString randomPassword();$/;"	p	class:TorSettings	access:public	signature:()
TorSettings::setAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setAuthenticationMethod(AuthenticationMethod method)$/;"	f	class:TorSettings	signature:(AuthenticationMethod method)
TorSettings::setAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setAuthenticationMethod(AuthenticationMethod method);$/;"	p	class:TorSettings	access:public	signature:(AuthenticationMethod method)
TorSettings::setAutoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setAutoControlPort(const bool autoControl)$/;"	f	class:TorSettings	signature:(const bool autoControl)
TorSettings::setAutoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setAutoControlPort(const bool auto);$/;"	p	class:TorSettings	access:public	signature:(const bool auto)
TorSettings::setBootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setBootstrap(bool enabled)$/;"	f	class:TorSettings	signature:(bool enabled)
TorSettings::setBootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setBootstrap(bool enabled);$/;"	p	class:TorSettings	access:public	signature:(bool enabled)
TorSettings::setBootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setBootstrapFrom(const QString &from)$/;"	f	class:TorSettings	signature:(const QString &from)
TorSettings::setBootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setBootstrapFrom(const QString &from);$/;"	p	class:TorSettings	access:public	signature:(const QString &from)
TorSettings::setControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlAddress(const QHostAddress &addr)$/;"	f	class:TorSettings	signature:(const QHostAddress &addr)
TorSettings::setControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlAddress(const QHostAddress &addr);$/;"	p	class:TorSettings	access:public	signature:(const QHostAddress &addr)
TorSettings::setControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlMethod(ControlMethod::Method method)$/;"	f	class:TorSettings	signature:(ControlMethod::Method method)
TorSettings::setControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlMethod(ControlMethod::Method method);$/;"	p	class:TorSettings	access:public	signature:(ControlMethod::Method method)
TorSettings::setControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlPassword(const QString &password)$/;"	f	class:TorSettings	signature:(const QString &password)
TorSettings::setControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlPassword(const QString &password);$/;"	p	class:TorSettings	access:public	signature:(const QString &password)
TorSettings::setControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlPort(quint16 port)$/;"	f	class:TorSettings	signature:(quint16 port)
TorSettings::setControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlPort(quint16 port);$/;"	p	class:TorSettings	access:public	signature:(quint16 port)
TorSettings::setDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDataDirectory(const QString &dataDirectory)$/;"	f	class:TorSettings	signature:(const QString &dataDirectory)
TorSettings::setDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDataDirectory(const QString &dataDir);$/;"	p	class:TorSettings	access:public	signature:(const QString &dataDir)
TorSettings::setDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDefaultsTorrc(const QString &torrc)$/;"	f	class:TorSettings	signature:(const QString &torrc)
TorSettings::setDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDefaultsTorrc(const QString &torrc);$/;"	p	class:TorSettings	access:public	signature:(const QString &torrc)
TorSettings::setDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDisableNetwork(bool val)$/;"	f	class:TorSettings	signature:(bool val)
TorSettings::setDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDisableNetwork(bool val);$/;"	p	class:TorSettings	access:public	signature:(bool val)
TorSettings::setExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setExecutable(const QString &torExecutable)$/;"	f	class:TorSettings	signature:(const QString &torExecutable)
TorSettings::setExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setExecutable(const QString &torExecutable);$/;"	p	class:TorSettings	access:public	signature:(const QString &torExecutable)
TorSettings::setRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setRejectPlaintextPorts(const QList<quint16> &ports)$/;"	f	class:TorSettings	signature:(const QList<quint16> &ports)
TorSettings::setRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setRejectPlaintextPorts(const QList<quint16> &ports);$/;"	p	class:TorSettings	access:public	signature:(const QList<quint16> &ports)
TorSettings::setSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setSocketPath(const QString &path)$/;"	f	class:TorSettings	signature:(const QString &path)
TorSettings::setSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setSocketPath(const QString &path);$/;"	p	class:TorSettings	access:public	signature:(const QString &path)
TorSettings::setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setSocksPort(quint16 port)$/;"	f	class:TorSettings	signature:(quint16 port)
TorSettings::setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setSocksPort(quint16 port);$/;"	p	class:TorSettings	access:public	signature:(quint16 port)
TorSettings::setTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setTorrc(const QString &torrc)$/;"	f	class:TorSettings	signature:(const QString &torrc)
TorSettings::setTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setTorrc(const QString &torrc);$/;"	p	class:TorSettings	access:public	signature:(const QString &torrc)
TorSettings::setUseRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setUseRandomPassword(bool useRandomPassword)$/;"	f	class:TorSettings	signature:(bool useRandomPassword)
TorSettings::setUseRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setUseRandomPassword(bool useRandomPassword);$/;"	p	class:TorSettings	access:public	signature:(bool useRandomPassword)
TorSettings::setWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setWarnPlaintextPorts(const QList<quint16> &ports)$/;"	f	class:TorSettings	signature:(const QList<quint16> &ports)
TorSettings::setWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setWarnPlaintextPorts(const QList<quint16> &ports);$/;"	p	class:TorSettings	access:public	signature:(const QList<quint16> &ports)
TorSettings::toAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::toAuthenticationMethod(const QString &authMethod) const$/;"	f	class:TorSettings	signature:(const QString &authMethod) const
TorSettings::toAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  AuthenticationMethod toAuthenticationMethod(const QString &authMethod) const;$/;"	p	class:TorSettings	access:private	signature:(const QString &authMethod) const
TorSettings::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::toString(AuthenticationMethod method) const$/;"	f	class:TorSettings	signature:(AuthenticationMethod method) const
TorSettings::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString toString(AuthenticationMethod type) const;$/;"	p	class:TorSettings	access:private	signature:(AuthenticationMethod type) const
TorSettings::useRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::useRandomPassword() const$/;"	f	class:TorSettings	signature:() const
TorSettings::useRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool useRandomPassword() const;$/;"	p	class:TorSettings	access:public	signature:() const
TorSignal	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^class TorSignal$/;"	c
TorSignal::Debug	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Debug,    \/**< SIGUSR2: Switch all open logs to loglevel debug *\/$/;"	e	enum:TorSignal::Signal
TorSignal::Dump	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Dump,     \/**< SIGUSR1: Log information about current circuits *\/$/;"	e	enum:TorSignal::Signal
TorSignal::Halt	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Halt,     \/**< SIGTERM: Immediate shutdown *\/$/;"	e	enum:TorSignal::Signal
TorSignal::NewNym	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    NewNym    \/**< NEWNYM: Switch to all new clean circuits *\/$/;"	e	enum:TorSignal::Signal
TorSignal::Reload	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Reload,   \/**< SIGHUP: Reloads config items and refetch directory *\/$/;"	e	enum:TorSignal::Signal
TorSignal::Shutdown	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^    Shutdown, \/**< SIGINT: Controlled shutdown *\/$/;"	e	enum:TorSignal::Signal
TorSignal::Signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^  enum Signal {$/;"	g	class:TorSignal	access:public
TorSignal::toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.cpp	/^TorSignal::toString(Signal signal)$/;"	f	class:TorSignal	signature:(Signal signal)
TorSignal::toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^  static QString toString(Signal signal);$/;"	p	class:TorSignal	access:public	signature:(Signal signal)
TorSocket	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::TorSocket(const QHostAddress &socksAddr,$/;"	f	class:TorSocket	signature:(const QHostAddress &socksAddr, quint16 socksPort, QObject *parent)
TorSocket	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  TorSocket(const QHostAddress &socksAddr,$/;"	p	class:TorSocket	access:public	signature:(const QHostAddress &socksAddr, quint16 socksPort, QObject *parent = 0)
TorSocket	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^class TorSocket : public QTcpSocket$/;"	c	inherits:QTcpSocket
TorSocket::TorSocket	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::TorSocket(const QHostAddress &socksAddr,$/;"	f	class:TorSocket	signature:(const QHostAddress &socksAddr, quint16 socksPort, QObject *parent)
TorSocket::TorSocket	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  TorSocket(const QHostAddress &socksAddr,$/;"	p	class:TorSocket	access:public	signature:(const QHostAddress &socksAddr, quint16 socksPort, QObject *parent = 0)
TorSocket::_remoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  QString _remoteHost;     \/**< Remote hostname. *\/$/;"	m	class:TorSocket	access:private
TorSocket::_remotePort	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  quint16 _remotePort;     \/**< Remote host port. *\/$/;"	m	class:TorSocket	access:private
TorSocket::_socksAddr	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  QHostAddress _socksAddr; \/**< Address of Tor's SOCKS listener. *\/$/;"	m	class:TorSocket	access:private
TorSocket::_socksPort	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  quint16 _socksPort;      \/**< Port of Tor's SOCKS listener. *\/$/;"	m	class:TorSocket	access:private
TorSocket::connectToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::connectToRemoteHost(const QString &remoteHost, quint16 remotePort)$/;"	f	class:TorSocket	signature:(const QString &remoteHost, quint16 remotePort)
TorSocket::connectToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectToRemoteHost(const QString &remoteHost, quint16 remotePort);$/;"	p	class:TorSocket	access:public	signature:(const QString &remoteHost, quint16 remotePort)
TorSocket::connectedToProxy	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::connectedToProxy()$/;"	f	class:TorSocket	signature:()
TorSocket::connectedToProxy	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectedToProxy();$/;"	p	class:TorSocket	access:private	signature:()
TorSocket::connectedToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectedToRemoteHost();$/;"	p	class:TorSocket	access:public	signature:()
TorSocket::onError	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::onError(QAbstractSocket::SocketError error)$/;"	f	class:TorSocket	signature:(QAbstractSocket::SocketError error)
TorSocket::onError	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void onError(QAbstractSocket::SocketError error);$/;"	p	class:TorSocket	access:private	signature:(QAbstractSocket::SocketError error)
TorSocket::onHandshakeResponse	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::onHandshakeResponse()$/;"	f	class:TorSocket	signature:()
TorSocket::onHandshakeResponse	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void onHandshakeResponse();$/;"	p	class:TorSocket	access:private	signature:()
TorSocket::sendSocksHandshake	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::sendSocksHandshake(const QString &remoteHost, quint16 remotePort)$/;"	f	class:TorSocket	signature:(const QString &remoteHost, quint16 remotePort)
TorSocket::sendSocksHandshake	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void sendSocksHandshake(const QString &remoteHost, quint16 remotePort);$/;"	p	class:TorSocket	access:private	signature:(const QString &remoteHost, quint16 remotePort)
TorSocket::socketError	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void socketError(QString errmsg);$/;"	p	class:TorSocket	access:public	signature:(QString errmsg)
TorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  enum TorStatus {$/;"	g	class:MainWindow	access:private
TorVersionStatus	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum TorVersionStatus {$/;"	g	namespace:tc
Tora	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/bridges.html	/^do znanych przeka≈∫nik√≥w Tora, prawdopodobnie nie bƒôdzie zdolny zablokowaƒá$/;"	v
Torrc	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::Torrc(const QString &torrcPath, const QString &defaultsPath) :$/;"	f	class:Torrc	signature:(const QString &torrcPath, const QString &defaultsPath)
Torrc	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  Torrc(const QString &torrcPath, const QString &defaultsPath = "");$/;"	p	class:Torrc	access:public	signature:(const QString &torrcPath, const QString &defaultsPath = ”)
Torrc	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^class Torrc {$/;"	c
Torrc::Torrc	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::Torrc(const QString &torrcPath, const QString &defaultsPath) :$/;"	f	class:Torrc	signature:(const QString &torrcPath, const QString &defaultsPath)
Torrc::Torrc	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  Torrc(const QString &torrcPath, const QString &defaultsPath = "");$/;"	p	class:Torrc	access:public	signature:(const QString &torrcPath, const QString &defaultsPath = ”)
Torrc::_defaultsMap	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QMap<QString, QPair<QString,TorOpt> > _defaultsMap;$/;"	m	class:Torrc	access:private
Torrc::_lines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QList<TorrcLine *> _lines;$/;"	m	class:Torrc	access:private
Torrc::_parser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  TorrcParser _parser;$/;"	m	class:Torrc	access:private
Torrc::_torrcMap	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QMap<QString, QPair<QString,TorOpt> > _torrcMap;$/;"	m	class:Torrc	access:private
Torrc::_torrcPath	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QString _torrcPath;$/;"	m	class:Torrc	access:private
Torrc::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::apply(TorControl *tc, QString *errmsg)$/;"	f	class:Torrc	signature:(TorControl *tc, QString *errmsg)
Torrc::apply	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool apply(TorControl *tc = 0, QString *errmsg = 0);$/;"	p	class:Torrc	access:public	signature:(TorControl *tc = 0, QString *errmsg = 0)
Torrc::changed	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool changed;$/;"	m	class:Torrc	access:private
Torrc::clear	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::clear(QStringList &keys)$/;"	f	class:Torrc	signature:(QStringList &keys)
Torrc::clear	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void clear(QStringList &keys);$/;"	p	class:Torrc	access:public	signature:(QStringList &keys)
Torrc::clearAll	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::clearAll()$/;"	f	class:Torrc	signature:()
Torrc::clearAll	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void clearAll();$/;"	p	class:Torrc	access:public	signature:()
Torrc::getTorrcPath	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QString getTorrcPath() const$/;"	f	class:Torrc	access:public	signature:() const
Torrc::isValid	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::isValid(const QString &key, const QString &value)$/;"	f	class:Torrc	signature:(const QString &key, const QString &value)
Torrc::isValid	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool isValid(const QString &key, const QString &value);$/;"	p	class:Torrc	access:public	signature:(const QString &key, const QString &value)
Torrc::load	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::load(const QString &torrcPath, const QString &defaultsPath)$/;"	f	class:Torrc	signature:(const QString &torrcPath, const QString &defaultsPath)
Torrc::load	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void load(const QString &torrcPath, const QString &defaultsPath = "");$/;"	p	class:Torrc	access:public	signature:(const QString &torrcPath, const QString &defaultsPath = ”)
Torrc::setRawContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::setRawContents(const QString &contents, QString *errmsg, TorControl *tc)$/;"	f	class:Torrc	signature:(const QString &contents, QString *errmsg, TorControl *tc)
Torrc::setRawContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool setRawContents(const QString &contents, QString *errmsg, TorControl *tc = 0);$/;"	p	class:Torrc	access:public	signature:(const QString &contents, QString *errmsg, TorControl *tc = 0)
Torrc::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::setValue(const QString &key, const QString &value, const QString &comment)$/;"	f	class:Torrc	signature:(const QString &key, const QString &value, const QString &comment)
Torrc::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void setValue(const QString &key, const QString &value, const QString &comment = "");$/;"	p	class:Torrc	access:public	signature:(const QString &key, const QString &value, const QString &comment = ”)
Torrc::value	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::value(const QString &key) const$/;"	f	class:Torrc	signature:(const QString &key) const
Torrc::value	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QStringList value(const QString &key) const;$/;"	p	class:Torrc	access:public	signature:(const QString &key) const
TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::TorrcDialog(QWidget *parent)$/;"	f	class:TorrcDialog	signature:(QWidget *parent)
TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  TorrcDialog(QWidget *parent = 0);$/;"	p	class:TorrcDialog	access:public	signature:(QWidget *parent = 0)
TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^class TorrcDialog : public QDialog$/;"	c	inherits:QDialog
TorrcDialog::TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::TorrcDialog(QWidget *parent)$/;"	f	class:TorrcDialog	signature:(QWidget *parent)
TorrcDialog::TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  TorrcDialog(QWidget *parent = 0);$/;"	p	class:TorrcDialog	access:public	signature:(QWidget *parent = 0)
TorrcDialog::loadToolBar	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::loadToolBar()$/;"	f	class:TorrcDialog	signature:()
TorrcDialog::loadToolBar	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void loadToolBar();$/;"	p	class:TorrcDialog	access:private	signature:()
TorrcDialog::loadTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::loadTorrc()$/;"	f	class:TorrcDialog	signature:()
TorrcDialog::loadTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void loadTorrc();$/;"	p	class:TorrcDialog	access:private	signature:()
TorrcDialog::parseAndSet	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::parseAndSet(QString *errmsg)$/;"	f	class:TorrcDialog	signature:(QString *errmsg)
TorrcDialog::parseAndSet	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  bool parseAndSet(QString *errmsg = 0);$/;"	p	class:TorrcDialog	access:private	signature:(QString *errmsg = 0)
TorrcDialog::saveTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::saveTorrc()$/;"	f	class:TorrcDialog	signature:()
TorrcDialog::saveTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void saveTorrc();$/;"	p	class:TorrcDialog	access:private	signature:()
TorrcDialog::tc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  TorControl *tc;$/;"	m	class:TorrcDialog	access:private
TorrcDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  Ui::TorrcDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:TorrcDialog	access:private
TorrcDialog::~TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::~TorrcDialog()$/;"	f	class:TorrcDialog	signature:()
TorrcDialog::~TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  ~TorrcDialog();$/;"	p	class:TorrcDialog	access:public	signature:()
TorrcLine	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine(const QString &content = "", const QString &comment = "")$/;"	f	class:TorrcLine	access:public	signature:(const QString &content = ”, const QString &comment = ”)
TorrcLine	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^class TorrcLine$/;"	c
TorrcLine::TorrcLine	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine(const QString &content = "", const QString &comment = "")$/;"	f	class:TorrcLine	access:public	signature:(const QString &content = ”, const QString &comment = ”)
TorrcLine::_comment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _content, _comment;$/;"	m	class:TorrcLine	access:private
TorrcLine::_content	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _content, _comment;$/;"	m	class:TorrcLine	access:private
TorrcLine::comment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString comment()$/;"	f	class:TorrcLine	access:public	signature:()
TorrcLine::content	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString content()$/;"	f	class:TorrcLine	access:public	signature:()
TorrcLine::isMultilined	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultilined()$/;"	f	class:TorrcLine	access:public	signature:()
TorrcLine::setComment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setComment(const QString &comment)$/;"	f	class:TorrcLine	access:public	signature:(const QString &comment)
TorrcLine::setContent	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setContent(const QString &content)$/;"	f	class:TorrcLine	access:public	signature:(const QString &content)
TorrcParser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::TorrcParser()$/;"	f	class:TorrcParser	signature:()
TorrcParser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcParser();$/;"	p	class:TorrcParser	access:public	signature:()
TorrcParser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^class TorrcParser$/;"	c
TorrcParser::TorrcParser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::TorrcParser()$/;"	f	class:TorrcParser	signature:()
TorrcParser::TorrcParser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcParser();$/;"	p	class:TorrcParser	access:public	signature:()
TorrcParser::_regexp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QRegExp _regexp;$/;"	m	class:TorrcParser	access:private
TorrcParser::_torOpts	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorOpt> _torOpts;$/;"	m	class:TorrcParser	access:private
TorrcParser::createRegExp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::createRegExp()$/;"	f	class:TorrcParser	signature:()
TorrcParser::createRegExp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QRegExp createRegExp();$/;"	p	class:TorrcParser	access:private	signature:()
TorrcParser::findValueLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::findValueLines(TorrcLine *line,$/;"	f	class:TorrcParser	signature:(TorrcLine *line, const QList<TorrcLine *> &lines) const
TorrcParser::findValueLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> findValueLines(TorrcLine *line,$/;"	p	class:TorrcParser	access:private	signature:(TorrcLine *line, const QList<TorrcLine *> &lines) const
TorrcParser::getTorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::getTorOpt(const QString &name)$/;"	f	class:TorrcParser	signature:(const QString &name)
TorrcParser::getTorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorOpt getTorOpt(const QString &name);$/;"	p	class:TorrcParser	access:public	signature:(const QString &name)
TorrcParser::isKeyword	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::isKeyword(const QString &contents, int pos)$/;"	f	class:TorrcParser	signature:(const QString &contents, int pos)
TorrcParser::isKeyword	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isKeyword(const QString &contents, int pos);$/;"	p	class:TorrcParser	access:private	signature:(const QString &contents, int pos)
TorrcParser::parse	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::parse(const QString &path,$/;"	f	class:TorrcParser	signature:(const QString &path, QMap<QString, QPair<QString, TorOpt> > &map)
TorrcParser::parse	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> parse(const QString &path,$/;"	p	class:TorrcParser	access:public	signature:(const QString &path, QMap<QString, QPair<QString, TorOpt> > &map)
TorrcParser::stripContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::stripContents(QString contents)$/;"	f	class:TorrcParser	signature:(QString contents)
TorrcParser::stripContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString stripContents(QString contents);$/;"	p	class:TorrcParser	access:private	signature:(QString contents)
TorrcParser::toTorrcLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::toTorrcLines(QString contents)$/;"	f	class:TorrcParser	signature:(QString contents)
TorrcParser::toTorrcLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> toTorrcLines(QString contents);$/;"	p	class:TorrcParser	access:private	signature:(QString contents)
TraverseCallback	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^typedef void (*TraverseCallback)(void *cbdata, QDomElement e);$/;"	t	file:
Tray	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Tray,$/;"	e	enum:VidaliaSettings::IconPosition
TypeColumn	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^    TypeColumn    = 1, \/**< Message severity type column. *\/$/;"	e	enum:LogTreeWidget::LogColumns
UINT_MAX	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^#define UINT_MAX /;"	d	file:
UNIX_PATH_LEN	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^#define UNIX_PATH_LEN /;"	d	file:
UNKNOWN_EXIT_CODE	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^#define UNKNOWN_EXIT_CODE /;"	d	file:
UNSIGNED_INTEGER	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define UNSIGNED_INTEGER /;"	d
UPNPCOMMAND_INVALID_ARGS	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define UPNPCOMMAND_INVALID_ARGS /;"	d
UPNPCOMMAND_SUCCESS	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define UPNPCOMMAND_SUCCESS /;"	d
UPNPCOMMAND_UNKNOWN_ERROR	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define UPNPCOMMAND_UNKNOWN_ERROR /;"	d
UPNPCONTROL_DISCOVER_TIMEOUT	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  static const int UPNPCONTROL_DISCOVER_TIMEOUT = 2000;$/;"	m	class:UPNPControlThread	access:public
UPNPCONTROL_MAX_WAIT_MSEC	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^#define UPNPCONTROL_MAX_WAIT_MSEC /;"	d	file:
UPNPCONTROL_REINIT_MSEC	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^#define UPNPCONTROL_REINIT_MSEC /;"	d	file:
UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::UPNPControl()$/;"	f	class:UPNPControl	signature:()
UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPControl();$/;"	p	class:UPNPControl	access:protected	signature:()
UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^class UPNPControl : public QObject$/;"	c	inherits:QObject
UPNPControl::AddPortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    AddPortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::DeletePortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    DeletePortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::DiscoverState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    DiscoverState,$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::ErrorState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    ErrorState,$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::ForwardingCompleteState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    ForwardingCompleteState$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::GetPortMappingFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    GetPortMappingFailed,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::IdleState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    IdleState,$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::NoUPNPDevicesFound	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    NoUPNPDevicesFound,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::NoValidIGDsFound	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    NoValidIGDsFound,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::Success	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    Success,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::UPNPControl()$/;"	f	class:UPNPControl	signature:()
UPNPControl::UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPControl();$/;"	p	class:UPNPControl	access:protected	signature:()
UPNPControl::UPNPError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  enum UPNPError {$/;"	g	class:UPNPControl	access:public
UPNPControl::UPNPState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  enum UPNPState {$/;"	g	class:UPNPControl	access:public
UPNPControl::UnknownError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UnknownError$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::UpdatingDirPortState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UpdatingDirPortState,$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::UpdatingORPortState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UpdatingORPortState,$/;"	e	enum:UPNPControl::UPNPState
UPNPControl::WSAStartupFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    WSAStartupFailed,$/;"	e	enum:UPNPControl::UPNPError
UPNPControl::_controlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPControlThread* _controlThread; \/**< Thread used for UPnP operations. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPError _error; \/**< Most recent UPNP error. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_forwardedDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  quint16 _forwardedDirPort; \/**< Currently forwarded DirPort. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_forwardedORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  quint16 _forwardedORPort; \/**< Currently forwarded ORPort. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl* UPNPControl::_instance = 0;$/;"	m	class:UPNPControl	file:
UPNPControl::_instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static UPNPControl* _instance; \/**< UPNPControl singleton instance. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_mutex	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  QMutex* _mutex; \/**< Mutex around variables shared with UPNPControlThread. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::_state	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPState _state; \/**< Current UPNP status. *\/$/;"	m	class:UPNPControl	access:private
UPNPControl::cleanup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::cleanup()$/;"	f	class:UPNPControl	signature:()
UPNPControl::cleanup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static void cleanup();$/;"	p	class:UPNPControl	access:public	signature:()
UPNPControl::discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::discoverTimeout() const$/;"	f	class:UPNPControl	signature:() const
UPNPControl::discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  int discoverTimeout() const;$/;"	p	class:UPNPControl	access:public	signature:() const
UPNPControl::error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::error() const$/;"	f	class:UPNPControl	signature:() const
UPNPControl::error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPError error() const;$/;"	p	class:UPNPControl	access:public	signature:() const
UPNPControl::error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void error(UPNPControl::UPNPError error);$/;"	p	class:UPNPControl	access:public	signature:(UPNPControl::UPNPError error)
UPNPControl::errorString	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::errorString() const$/;"	f	class:UPNPControl	signature:() const
UPNPControl::errorString	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  QString errorString() const;$/;"	p	class:UPNPControl	access:public	signature:() const
UPNPControl::getDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::getDesiredState(quint16 *desiredDirPort, quint16 *desiredOrPort)$/;"	f	class:UPNPControl	signature:(quint16 *desiredDirPort, quint16 *desiredOrPort)
UPNPControl::getDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void getDesiredState(quint16 *desiredDirPort, quint16 *desiredOrPort);$/;"	p	class:UPNPControl	access:public	signature:(quint16 *desiredDirPort, quint16 *desiredOrPort)
UPNPControl::instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl* UPNPControl::instance()$/;"	f	class:UPNPControl	signature:()
UPNPControl::instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static UPNPControl* instance();$/;"	p	class:UPNPControl	access:public	signature:()
UPNPControl::setDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setDesiredState(quint16 desiredDirPort, quint16 desiredOrPort)$/;"	f	class:UPNPControl	signature:(quint16 desiredDirPort, quint16 desiredOrPort)
UPNPControl::setDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setDesiredState(quint16 desiredDirPort, quint16 desiredOrPort);$/;"	p	class:UPNPControl	access:public	signature:(quint16 desiredDirPort, quint16 desiredOrPort)
UPNPControl::setError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setError(UPNPError upnpError)$/;"	f	class:UPNPControl	signature:(UPNPError upnpError)
UPNPControl::setError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setError(UPNPError error);$/;"	p	class:UPNPControl	access:protected	signature:(UPNPError error)
UPNPControl::setState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setState(UPNPState state)$/;"	f	class:UPNPControl	signature:(UPNPState state)
UPNPControl::setState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setState(UPNPState state);$/;"	p	class:UPNPControl	access:protected	signature:(UPNPState state)
UPNPControl::stateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void stateChanged(UPNPControl::UPNPState state);$/;"	p	class:UPNPControl	access:public	signature:(UPNPControl::UPNPState state)
UPNPControl::~UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::~UPNPControl()$/;"	f	class:UPNPControl	signature:()
UPNPControl::~UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  ~UPNPControl();$/;"	p	class:UPNPControl	access:protected	signature:()
UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::UPNPControlThread(UPNPControl *control)$/;"	f	class:UPNPControlThread	signature:(UPNPControl *control)
UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControlThread(UPNPControl *control);$/;"	p	class:UPNPControlThread	access:public	signature:(UPNPControl *control)
UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^class UPNPControlThread : public QThread$/;"	c	inherits:QThread
UPNPControlThread::UPNPCONTROL_DISCOVER_TIMEOUT	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  static const int UPNPCONTROL_DISCOVER_TIMEOUT = 2000;$/;"	m	class:UPNPControlThread	access:public
UPNPControlThread::UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::UPNPControlThread(UPNPControl *control)$/;"	f	class:UPNPControlThread	signature:(UPNPControl *control)
UPNPControlThread::UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControlThread(UPNPControl *control);$/;"	p	class:UPNPControlThread	access:public	signature:(UPNPControl *control)
UPNPControlThread::_control	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl *_control; \/**< Stores desired UPnP state. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_dirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  quint16 _dirPort; \/**< Desired DirPort. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_keepRunning	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  bool _keepRunning; \/**< True if the control thread should keep running. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_orPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  quint16 _orPort; \/**< Desired ORPort. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_upnpInitialized	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QTime _upnpInitialized; \/**< Time at which the UPnP state was last set. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_waitCondition	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QWaitCondition *_waitCondition; \/**< Used to wake up the control thread. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::_waitMutex	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QMutex *_waitMutex; \/**< Mutex around shared variables. *\/$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::configurePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::configurePorts()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::configurePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void configurePorts();$/;"	p	class:UPNPControlThread	access:private	signature:()
UPNPControlThread::data	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  struct IGDdatas data;$/;"	m	class:UPNPControlThread	typeref:struct:UPNPControlThread::IGDdatas	access:private
UPNPControlThread::disablePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::disablePort(quint16 port)$/;"	f	class:UPNPControlThread	signature:(quint16 port)
UPNPControlThread::disablePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError disablePort(quint16 port);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 port)
UPNPControlThread::forwardPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::forwardPort(quint16 port)$/;"	f	class:UPNPControlThread	signature:(quint16 port)
UPNPControlThread::forwardPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError forwardPort(quint16 port);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 port)
UPNPControlThread::initializeUPNP	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::initializeUPNP()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::initializeUPNP	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError initializeUPNP();$/;"	p	class:UPNPControlThread	access:private	signature:()
UPNPControlThread::lanaddr	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  char lanaddr[16];$/;"	m	class:UPNPControlThread	access:private
UPNPControlThread::run	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::run()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::run	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void run();$/;"	p	class:UPNPControlThread	access:protected	signature:()
UPNPControlThread::stop	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::stop()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::stop	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void stop();$/;"	p	class:UPNPControlThread	access:public	signature:()
UPNPControlThread::updatePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::updatePort(quint16 oldPort, quint16 newPort)$/;"	f	class:UPNPControlThread	signature:(quint16 oldPort, quint16 newPort)
UPNPControlThread::updatePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError updatePort(quint16 oldPort, quint16 newPort);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 oldPort, quint16 newPort)
UPNPControlThread::urls	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  struct UPNPUrls urls;$/;"	m	class:UPNPControlThread	typeref:struct:UPNPControlThread::UPNPUrls	access:private
UPNPControlThread::wakeup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::wakeup()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::wakeup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void wakeup();$/;"	p	class:UPNPControlThread	access:public	signature:()
UPNPControlThread::~UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::~UPNPControlThread()$/;"	f	class:UPNPControlThread	signature:()
UPNPControlThread::~UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  ~UPNPControlThread();$/;"	p	class:UPNPControlThread	access:public	signature:()
UPNPDev	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNPDev {$/;"	s
UPNPDev::buffer	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char buffer[2];$/;"	m	struct:UPNPDev	access:public
UPNPDev::descURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * descURL;$/;"	m	struct:UPNPDev	access:public
UPNPDev::pNext	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	struct UPNPDev * pNext;$/;"	m	struct:UPNPDev	typeref:struct:UPNPDev::UPNPDev	access:public
UPNPDev::st	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * st;$/;"	m	struct:UPNPDev	access:public
UPNPError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  enum UPNPError {$/;"	g	class:UPNPControl	access:public
UPNPIGD_IsConnected	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^UPNPIGD_IsConnected(struct UPNPUrls * urls, struct IGDdatas * data)$/;"	f	signature:(struct UPNPUrls * urls, struct IGDdatas * data)
UPNPIGD_IsConnected	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC int UPNPIGD_IsConnected(struct UPNPUrls *, struct IGDdatas *);$/;"	p	signature:(struct UPNPUrls *, struct IGDdatas *)
UPNPState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  enum UPNPState {$/;"	g	class:UPNPControl	access:public
UPNPTestDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::UPNPTestDialog(quint16 orPort, quint16 dirPort, QWidget *parent)$/;"	f	class:UPNPTestDialog	signature:(quint16 orPort, quint16 dirPort, QWidget *parent)
UPNPTestDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  UPNPTestDialog(quint16 orPort, quint16 dirPort, QWidget *parent = 0);$/;"	p	class:UPNPTestDialog	access:public	signature:(quint16 orPort, quint16 dirPort, QWidget *parent = 0)
UPNPTestDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^class UPNPTestDialog : public QDialog$/;"	c	inherits:QDialog
UPNPTestDialog::UPNPTestDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::UPNPTestDialog(quint16 orPort, quint16 dirPort, QWidget *parent)$/;"	f	class:UPNPTestDialog	signature:(quint16 orPort, quint16 dirPort, QWidget *parent)
UPNPTestDialog::UPNPTestDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  UPNPTestDialog(quint16 orPort, quint16 dirPort, QWidget *parent = 0);$/;"	p	class:UPNPTestDialog	access:public	signature:(quint16 orPort, quint16 dirPort, QWidget *parent = 0)
UPNPTestDialog::_dirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _dirPort;    \/**< DirPort used during the test. *\/$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::_discoverTimer	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  QTimer _discoverTimer;$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::_oldDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _oldDirPort; \/**< Original (pre-test) forwarded DirPort. *\/$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::_oldOrPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _oldOrPort;  \/**< Original (pre-test) forwarded ORPort. *\/$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::_orPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _orPort;     \/**< ORPort used during the test. *\/$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::_upnp	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  UPNPControl *_upnp;$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::clicked	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::clicked(QAbstractButton *button)$/;"	f	class:UPNPTestDialog	signature:(QAbstractButton *button)
UPNPTestDialog::clicked	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void clicked(QAbstractButton *button);$/;"	p	class:UPNPTestDialog	access:protected	signature:(QAbstractButton *button)
UPNPTestDialog::discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::discoverTimeout()$/;"	f	class:UPNPTestDialog	signature:()
UPNPTestDialog::discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void discoverTimeout();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
UPNPTestDialog::help	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void help();$/;"	p	class:UPNPTestDialog	access:public	signature:()
UPNPTestDialog::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::setVisible(bool visible)$/;"	f	class:UPNPTestDialog	signature:(bool visible)
UPNPTestDialog::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void setVisible(bool visible);$/;"	p	class:UPNPTestDialog	access:protected	signature:(bool visible)
UPNPTestDialog::startTest	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::startTest()$/;"	f	class:UPNPTestDialog	signature:()
UPNPTestDialog::startTest	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void startTest();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
UPNPTestDialog::testFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::testFailed()$/;"	f	class:UPNPTestDialog	signature:()
UPNPTestDialog::testFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void testFailed();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
UPNPTestDialog::testSuccessful	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::testSuccessful()$/;"	f	class:UPNPTestDialog	signature:()
UPNPTestDialog::testSuccessful	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void testSuccessful();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
UPNPTestDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  Ui::UPNPTestDialog ui;$/;"	m	class:UPNPTestDialog	access:private
UPNPTestDialog::upnpStateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::upnpStateChanged(UPNPControl::UPNPState state)$/;"	f	class:UPNPTestDialog	signature:(UPNPControl::UPNPState state)
UPNPTestDialog::upnpStateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void upnpStateChanged(UPNPControl::UPNPState state);$/;"	p	class:UPNPTestDialog	access:protected	signature:(UPNPControl::UPNPState state)
UPNPUrls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNPUrls {$/;"	s
UPNPUrls::controlURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * controlURL;$/;"	m	struct:UPNPUrls	access:public
UPNPUrls::controlURL_CIF	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * controlURL_CIF;$/;"	m	struct:UPNPUrls	access:public
UPNPUrls::ipcondescURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * ipcondescURL;$/;"	m	struct:UPNPUrls	access:public
UPNP_AddPortMapping	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_AddPortMapping(const char * controlURL, const char * servicetype,$/;"	f	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * inPort, const char * inClient, const char * desc, const char * proto, const char * remoteHost)
UPNP_AddPortMapping	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_AddPortMapping(const char * controlURL, const char * servicetype,$/;"	p	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * inPort, const char * inClient, const char * desc, const char * proto, const char * remoteHost)
UPNP_DeletePortMapping	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_DeletePortMapping(const char * controlURL, const char * servicetype,$/;"	f	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * proto, const char * remoteHost)
UPNP_DeletePortMapping	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_DeletePortMapping(const char * controlURL, const char * servicetype,$/;"	p	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * proto, const char * remoteHost)
UPNP_GetConnectionTypeInfo	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetConnectionTypeInfo(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, char * connectionType)
UPNP_GetConnectionTypeInfo	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetConnectionTypeInfo(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype, char * connectionType)
UPNP_GetExternalIPAddress	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetExternalIPAddress(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, char * extIpAdd)
UPNP_GetExternalIPAddress	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetExternalIPAddress(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype, char * extIpAdd)
UPNP_GetGenericPortMappingEntry	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetGenericPortMappingEntry(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, const char * index, char * extPort, char * intClient, char * intPort, char * protocol, char * desc, char * enabled, char * rHost, char * duration)
UPNP_GetGenericPortMappingEntry	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetGenericPortMappingEntry(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype, const char * index, char * extPort, char * intClient, char * intPort, char * protocol, char * desc, char * enabled, char * rHost, char * duration)
UPNP_GetIGDFromUrl	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^UPNP_GetIGDFromUrl(const char * rootdescurl,$/;"	f	signature:(const char * rootdescurl, struct UPNPUrls * urls, struct IGDdatas * data, char * lanaddr, int lanaddrlen)
UPNP_GetIGDFromUrl	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^UPNP_GetIGDFromUrl(const char * rootdescurl,$/;"	p	signature:(const char * rootdescurl, struct UPNPUrls * urls, struct IGDdatas * data, char * lanaddr, int lanaddrlen)
UPNP_GetLinkLayerMaxBitRates	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetLinkLayerMaxBitRates(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, unsigned int * bitrateDown, unsigned int* bitrateUp)
UPNP_GetLinkLayerMaxBitRates	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetLinkLayerMaxBitRates(const char* controlURL,$/;"	p	signature:(const char* controlURL, const char* servicetype, unsigned int * bitrateDown, unsigned int * bitrateUp)
UPNP_GetPortMappingNumberOfEntries	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetPortMappingNumberOfEntries(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, unsigned int * numEntries)
UPNP_GetPortMappingNumberOfEntries	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetPortMappingNumberOfEntries(const char* controlURL, const char* servicetype, unsigned int * num);$/;"	p	signature:(const char* controlURL, const char* servicetype, unsigned int * num)
UPNP_GetSpecificPortMappingEntry	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetSpecificPortMappingEntry(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * proto, char * intClient, char * intPort)
UPNP_GetSpecificPortMappingEntry	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetSpecificPortMappingEntry(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype, const char * extPort, const char * proto, char * intClient, char * intPort)
UPNP_GetStatusInfo	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetStatusInfo(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype, char * status, unsigned int * uptime, char * lastconnerror)
UPNP_GetStatusInfo	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetStatusInfo(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype, char * status, unsigned int * uptime, char * lastconnerror)
UPNP_GetTotalBytesReceived	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetTotalBytesReceived(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalBytesReceived	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetTotalBytesReceived(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalBytesSent	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetTotalBytesSent(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalBytesSent	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetTotalBytesSent(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalPacketsReceived	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetTotalPacketsReceived(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalPacketsReceived	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetTotalPacketsReceived(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalPacketsSent	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^UPNP_GetTotalPacketsSent(const char * controlURL,$/;"	f	signature:(const char * controlURL, const char * servicetype)
UPNP_GetTotalPacketsSent	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^UPNP_GetTotalPacketsSent(const char * controlURL,$/;"	p	signature:(const char * controlURL, const char * servicetype)
UPNP_GetValidIGD	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^UPNP_GetValidIGD(struct UPNPDev * devlist,$/;"	f	signature:(struct UPNPDev * devlist, struct UPNPUrls * urls, struct IGDdatas * data, char * lanaddr, int lanaddrlen)
UPNP_GetValidIGD	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^UPNP_GetValidIGD(struct UPNPDev * devlist,$/;"	p	signature:(struct UPNPDev * devlist, struct UPNPUrls * urls, struct IGDdatas * data, char * lanaddr, int lanaddrlen)
UPNP_MCAST_ADDR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define UPNP_MCAST_ADDR /;"	d	file:
UPNParg	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNParg { const char * elt; const char * val; };$/;"	s
UPNParg::elt	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNParg { const char * elt; const char * val; };$/;"	m	struct:UPNParg	access:public
UPNParg::val	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNParg { const char * elt; const char * val; };$/;"	m	struct:UPNParg	access:public
UPnPObject	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^} UPnPObject;$/;"	t	typeref:struct:__anon1	file:
UPnPObject_dealloc	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnPObject_dealloc(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnPType	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^static PyTypeObject UPnPType = {$/;"	v	file:
UPnP_addportmapping	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_addportmapping(UPnPObject *self, PyObject *args)$/;"	f	file:	signature:(UPnPObject *self, PyObject *args)
UPnP_connectiontype	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_connectiontype(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_deleteportmapping	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_deleteportmapping(UPnPObject *self, PyObject *args)$/;"	f	file:	signature:(UPnPObject *self, PyObject *args)
UPnP_discover	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_discover(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_externalipaddress	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_externalipaddress(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_getgenericportmapping	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_getgenericportmapping(UPnPObject *self, PyObject *args)$/;"	f	file:	signature:(UPnPObject *self, PyObject *args)
UPnP_getportmappingnumberofentries	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_getportmappingnumberofentries(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_getspecificportmapping	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_getspecificportmapping(UPnPObject *self, PyObject *args)$/;"	f	file:	signature:(UPnPObject *self, PyObject *args)
UPnP_members	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^static PyMemberDef UPnP_members[] = {$/;"	v	file:
UPnP_methods	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^static PyMethodDef UPnP_methods[] = {$/;"	v	file:
UPnP_selectigd	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_selectigd(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_statusinfo	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_statusinfo(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_totalbytereceived	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_totalbytereceived(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_totalbytesent	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_totalbytesent(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_totalpacketreceived	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_totalpacketreceived(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UPnP_totalpacketsent	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^UPnP_totalpacketsent(UPnPObject *self)$/;"	f	file:	signature:(UPnPObject *self)
UU	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/sb.png	/^ˇˇˇ/;"	v
Unknown	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Unknown     \/**< Unknown\/invalid log level. *\/$/;"	e	enum:Log::LogLevel
Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^    Unknown,   \/**< Unknown circuit status *\/$/;"	e	enum:Circuit::Status
Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Unknown = 0,$/;"	e	enum:LogEvent::Severity
Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Unknown      = 0x0000,$/;"	e	enum:RouterStatus::Flag
Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^    Unknown,      \/**< Unknown status type given *\/$/;"	e	enum:Stream::Status
Unknown	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^    Unknown       = 0,$/;"	e	enum:TorEvents::Event
UnknownAuth	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^    UnknownAuth    \/**< Unknown authentication method. *\/$/;"	e	enum:TorSettings::AuthenticationMethod
UnknownDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^    UnknownDatabase = 0,$/;"	e	enum:GeoIpDatabase::DatabaseType
UnknownError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UnknownError$/;"	e	enum:UPNPControl::UPNPError
UnknownSocksProtocolError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnknownSocksProtocolError, \/**< Unknown SOCKS protocol type. *\/$/;"	e	enum:tc::SocksError
UnrecognizedReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecognizedReason,$/;"	e	enum:tc::ConnectionStatusReason
UnrecognizedRecommendation	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    UnrecognizedRecommendation,$/;"	e	enum:BootstrapStatus::Recommendation
UnrecognizedSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecognizedSeverity = 0, \/**< An unrecognized severity value. *\/$/;"	e	enum:tc::Severity
UnrecognizedStatus	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^    UnrecognizedStatus,$/;"	e	enum:BootstrapStatus::Status
UnrecommendedTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecommendedTorVersion,$/;"	e	enum:tc::TorVersionStatus
Unset	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^    Unset,         \/**< Control connection status is not yet set. *\/$/;"	e	enum:ControlConnection::Status
Unset	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^    Unset,      \/**< Tor's status has not yet been set. *\/$/;"	e	enum:MainWindow::TorStatus
UpdateCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  enum UpdateCommand {$/;"	g	class:UpdateProcess	access:protected
UpdateProcess	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::UpdateProcess(QObject *parent)$/;"	f	class:UpdateProcess	signature:(QObject *parent)
UpdateProcess	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  UpdateProcess(QObject *parent = 0);$/;"	p	class:UpdateProcess	access:public	signature:(QObject *parent = 0)
UpdateProcess	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^class UpdateProcess : public QProcess$/;"	c	inherits:QProcess
UpdateProcess::BundleInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  enum BundleInfo {$/;"	g	class:UpdateProcess	access:public
UpdateProcess::CheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    CheckForUpdates,$/;"	e	enum:UpdateProcess::UpdateCommand
UpdateProcess::InstallUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    InstallUpdates,$/;"	e	enum:UpdateProcess::UpdateCommand
UpdateProcess::NoCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    NoCommand,$/;"	e	enum:UpdateProcess::UpdateCommand
UpdateProcess::TorBundleInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^    TorBundleInfo,$/;"	e	enum:UpdateProcess::BundleInfo
UpdateProcess::UpdateCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  enum UpdateCommand {$/;"	g	class:UpdateProcess	access:protected
UpdateProcess::UpdateProcess	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::UpdateProcess(QObject *parent)$/;"	f	class:UpdateProcess	signature:(QObject *parent)
UpdateProcess::UpdateProcess	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  UpdateProcess(QObject *parent = 0);$/;"	p	class:UpdateProcess	access:public	signature:(QObject *parent = 0)
UpdateProcess::_currentBundle	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  BundleInfo _currentBundle;$/;"	m	class:UpdateProcess	access:private
UpdateProcess::_currentCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  UpdateCommand _currentCommand;$/;"	m	class:UpdateProcess	access:private
UpdateProcess::_packageList	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  PackageList _packageList;$/;"	m	class:UpdateProcess	access:private
UpdateProcess::_socksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  quint16 _socksPort;$/;"	m	class:UpdateProcess	access:private
UpdateProcess::bundleInfoToString	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::bundleInfoToString(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
UpdateProcess::bundleInfoToString	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  QString bundleInfoToString(BundleInfo bundleInfo);$/;"	p	class:UpdateProcess	access:protected	signature:(BundleInfo bundleInfo)
UpdateProcess::cancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::cancel()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::cancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void cancel();$/;"	p	class:UpdateProcess	access:public	signature:()
UpdateProcess::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::checkForUpdates(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
UpdateProcess::checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void checkForUpdates(BundleInfo bi);$/;"	p	class:UpdateProcess	access:public	signature:(BundleInfo bi)
UpdateProcess::checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void checkForUpdatesFailed(QString errmsg);$/;"	p	class:UpdateProcess	access:public	signature:(QString errmsg)
UpdateProcess::checkForUpdatesInterval	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::checkForUpdatesInterval()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::checkForUpdatesInterval	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static int checkForUpdatesInterval();$/;"	p	class:UpdateProcess	access:public	signature:()
UpdateProcess::downloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void downloadProgress(QString url, int bytesReceived, int bytesTotal);$/;"	p	class:UpdateProcess	access:public	signature:(QString url, int bytesReceived, int bytesTotal)
UpdateProcess::installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::installUpdates(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
UpdateProcess::installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void installUpdates(BundleInfo bi);$/;"	p	class:UpdateProcess	access:public	signature:(BundleInfo bi)
UpdateProcess::installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void installUpdatesFailed(QString errmsg);$/;"	p	class:UpdateProcess	access:public	signature:(QString errmsg)
UpdateProcess::isRunning	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::isRunning() const$/;"	f	class:UpdateProcess	signature:() const
UpdateProcess::isRunning	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  bool isRunning() const;$/;"	p	class:UpdateProcess	access:public	signature:() const
UpdateProcess::nextCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::nextCheckForUpdates(const QDateTime &lastCheckedAt)$/;"	f	class:UpdateProcess	signature:(const QDateTime &lastCheckedAt)
UpdateProcess::nextCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QDateTime nextCheckForUpdates(const QDateTime &lastCheckedAt);$/;"	p	class:UpdateProcess	access:public	signature:(const QDateTime &lastCheckedAt)
UpdateProcess::onError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::onError(QProcess::ProcessError error)$/;"	f	class:UpdateProcess	signature:(QProcess::ProcessError error)
UpdateProcess::onError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:UpdateProcess	access:protected	signature:(QProcess::ProcessError error)
UpdateProcess::onFinished	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::onFinished(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:UpdateProcess	signature:(int exitCode, QProcess::ExitStatus exitStatus)
UpdateProcess::onFinished	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void onFinished(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:UpdateProcess	access:protected	signature:(int exitCode, QProcess::ExitStatus exitStatus)
UpdateProcess::packageInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::packageInfo(const QString &package)$/;"	f	class:UpdateProcess	signature:(const QString &package)
UpdateProcess::packageInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static PackageInfo packageInfo(const QString &package);$/;"	p	class:UpdateProcess	access:protected	signature:(const QString &package)
UpdateProcess::packageInfoFromXml	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::packageInfoFromXml(const QByteArray &xml)$/;"	f	class:UpdateProcess	signature:(const QByteArray &xml)
UpdateProcess::packageInfoFromXml	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static PackageInfo packageInfoFromXml(const QByteArray &xml);$/;"	p	class:UpdateProcess	access:protected	signature:(const QByteArray &xml)
UpdateProcess::readStandardError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::readStandardError()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::readStandardError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void readStandardError();$/;"	p	class:UpdateProcess	access:protected	signature:()
UpdateProcess::readStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::readStandardOutput()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::readStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void readStandardOutput();$/;"	p	class:UpdateProcess	access:protected	signature:()
UpdateProcess::setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::setSocksPort(quint16 port)$/;"	f	class:UpdateProcess	signature:(quint16 port)
UpdateProcess::setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void setSocksPort(quint16 port);$/;"	p	class:UpdateProcess	access:public	signature:(quint16 port)
UpdateProcess::shouldCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::shouldCheckForUpdates(const QDateTime &lastCheckedAt)$/;"	f	class:UpdateProcess	signature:(const QDateTime &lastCheckedAt)
UpdateProcess::shouldCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static bool shouldCheckForUpdates(const QDateTime &lastCheckedAt);$/;"	p	class:UpdateProcess	access:public	signature:(const QDateTime &lastCheckedAt)
UpdateProcess::updateExecutable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::updateExecutable()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::updateExecutable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QString updateExecutable();$/;"	p	class:UpdateProcess	access:public	signature:()
UpdateProcess::updateRepositoryDir	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::updateRepositoryDir()$/;"	f	class:UpdateProcess	signature:()
UpdateProcess::updateRepositoryDir	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QString updateRepositoryDir();$/;"	p	class:UpdateProcess	access:public	signature:()
UpdateProcess::updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void updatesAvailable(UpdateProcess::BundleInfo bi, PackageList packages);$/;"	p	class:UpdateProcess	access:public	signature:(UpdateProcess::BundleInfo bi, PackageList packages)
UpdateProcess::updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void updatesInstalled(int nPackagesInstalled);$/;"	p	class:UpdateProcess	access:public	signature:(int nPackagesInstalled)
UpdateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::UpdateProgressDialog(QWidget *parent)$/;"	f	class:UpdateProgressDialog	signature:(QWidget *parent)
UpdateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  UpdateProgressDialog(QWidget *parent = 0);$/;"	p	class:UpdateProgressDialog	access:public	signature:(QWidget *parent = 0)
UpdateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^class UpdateProgressDialog : public QDialog$/;"	c	inherits:QDialog
UpdateProgressDialog::CheckingForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    CheckingForUpdates,$/;"	e	enum:UpdateProgressDialog::Status
UpdateProgressDialog::DownloadingUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    DownloadingUpdates,$/;"	e	enum:UpdateProgressDialog::Status
UpdateProgressDialog::InstallingUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    InstallingUpdates,$/;"	e	enum:UpdateProgressDialog::Status
UpdateProgressDialog::Status	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  enum Status {$/;"	g	class:UpdateProgressDialog	access:public
UpdateProgressDialog::UpdateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::UpdateProgressDialog(QWidget *parent)$/;"	f	class:UpdateProgressDialog	signature:(QWidget *parent)
UpdateProgressDialog::UpdateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  UpdateProgressDialog(QWidget *parent = 0);$/;"	p	class:UpdateProgressDialog	access:public	signature:(QWidget *parent = 0)
UpdateProgressDialog::UpdatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    UpdatesInstalled,$/;"	e	enum:UpdateProgressDialog::Status
UpdateProgressDialog::cancelUpdate	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void cancelUpdate();$/;"	p	class:UpdateProgressDialog	access:public	signature:()
UpdateProgressDialog::onCancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::onCancel()$/;"	f	class:UpdateProgressDialog	signature:()
UpdateProgressDialog::onCancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void onCancel();$/;"	p	class:UpdateProgressDialog	access:private	signature:()
UpdateProgressDialog::onHide	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::onHide()$/;"	f	class:UpdateProgressDialog	signature:()
UpdateProgressDialog::onHide	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void onHide();$/;"	p	class:UpdateProgressDialog	access:private	signature:()
UpdateProgressDialog::setDownloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::setDownloadProgress(const QString &url,$/;"	f	class:UpdateProgressDialog	signature:(const QString &url, int bytesReceived, int bytesTotal)
UpdateProgressDialog::setDownloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void setDownloadProgress(const QString &url,$/;"	p	class:UpdateProgressDialog	access:public	signature:(const QString &url, int bytesReceived, int bytesTotal)
UpdateProgressDialog::setStatus	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::setStatus(UpdateProgressDialog::Status status)$/;"	f	class:UpdateProgressDialog	signature:(UpdateProgressDialog::Status status)
UpdateProgressDialog::setStatus	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void setStatus(UpdateProgressDialog::Status status);$/;"	p	class:UpdateProgressDialog	access:public	signature:(UpdateProgressDialog::Status status)
UpdateProgressDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  Ui::UpdateProgressDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:UpdateProgressDialog	access:private
UpdatesAvailableDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::UpdatesAvailableDialog(const PackageList &packageList,$/;"	f	class:UpdatesAvailableDialog	signature:(const PackageList &packageList, QWidget *parent)
UpdatesAvailableDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  UpdatesAvailableDialog(const PackageList &packageList, QWidget *parent = 0);$/;"	p	class:UpdatesAvailableDialog	access:public	signature:(const PackageList &packageList, QWidget *parent = 0)
UpdatesAvailableDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^class UpdatesAvailableDialog : public QDialog$/;"	c	inherits:QDialog
UpdatesAvailableDialog::InstallUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^    InstallUpdatesLater = 101,$/;"	e	enum:UpdatesAvailableDialog::UpdatesAvailableDialogExitCode
UpdatesAvailableDialog::InstallUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^    InstallUpdatesNow   = 100,$/;"	e	enum:UpdatesAvailableDialog::UpdatesAvailableDialogExitCode
UpdatesAvailableDialog::UpdatesAvailableDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::UpdatesAvailableDialog(const PackageList &packageList,$/;"	f	class:UpdatesAvailableDialog	signature:(const PackageList &packageList, QWidget *parent)
UpdatesAvailableDialog::UpdatesAvailableDialog	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  UpdatesAvailableDialog(const PackageList &packageList, QWidget *parent = 0);$/;"	p	class:UpdatesAvailableDialog	access:public	signature:(const PackageList &packageList, QWidget *parent = 0)
UpdatesAvailableDialog::UpdatesAvailableDialogExitCode	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  enum UpdatesAvailableDialogExitCode {$/;"	g	class:UpdatesAvailableDialog	access:public
UpdatesAvailableDialog::currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::currentItemChanged(QTreeWidgetItem *current,$/;"	f	class:UpdatesAvailableDialog	signature:(QTreeWidgetItem *current, QTreeWidgetItem *previous)
UpdatesAvailableDialog::currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous);$/;"	p	class:UpdatesAvailableDialog	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *previous)
UpdatesAvailableDialog::installUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::installUpdatesLater()$/;"	f	class:UpdatesAvailableDialog	signature:()
UpdatesAvailableDialog::installUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void installUpdatesLater();$/;"	p	class:UpdatesAvailableDialog	access:private	signature:()
UpdatesAvailableDialog::installUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::installUpdatesNow()$/;"	f	class:UpdatesAvailableDialog	signature:()
UpdatesAvailableDialog::installUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void installUpdatesNow();$/;"	p	class:UpdatesAvailableDialog	access:private	signature:()
UpdatesAvailableDialog::loadPackagesTable	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::loadPackagesTable(const PackageList &packageList)$/;"	f	class:UpdatesAvailableDialog	signature:(const PackageList &packageList)
UpdatesAvailableDialog::loadPackagesTable	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void loadPackagesTable(const PackageList &packageList);$/;"	p	class:UpdatesAvailableDialog	access:private	signature:(const PackageList &packageList)
UpdatesAvailableDialog::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::showEvent(QShowEvent *e)$/;"	f	class:UpdatesAvailableDialog	signature:(QShowEvent *e)
UpdatesAvailableDialog::showEvent	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  virtual void showEvent(QShowEvent *e);$/;"	p	class:UpdatesAvailableDialog	access:protected	signature:(QShowEvent *e)
UpdatesAvailableDialog::ui	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  Ui::UpdatesAvailableDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:UpdatesAvailableDialog	access:private
UpdatesAvailableDialogExitCode	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  enum UpdatesAvailableDialogExitCode {$/;"	g	class:UpdatesAvailableDialog	access:public
UpdatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^    UpdatesInstalled,$/;"	e	enum:UpdateProgressDialog::Status
UpdatingDirPortState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UpdatingDirPortState,$/;"	e	enum:UPNPControl::UPNPState
UpdatingORPortState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    UpdatingORPortState,$/;"	e	enum:UPNPControl::UPNPState
UserLocalData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^} UserLocalData;$/;"	t	typeref:struct:s_UserLocalData	file:
V2Dir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    V2Dir        = 0x0800,$/;"	e	enum:RouterStatus::Flag
V3Dir	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    V3Dir        = 0x1000$/;"	e	enum:RouterStatus::Flag
VALID_NICKNAME_CHARS	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.cpp	/^#define VALID_NICKNAME_CHARS /;"	d	file:
VALID_NICKNAME_CHARS	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^#define VALID_NICKNAME_CHARS /;"	d	file:
VATTACHBUTTON_H	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^#define VATTACHBUTTON_H$/;"	d
VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::VAttachButton(QWidget *parent) :$/;"	f	class:VAttachButton	signature:(QWidget *parent)
VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VAttachButton(QWidget *parent = 0);$/;"	p	class:VAttachButton	access:public	signature:(QWidget *parent = 0)
VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^class VAttachButton : public QPushButton {$/;"	c	inherits:QPushButton
VAttachButton::VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::VAttachButton(QWidget *parent) :$/;"	f	class:VAttachButton	signature:(QWidget *parent)
VAttachButton::VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VAttachButton(QWidget *parent = 0);$/;"	p	class:VAttachButton	access:public	signature:(QWidget *parent = 0)
VAttachButton::_attached	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    bool _attached;$/;"	m	class:VAttachButton	access:private
VAttachButton::_tab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VidaliaTab *_tab;$/;"	m	class:VAttachButton	access:private
VAttachButton::attachTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void attachTab();$/;"	p	class:VAttachButton	access:public	signature:()
VAttachButton::detachTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void detachTab();$/;"	p	class:VAttachButton	access:public	signature:()
VAttachButton::getTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::getTab()$/;"	f	class:VAttachButton	signature:()
VAttachButton::getTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VidaliaTab *getTab();$/;"	p	class:VAttachButton	access:public	signature:()
VAttachButton::setTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::setTab(VidaliaTab *tab)$/;"	f	class:VAttachButton	signature:(VidaliaTab *tab)
VAttachButton::setTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void setTab(VidaliaTab *tab);$/;"	p	class:VAttachButton	access:public	signature:(VidaliaTab *tab)
VAttachButton::toggleAttach	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::toggleAttach()$/;"	f	class:VAttachButton	signature:()
VAttachButton::toggleAttach	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void toggleAttach();$/;"	p	class:VAttachButton	access:public	signature:()
VAttachButton::~VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::~VAttachButton()$/;"	f	class:VAttachButton	signature:()
VAttachButton::~VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    ~VAttachButton();$/;"	p	class:VAttachButton	access:public	signature:()
VER_MAJOR	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MAJOR	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MAJOR	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MAJOR	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MINOR	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MINOR	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MINOR	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_MINOR	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_PATCH	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_PATCH	/Users/chiiph/Code/vidalia/src/crashreporter/res/CrashReporter.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_PATCH	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^FILEVERSION     @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VER_PATCH	/Users/chiiph/Code/vidalia/src/vidalia/res/vidalia_win.rc.in	/^PRODUCTVERSION  @VER_MAJOR@,@VER_MINOR@,@VER_PATCH@,0$/;"	v
VIDALIATABPROT_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^#define VIDALIATABPROT_H$/;"	d
VIDALIA_REG_KEY	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^#define VIDALIA_REG_KEY /;"	d	file:
VMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::VMessageBox(QWidget *parent)$/;"	f	class:VMessageBox	signature:(QWidget *parent)
VMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  VMessageBox(QWidget *parent = 0);$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent = 0)
VMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^class VMessageBox : public QMessageBox$/;"	c	inherits:QMessageBox
VMessageBox::Browse	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Browse$/;"	e	enum:VMessageBox::Button
VMessageBox::Button	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  enum Button {$/;"	g	class:VMessageBox	access:public
VMessageBox::Cancel	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Cancel,$/;"	e	enum:VMessageBox::Button
VMessageBox::Continue	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Continue,$/;"	e	enum:VMessageBox::Button
VMessageBox::Help	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Help,$/;"	e	enum:VMessageBox::Button
VMessageBox::No	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    No,$/;"	e	enum:VMessageBox::Button
VMessageBox::NoButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    NoButton = 0,$/;"	e	enum:VMessageBox::Button
VMessageBox::Ok	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Ok,$/;"	e	enum:VMessageBox::Button
VMessageBox::Quit	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Quit,$/;"	e	enum:VMessageBox::Button
VMessageBox::Retry	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Retry,$/;"	e	enum:VMessageBox::Button
VMessageBox::ShowLog	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    ShowLog,$/;"	e	enum:VMessageBox::Button
VMessageBox::ShowSettings	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    ShowSettings,$/;"	e	enum:VMessageBox::Button
VMessageBox::VMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::VMessageBox(QWidget *parent)$/;"	f	class:VMessageBox	signature:(QWidget *parent)
VMessageBox::VMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  VMessageBox(QWidget *parent = 0);$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent = 0)
VMessageBox::Yes	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Yes,$/;"	e	enum:VMessageBox::Button
VMessageBox::_chkRemember	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  QCheckBox *_chkRemember;$/;"	m	class:VMessageBox	access:private
VMessageBox::buttonText	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::buttonText(int btn)$/;"	f	class:VMessageBox	signature:(int btn)
VMessageBox::buttonText	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static QString buttonText(int button);$/;"	p	class:VMessageBox	access:public	signature:(int button)
VMessageBox::critical	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::critical(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
VMessageBox::critical	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int critical(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
VMessageBox::defaultButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::defaultButton(int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int button0, int button1, int button2)
VMessageBox::defaultButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int defaultButton(int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int button0, int button1, int button2)
VMessageBox::escapeButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::escapeButton(int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int button0, int button1, int button2)
VMessageBox::escapeButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int escapeButton(int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int button0, int button1, int button2)
VMessageBox::information	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::information(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
VMessageBox::information	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int information(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
VMessageBox::question	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::question(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2, QString remember, VSettings *settings, QString key)
VMessageBox::question	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int question(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton, QString remember = QString(), VSettings *settings = 0, QString key = QString())
VMessageBox::selected	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::selected(int ret, int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int ret, int button0, int button1, int button2)
VMessageBox::selected	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int selected(int ret, int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int ret, int button0, int button1, int button2)
VMessageBox::warning	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::warning(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
VMessageBox::warning	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int warning(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::VSettings(const QString settingsGroup)$/;"	f	class:VSettings	signature:(const QString settingsGroup)
VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  VSettings(const QString group = QString());$/;"	p	class:VSettings	access:public	signature:(const QString group = QString())
VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^class VSettings : public QSettings$/;"	c	inherits:QSettings
VSettings::VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::VSettings(const QString settingsGroup)$/;"	f	class:VSettings	signature:(const QString settingsGroup)
VSettings::VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  VSettings(const QString group = QString());$/;"	p	class:VSettings	access:public	signature:(const QString group = QString())
VSettings::_defaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QSettings *_defaultSettings;$/;"	m	class:VSettings	access:private
VSettings::_defaults	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QHash<QString, QVariant> _defaults;$/;"	m	class:VSettings	access:private
VSettings::_volatileSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QMap<QString, QVariant> _volatileSettings;$/;"	m	class:VSettings	access:private
VSettings::allSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::allSettings() const$/;"	f	class:VSettings	signature:() const
VSettings::allSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QMap<QString, QVariant> allSettings() const;$/;"	p	class:VSettings	access:protected	signature:() const
VSettings::defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::defaultValue(const QString &key) const$/;"	f	class:VSettings	signature:(const QString &key) const
VSettings::defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QVariant defaultValue(const QString &key) const;$/;"	p	class:VSettings	access:protected	signature:(const QString &key) const
VSettings::reset	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::reset()$/;"	f	class:VSettings	signature:()
VSettings::reset	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static void reset();$/;"	p	class:VSettings	access:public	signature:()
VSettings::setDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setDefault(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
VSettings::setDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  void setDefault(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &val)
VSettings::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setValue(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
VSettings::setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual void setValue(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:public	signature:(const QString &key, const QVariant &val)
VSettings::setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setVolatileValue(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
VSettings::setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual void setVolatileValue(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &val)
VSettings::settingsFile	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::settingsFile()$/;"	f	class:VSettings	signature:()
VSettings::settingsFile	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static QString settingsFile();$/;"	p	class:VSettings	access:public	signature:()
VSettings::settingsFileExists	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::settingsFileExists()$/;"	f	class:VSettings	signature:()
VSettings::settingsFileExists	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static bool settingsFileExists();$/;"	p	class:VSettings	access:public	signature:()
VSettings::value	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::value(const QString &key, const QVariant &defaultVal) const$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &defaultVal) const
VSettings::value	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual QVariant value(const QString &key,$/;"	p	class:VSettings	access:public	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
VSettings::volatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::volatileValue(const QString &key,$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &defaultVal) const
VSettings::volatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual QVariant volatileValue(const QString &key,$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
VSettings::~VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::~VSettings()$/;"	f	class:VSettings	signature:()
VSettings::~VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  ~VSettings();$/;"	p	class:VSettings	access:public	signature:()
VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::VTabWidget(QWidget *parent) : QTabWidget(parent)$/;"	f	class:VTabWidget	signature:(QWidget *parent)
VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  VTabWidget(QWidget *parent = 0);$/;"	p	class:VTabWidget	access:public	signature:(QWidget *parent = 0)
VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^class VTabWidget : public QTabWidget$/;"	c	inherits:QTabWidget
VTabWidget::VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::VTabWidget(QWidget *parent) : QTabWidget(parent)$/;"	f	class:VTabWidget	signature:(QWidget *parent)
VTabWidget::VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  VTabWidget(QWidget *parent = 0);$/;"	p	class:VTabWidget	access:public	signature:(QWidget *parent = 0)
VTabWidget::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::changeEvent(QEvent *e)$/;"	f	class:VTabWidget	signature:(QEvent *e)
VTabWidget::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void changeEvent(QEvent *e);$/;"	p	class:VTabWidget	access:protected	signature:(QEvent *e)
VTabWidget::pinTab	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::pinTab(int position)$/;"	f	class:VTabWidget	signature:(int position)
VTabWidget::pinTab	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void pinTab(int position);$/;"	p	class:VTabWidget	access:public	signature:(int position)
VTabWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::retranslateUi()$/;"	f	class:VTabWidget	signature:()
VTabWidget::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void retranslateUi();$/;"	p	class:VTabWidget	access:protected	signature:()
VTabWidget::setTabButton	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::setTabButton(int pos, QTabBar::ButtonPosition butpos, QWidget *w)$/;"	f	class:VTabWidget	signature:(int pos, QTabBar::ButtonPosition butpos, QWidget *w)
VTabWidget::setTabButton	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void setTabButton(int pos, QTabBar::ButtonPosition butpos, QWidget *w);$/;"	p	class:VTabWidget	access:public	signature:(int pos, QTabBar::ButtonPosition butpos, QWidget *w)
VTabWidget::updateTop	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::updateTop(int index)$/;"	f	class:VTabWidget	signature:(int index)
VTabWidget::updateTop	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void updateTop(int index);$/;"	p	class:VTabWidget	access:private	signature:(int index)
VTabWidget::~VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::~VTabWidget()$/;"	f	class:VTabWidget	signature:()
VTabWidget::~VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  ~VTabWidget();$/;"	p	class:VTabWidget	access:public	signature:()
Valid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^    Valid        = 0x0400,$/;"	e	enum:RouterStatus::Flag
Varning	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/log.html	/^Mest av anv√§ndar skulle bara att logga <i>Fel<\/i>, <i>Varning<\/i>, och <i>Underr√§ttelser<\/i>$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::Vidalia(QStringList args, int &argc, char **argv)$/;"	f	class:Vidalia	signature:(QStringList args, int &argc, char **argv)
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  Vidalia(QStringList args, int &argc, char **argv);$/;"	p	class:Vidalia	access:public	signature:(QStringList args, int &argc, char **argv)
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^class Vidalia : public QApplication$/;"	c	inherits:QApplication
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/bridges.po	/^No part of Vidalia, including this file, may be copied, modified, propagated, or$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/config.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/index.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/links.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/log.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/netview.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/running.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/server.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/services.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/troubleshooting.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/netview.html	/^–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ geoip.vidalia-project.net, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ Vidalia$/;"	v
Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/running.html	/^  <li>Âú® Vidalia ÁöÑÊâòÁõòËèúÂçï‰∏≠ÈÄâÊã©<i>ÂêØÂä®<\/i>,ÊàñÊåâ<i>Ctrl+S<\/i><\/li>„ÄÇ$/;"	v
Vidalia::Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::Vidalia(QStringList args, int &argc, char **argv)$/;"	f	class:Vidalia	signature:(QStringList args, int &argc, char **argv)
Vidalia::Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  Vidalia(QStringList args, int &argc, char **argv);$/;"	p	class:Vidalia	access:public	signature:(QStringList args, int &argc, char **argv)
Vidalia::_args	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QMap<QString, QString> Vidalia::_args; \/**< List of command-line arguments.  *\/$/;"	m	class:Vidalia	file:
Vidalia::_args	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QMap<QString, QString> _args; \/**< List of command-line arguments.  *\/$/;"	m	class:Vidalia	access:private
Vidalia::_language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QString Vidalia::_language;            \/**< The current language.            *\/$/;"	m	class:Vidalia	file:
Vidalia::_language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString _language;            \/**< The current language.            *\/$/;"	m	class:Vidalia	access:private
Vidalia::_log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Log Vidalia::_log;$/;"	m	class:Vidalia	file:
Vidalia::_log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Log _log; \/**< Logs debugging messages to file or stdout. *\/$/;"	m	class:Vidalia	access:private
Vidalia::_style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QString Vidalia::_style;               \/**< The current GUI style.           *\/$/;"	m	class:Vidalia	file:
Vidalia::_style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString _style;               \/**< The current GUI style.           *\/$/;"	m	class:Vidalia	access:private
Vidalia::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^TorControl* Vidalia::_torControl = 0;  \/**< Main TorControl object.          *\/$/;"	m	class:Vidalia	file:
Vidalia::_torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static TorControl* _torControl;      \/**< Vidalia's main TorControl object.*\/$/;"	m	class:Vidalia	access:private
Vidalia::_torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Torrc* Vidalia::_torrc = 0;            \/**< Main Torrc object.               *\/$/;"	m	class:Vidalia	file:
Vidalia::_torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Torrc* _torrc;      \/**< Vidalia's main Torrc object.     *\/$/;"	m	class:Vidalia	access:private
Vidalia::_translators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QList<QTranslator *> Vidalia::_translators;$/;"	m	class:Vidalia	file:
Vidalia::_translators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QList<QTranslator *> _translators; \/**< List of installed translators. *\/$/;"	m	class:Vidalia	access:private
Vidalia::argNeedsValue	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::argNeedsValue(QString argName)$/;"	f	class:Vidalia	signature:(QString argName)
Vidalia::argNeedsValue	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool argNeedsValue(QString argName);$/;"	p	class:Vidalia	access:private	signature:(QString argName)
Vidalia::copyDefaultSettingsFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::copyDefaultSettingsFile() const$/;"	f	class:Vidalia	signature:() const
Vidalia::copyDefaultSettingsFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void copyDefaultSettingsFile() const;$/;"	p	class:Vidalia	access:private	signature:() const
Vidalia::createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::createShortcut(const QKeySequence &key, QWidget *sender,$/;"	f	class:Vidalia	signature:(const QKeySequence &key, QWidget *sender, QObject *receiver, const char *slot)
Vidalia::createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::createShortcut(const QString &key, QWidget *sender,$/;"	f	class:Vidalia	signature:(const QString &key, QWidget *sender, QObject *receiver, const char *slot)
Vidalia::createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void createShortcut(const QKeySequence &key, QWidget *sender,$/;"	p	class:Vidalia	access:public	signature:(const QKeySequence &key, QWidget *sender, QObject *receiver, const char *slot)
Vidalia::createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void createShortcut(const QString &key, QWidget *sender,$/;"	p	class:Vidalia	access:public	signature:(const QString &key, QWidget *sender, QObject *receiver, const char *slot)
Vidalia::dataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::dataDirectory()$/;"	f	class:Vidalia	signature:()
Vidalia::dataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString dataDirectory();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::defaultDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::defaultDataDirectory()$/;"	f	class:Vidalia	signature:()
Vidalia::defaultDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString defaultDataDirectory();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString language() { return _language; }$/;"	f	class:Vidalia	access:public	signature:()
Vidalia::log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::log(Log::LogLevel level, QString msg)$/;"	f	class:Vidalia	signature:(Log::LogLevel level, QString msg)
Vidalia::log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Log::LogMessage log(Log::LogLevel level, QString msg);$/;"	p	class:Vidalia	access:public	signature:(Log::LogLevel level, QString msg)
Vidalia::onEventLoopStarted	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::onEventLoopStarted()$/;"	f	class:Vidalia	signature:()
Vidalia::onEventLoopStarted	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void onEventLoopStarted();$/;"	p	class:Vidalia	access:private	signature:()
Vidalia::parseArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::parseArguments(QStringList args)$/;"	f	class:Vidalia	signature:(QStringList args)
Vidalia::parseArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void parseArguments(QStringList args);$/;"	p	class:Vidalia	access:private	signature:(QStringList args)
Vidalia::pidFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::pidFile()$/;"	f	class:Vidalia	signature:()
Vidalia::pidFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString pidFile();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::qt_msg_handler	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::qt_msg_handler(QtMsgType type, const char *s)$/;"	f	class:Vidalia	signature:(QtMsgType type, const char *s)
Vidalia::qt_msg_handler	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void qt_msg_handler(QtMsgType type, const char *msg);$/;"	p	class:Vidalia	access:private	signature:(QtMsgType type, const char *msg)
Vidalia::readPasswordFromStdin	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::readPasswordFromStdin()$/;"	f	class:Vidalia	signature:()
Vidalia::readPasswordFromStdin	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool readPasswordFromStdin();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::removeAllTranslators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::removeAllTranslators()$/;"	f	class:Vidalia	signature:()
Vidalia::removeAllTranslators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void removeAllTranslators();$/;"	p	class:Vidalia	access:protected	signature:()
Vidalia::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::retranslateUi(const QString &languageCode)$/;"	f	class:Vidalia	signature:(const QString &languageCode)
Vidalia::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool retranslateUi(const QString &languageCode);$/;"	p	class:Vidalia	access:public	signature:(const QString &languageCode)
Vidalia::run	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::run()$/;"	f	class:Vidalia	signature:()
Vidalia::run	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static int run();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::running	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void running();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::setLanguage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::setLanguage(QString languageCode)$/;"	f	class:Vidalia	signature:(QString languageCode)
Vidalia::setLanguage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool setLanguage(QString languageCode = QString());$/;"	p	class:Vidalia	access:public	signature:(QString languageCode = QString())
Vidalia::setStyle	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::setStyle(QString styleKey)$/;"	f	class:Vidalia	signature:(QString styleKey)
Vidalia::setStyle	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool setStyle(QString styleKey = QString());$/;"	p	class:Vidalia	access:public	signature:(QString styleKey = QString())
Vidalia::showUsage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::showUsage()$/;"	f	class:Vidalia	signature:()
Vidalia::showUsage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool showUsage();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::showUsageMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::showUsageMessageBox()$/;"	f	class:Vidalia	signature:()
Vidalia::showUsageMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void showUsageMessageBox();$/;"	p	class:Vidalia	access:public	signature:()
Vidalia::style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString style() { return _style; }$/;"	f	class:Vidalia	access:public	signature:()
Vidalia::torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static TorControl* torControl() { return _torControl; }$/;"	f	class:Vidalia	access:public	signature:()
Vidalia::torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Torrc* torrc() { return _torrc; }$/;"	f	class:Vidalia	access:public	signature:()
Vidalia::validateArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::validateArguments(QString &errmsg)$/;"	f	class:Vidalia	signature:(QString &errmsg)
Vidalia::validateArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool validateArguments(QString &errmsg);$/;"	p	class:Vidalia	access:public	signature:(QString &errmsg)
Vidalia::version	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString version() { return VIDALIA_VERSION; }$/;"	f	class:Vidalia	access:public	signature:()
Vidalia::winEventFilter	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::winEventFilter(MSG *msg, long *result)$/;"	f	class:Vidalia	signature:(MSG *msg, long *result)
Vidalia::winEventFilter	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool winEventFilter(MSG *msg, long *result);$/;"	p	class:Vidalia	access:protected	signature:(MSG *msg, long *result)
Vidalia::~Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::~Vidalia()$/;"	f	class:Vidalia	signature:()
Vidalia::~Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  ~Vidalia();$/;"	p	class:Vidalia	access:public	signature:()
VidaliaExtension	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^class VidaliaExtension : public QScriptExtensionPlugin$/;"	c	inherits:QScriptExtensionPlugin
VidaliaExtension	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^class VidaliaExtension : public QScriptExtensionPlugin$/;"	c	file:	inherits:QScriptExtensionPlugin
VidaliaExtension::initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.cpp	/^void VidaliaExtension::initialize(const QString &key, QScriptEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QScriptEngine *engine)
VidaliaExtension::initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^  void initialize(const QString &key, QScriptEngine *engine);$/;"	p	class:VidaliaExtension	access:public	signature:(const QString &key, QScriptEngine *engine)
VidaliaExtension::initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  void initialize(const QString &key, QScriptEngine *engine);$/;"	p	class:VidaliaExtension	file:	access:public	signature:(const QString &key, QScriptEngine *engine)
VidaliaExtension::initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^void VidaliaExtension::initialize(const QString &key, QStringEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QStringEngine *engine)
VidaliaExtension::initialize	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensions.cpp~	/^void VidaliaExtension::initialize(const QString &key, QScriptEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QScriptEngine *engine)
VidaliaExtension::keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.cpp	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
VidaliaExtension::keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^  QStringList keys() const;$/;"	p	class:VidaliaExtension	access:public	signature:() const
VidaliaExtension::keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  QStringList	keys() const;$/;"	p	class:VidaliaExtension	file:	access:public	signature:() const
VidaliaExtension::keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
VidaliaExtension::keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensions.cpp~	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
VidaliaExtension_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^#define VidaliaExtension_H$/;"	d
VidaliaExtension_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/templates.pyc	/^#define VidaliaExtension_H$/;"	d	file:
VidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::VidaliaSettings()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  VidaliaSettings();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^class VidaliaSettings : public VSettings$/;"	c	inherits:VSettings
VidaliaSettings::Both	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Both,$/;"	e	enum:VidaliaSettings::IconPosition
VidaliaSettings::Dock	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Dock,$/;"	e	enum:VidaliaSettings::IconPosition
VidaliaSettings::IconPosition	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  enum IconPosition {$/;"	g	class:VidaliaSettings	access:public
VidaliaSettings::Tray	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^    Tray,$/;"	e	enum:VidaliaSettings::IconPosition
VidaliaSettings::VidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::VidaliaSettings()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::VidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  VidaliaSettings();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::allowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::allowPanic() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::allowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool allowPanic() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::firstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::firstRun() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::firstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool firstRun() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::fromString(QString iconPref)$/;"	f	class:VidaliaSettings	signature:(QString iconPref)
VidaliaSettings::fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  IconPosition fromString(QString iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(QString iconPref)
VidaliaSettings::getBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getBrowserDirectory() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::getBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getBrowserDirectory() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::getBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getBrowserExecutable() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::getBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getBrowserExecutable() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::getIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getIMExecutable() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::getIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getIMExecutable() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::getIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getIconPref()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::getIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  IconPosition getIconPref();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::getInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getInterfaceStyle()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::getInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getInterfaceStyle();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::getLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getLanguageCode()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::getLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getLanguageCode();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::isAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::isAutoUpdateEnabled() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::isAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool isAutoUpdateEnabled() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::lastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::lastCheckedForUpdates() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::lastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QDateTime lastCheckedForUpdates() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::localGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::localGeoIpDatabase() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::localGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString localGeoIpDatabase() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::panicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::panicPath() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::panicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString panicPath() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::pluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::pluginPath() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::pluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString pluginPath() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::rememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::rememberShutdown()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::rememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool rememberShutdown();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::runTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::runTorAtStart()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::runTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool runTorAtStart();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::runVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::runVidaliaOnBoot()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::runVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool runVidaliaOnBoot();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::setAllowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setAllowPanic(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
VidaliaSettings::setAllowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setAllowPanic(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
VidaliaSettings::setAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setAutoUpdateEnabled(bool enabled)$/;"	f	class:VidaliaSettings	signature:(bool enabled)
VidaliaSettings::setAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setAutoUpdateEnabled(bool enabled);$/;"	p	class:VidaliaSettings	access:public	signature:(bool enabled)
VidaliaSettings::setBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setBrowserDirectory(const QString &browserDirectory)$/;"	f	class:VidaliaSettings	signature:(const QString &browserDirectory)
VidaliaSettings::setBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setBrowserDirectory(const QString &browserDirectory);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &browserDirectory)
VidaliaSettings::setBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setBrowserExecutable(const QString &browserExecutable)$/;"	f	class:VidaliaSettings	signature:(const QString &browserExecutable)
VidaliaSettings::setBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setBrowserExecutable(const QString &browserExecutable);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &browserExecutable)
VidaliaSettings::setFirstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setFirstRun(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
VidaliaSettings::setFirstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setFirstRun(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
VidaliaSettings::setIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setIMExecutable(const QString &IMExecutable)$/;"	f	class:VidaliaSettings	signature:(const QString &IMExecutable)
VidaliaSettings::setIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setIMExecutable(const QString &IMExecutable);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &IMExecutable)
VidaliaSettings::setIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setIconPref(const IconPosition iconPref)$/;"	f	class:VidaliaSettings	signature:(const IconPosition iconPref)
VidaliaSettings::setIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setIconPref(const IconPosition iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(const IconPosition iconPref)
VidaliaSettings::setInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setInterfaceStyle(QString styleKey)$/;"	f	class:VidaliaSettings	signature:(QString styleKey)
VidaliaSettings::setInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setInterfaceStyle(QString styleKey);$/;"	p	class:VidaliaSettings	access:public	signature:(QString styleKey)
VidaliaSettings::setLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLanguageCode(QString languageCode)$/;"	f	class:VidaliaSettings	signature:(QString languageCode)
VidaliaSettings::setLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLanguageCode(QString languageCode);$/;"	p	class:VidaliaSettings	access:public	signature:(QString languageCode)
VidaliaSettings::setLastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLastCheckedForUpdates(const QDateTime &checkedAt)$/;"	f	class:VidaliaSettings	signature:(const QDateTime &checkedAt)
VidaliaSettings::setLastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLastCheckedForUpdates(const QDateTime &checkedAt);$/;"	p	class:VidaliaSettings	access:public	signature:(const QDateTime &checkedAt)
VidaliaSettings::setLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLocalGeoIpDatabase(const QString &databaseFile)$/;"	f	class:VidaliaSettings	signature:(const QString &databaseFile)
VidaliaSettings::setLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLocalGeoIpDatabase(const QString &databaseFile);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &databaseFile)
VidaliaSettings::setPanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setPanicPath(const QString &path)$/;"	f	class:VidaliaSettings	signature:(const QString &path)
VidaliaSettings::setPanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setPanicPath(const QString &path);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &path)
VidaliaSettings::setPluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setPluginPath(const QString &path)$/;"	f	class:VidaliaSettings	signature:(const QString &path)
VidaliaSettings::setPluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setPluginPath(const QString &path);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &path)
VidaliaSettings::setRememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRememberShutdown(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
VidaliaSettings::setRememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRememberShutdown(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
VidaliaSettings::setRunTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRunTorAtStart(bool run)$/;"	f	class:VidaliaSettings	signature:(bool run)
VidaliaSettings::setRunTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRunTorAtStart(bool run);$/;"	p	class:VidaliaSettings	access:public	signature:(bool run)
VidaliaSettings::setRunVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRunVidaliaOnBoot(bool run)$/;"	f	class:VidaliaSettings	signature:(bool run)
VidaliaSettings::setRunVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRunVidaliaOnBoot(bool run);$/;"	p	class:VidaliaSettings	access:public	signature:(bool run)
VidaliaSettings::setShowMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setShowMainWindowAtStart(bool show)$/;"	f	class:VidaliaSettings	signature:(bool show)
VidaliaSettings::setShowMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setShowMainWindowAtStart(bool show);$/;"	p	class:VidaliaSettings	access:public	signature:(bool show)
VidaliaSettings::setUseLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setUseLocalGeoIpDatabase(bool enabled)$/;"	f	class:VidaliaSettings	signature:(bool enabled)
VidaliaSettings::setUseLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setUseLocalGeoIpDatabase(bool enabled);$/;"	p	class:VidaliaSettings	access:public	signature:(bool enabled)
VidaliaSettings::showMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::showMainWindowAtStart()$/;"	f	class:VidaliaSettings	signature:()
VidaliaSettings::showMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool showMainWindowAtStart();$/;"	p	class:VidaliaSettings	access:public	signature:()
VidaliaSettings::skipVersionCheck	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::skipVersionCheck() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::skipVersionCheck	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool skipVersionCheck() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaSettings::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::toString(const IconPosition iconPref)$/;"	f	class:VidaliaSettings	signature:(const IconPosition iconPref)
VidaliaSettings::toString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString toString(const IconPosition iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(const IconPosition iconPref)
VidaliaSettings::useLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::useLocalGeoIpDatabase() const$/;"	f	class:VidaliaSettings	signature:() const
VidaliaSettings::useLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool useLocalGeoIpDatabase() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::VidaliaTab(const QString &title, const QString &name, QWidget *parent)$/;"	f	class:VidaliaTab	signature:(const QString &title, const QString &name, QWidget *parent)
VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  VidaliaTab(const QString &title, const QString &name = "General", QWidget *parent = 0);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &title, const QString &name = ”, QWidget *parent = 0)
VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^class VidaliaTab : public QWidget$/;"	c	inherits:QWidget
VidaliaTab::VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::VidaliaTab(const QString &title, const QString &name, QWidget *parent)$/;"	f	class:VidaliaTab	signature:(const QString &title, const QString &name, QWidget *parent)
VidaliaTab::VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  VidaliaTab(const QString &title, const QString &name = "General", QWidget *parent = 0);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &title, const QString &name = ”, QWidget *parent = 0)
VidaliaTab::_onTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  bool _onTop; \/**< True if the current tab is the one being displayed *\/$/;"	m	class:VidaliaTab	access:protected
VidaliaTab::_settings	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  VSettings* _settings; \/**< Object used to store window properties *\/$/;"	m	class:VidaliaTab	access:private
VidaliaTab::_title	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QString _title; \/**< Title displayed in the tab *\/$/;"	m	class:VidaliaTab	access:private
VidaliaTab::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::changeEvent(QEvent *e)$/;"	f	class:VidaliaTab	signature:(QEvent *e)
VidaliaTab::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void changeEvent(QEvent *e);$/;"	p	class:VidaliaTab	access:protected	signature:(QEvent *e)
VidaliaTab::closeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::closeEvent(QCloseEvent *event)$/;"	f	class:VidaliaTab	signature:(QCloseEvent *event)
VidaliaTab::closeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void closeEvent(QCloseEvent *event);$/;"	p	class:VidaliaTab	access:protected	signature:(QCloseEvent *event)
VidaliaTab::closeTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void closeTab();$/;"	p	class:VidaliaTab	access:public	signature:()
VidaliaTab::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::getSetting(QString setting, QVariant defaultValue)$/;"	f	class:VidaliaTab	signature:(QString setting, QVariant defaultValue)
VidaliaTab::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaTab	access:public	signature:(QString name, QVariant defaultValue)
VidaliaTab::getTitle	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QString getTitle() const { return _title; }$/;"	f	class:VidaliaTab	access:public	signature:() const
VidaliaTab::helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void helpRequested(const QString &topic);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &topic)
VidaliaTab::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::retranslateUi()$/;"	f	class:VidaliaTab	signature:()
VidaliaTab::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void retranslateUi();$/;"	p	class:VidaliaTab	access:protected	signature:()
VidaliaTab::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::saveSetting(QString prop, QVariant value)$/;"	f	class:VidaliaTab	signature:(QString prop, QVariant value)
VidaliaTab::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaTab	access:public	signature:(QString name, QVariant value)
VidaliaTab::setOnTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::setOnTop(bool top)$/;"	f	class:VidaliaTab	signature:(bool top)
VidaliaTab::setOnTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setOnTop(bool top);$/;"	p	class:VidaliaTab	access:public	signature:(bool top)
VidaliaTab::setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::setShortcut(const QString &shortcut, const char *slot)$/;"	f	class:VidaliaTab	signature:(const QString &shortcut, const char *slot)
VidaliaTab::setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setShortcut(const QString &shortcut, const char *slot);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &shortcut, const char *slot)
VidaliaTab::setTitle	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setTitle(const QString &title) { _title = title; }$/;"	f	class:VidaliaTab	access:public	signature:(const QString &title)
VidaliaTab::~VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::~VidaliaTab()$/;"	f	class:VidaliaTab	signature:()
VidaliaTab::~VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  ~VidaliaTab();$/;"	p	class:VidaliaTab	access:public	signature:()
VidaliaTabPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::VidaliaTabPrototype(QObject *parent)$/;"	f	class:VidaliaTabPrototype	signature:(QObject *parent)
VidaliaTabPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    VidaliaTabPrototype(QObject *parent = 0);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QObject *parent = 0)
VidaliaTabPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^class VidaliaTabPrototype : public QObject, public QScriptable$/;"	c	inherits:QObject,QScriptable
VidaliaTabPrototype::VidaliaTabPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::VidaliaTabPrototype(QObject *parent)$/;"	f	class:VidaliaTabPrototype	signature:(QObject *parent)
VidaliaTabPrototype::VidaliaTabPrototype	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    VidaliaTabPrototype(QObject *parent = 0);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QObject *parent = 0)
VidaliaTabPrototype::constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::constructor(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:VidaliaTabPrototype	signature:(QScriptContext *context, QScriptEngine *engine)
VidaliaTabPrototype::constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static QScriptValue constructor(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QScriptContext *context, QScriptEngine *engine)
VidaliaTabPrototype::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::getSetting(QString name, QVariant defaultValue)$/;"	f	class:VidaliaTabPrototype	signature:(QString name, QVariant defaultValue)
VidaliaTabPrototype::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QString name, QVariant defaultValue)
VidaliaTabPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::metaTypeId()$/;"	f	class:VidaliaTabPrototype	signature:()
VidaliaTabPrototype::metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static int metaTypeId();$/;"	p	class:VidaliaTabPrototype	access:public	signature:()
VidaliaTabPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::name()$/;"	f	class:VidaliaTabPrototype	signature:()
VidaliaTabPrototype::name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static QString name();$/;"	p	class:VidaliaTabPrototype	access:public	signature:()
VidaliaTabPrototype::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::saveSetting(QString name, QVariant value)$/;"	f	class:VidaliaTabPrototype	signature:(QString name, QVariant value)
VidaliaTabPrototype::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QString name, QVariant value)
VidaliaTabPrototype::setLayout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::setLayout(QLayout *layout)$/;"	f	class:VidaliaTabPrototype	signature:(QLayout *layout)
VidaliaTabPrototype::setLayout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE void setLayout(QLayout *layout);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QLayout *layout)
VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::VidaliaWindow(const QString &name, QWidget *parent,$/;"	f	class:VidaliaWindow	signature:(const QString &name, QWidget *parent, Qt::WFlags flags)
VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  VidaliaWindow(const QString &name, QWidget *parent = 0,$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &name, QWidget *parent = 0, Qt::WFlags flags = 0)
VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^class VidaliaWindow : public QMainWindow$/;"	c	inherits:QMainWindow
VidaliaWindow::VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::VidaliaWindow(const QString &name, QWidget *parent,$/;"	f	class:VidaliaWindow	signature:(const QString &name, QWidget *parent, Qt::WFlags flags)
VidaliaWindow::VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  VidaliaWindow(const QString &name, QWidget *parent = 0,$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &name, QWidget *parent = 0, Qt::WFlags flags = 0)
VidaliaWindow::_name	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  QString _name;  \/**< Name associated with this window. *\/$/;"	m	class:VidaliaWindow	access:private
VidaliaWindow::_settings	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  VSettings* _settings; \/**< Object used to store window properties *\/$/;"	m	class:VidaliaWindow	access:private
VidaliaWindow::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::changeEvent(QEvent *e)$/;"	f	class:VidaliaWindow	signature:(QEvent *e)
VidaliaWindow::changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void changeEvent(QEvent *e);$/;"	p	class:VidaliaWindow	access:protected	signature:(QEvent *e)
VidaliaWindow::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::getSetting(QString setting, QVariant defaultValue)$/;"	f	class:VidaliaWindow	signature:(QString setting, QVariant defaultValue)
VidaliaWindow::getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaWindow	access:public	signature:(QString name, QVariant defaultValue)
VidaliaWindow::helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void helpRequested(const QString &topic);$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &topic)
VidaliaWindow::restoreWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::restoreWindowState()$/;"	f	class:VidaliaWindow	signature:()
VidaliaWindow::restoreWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void restoreWindowState();$/;"	p	class:VidaliaWindow	access:public	signature:()
VidaliaWindow::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::retranslateUi()$/;"	f	class:VidaliaWindow	signature:()
VidaliaWindow::retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void retranslateUi();$/;"	p	class:VidaliaWindow	access:protected	signature:()
VidaliaWindow::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::saveSetting(QString prop, QVariant value)$/;"	f	class:VidaliaWindow	signature:(QString prop, QVariant value)
VidaliaWindow::saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaWindow	access:public	signature:(QString name, QVariant value)
VidaliaWindow::saveWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::saveWindowState()$/;"	f	class:VidaliaWindow	signature:()
VidaliaWindow::saveWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void saveWindowState();$/;"	p	class:VidaliaWindow	access:public	signature:()
VidaliaWindow::setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::setShortcut(const QString &shortcut, const char *slot)$/;"	f	class:VidaliaWindow	signature:(const QString &shortcut, const char *slot)
VidaliaWindow::setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void setShortcut(const QString &shortcut, const char *slot);$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &shortcut, const char *slot)
VidaliaWindow::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::setVisible(bool visible)$/;"	f	class:VidaliaWindow	signature:(bool visible)
VidaliaWindow::setVisible	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void setVisible(bool visible);$/;"	p	class:VidaliaWindow	access:public	signature:(bool visible)
VidaliaWindow::showWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void showWindow() { QMainWindow::show(); }$/;"	f	class:VidaliaWindow	access:public	signature:()
VidaliaWindow::~VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::~VidaliaWindow()$/;"	f	class:VidaliaWindow	signature:()
VidaliaWindow::~VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  ~VidaliaWindow();$/;"	p	class:VidaliaWindow	access:public	signature:()
Virtual	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^    Virtual,$/;"	e	enum:TorOpt::OptType
W	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/preferences-system-network-sharing.png	/^/;"	v
W2b	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/sd.png	/^“UWW2b≠‡7),.´™Æ$/;"	v
WARRANTY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^WITHOUT ANY WARRANTY; without even the implied warranty of$/;"	v
WARRANTY	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^but WITHOUT ANY WARRANTY; without even the implied warranty of$/;"	v
WIN32_LEAN_AND_MEAN	/Users/chiiph/Code/vidalia/src/common/win32.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WIX_ATTR_DIRACTION	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_DIRACTION /;"	d	file:
WIX_ATTR_GUID	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_GUID /;"	d	file:
WIX_ATTR_ID	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_ID /;"	d	file:
WIX_ATTR_KEY	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_KEY /;"	d	file:
WIX_ATTR_NAME	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_NAME /;"	d	file:
WIX_ATTR_REGACTION	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REGACTION /;"	d	file:
WIX_ATTR_REG_ACTION	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REG_ACTION /;"	d	file:
WIX_ATTR_REG_KEYPATH	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REG_KEYPATH /;"	d	file:
WIX_ATTR_REG_NAME	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REG_NAME /;"	d	file:
WIX_ATTR_REG_ROOT	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REG_ROOT /;"	d	file:
WIX_ATTR_REG_TYPE	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_REG_TYPE /;"	d	file:
WIX_ATTR_VALUE	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_ATTR_VALUE /;"	d	file:
WIX_REG_KEY_TYPE	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_REG_KEY_TYPE /;"	d	file:
WIX_TAG_COMPONENT	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_COMPONENT /;"	d	file:
WIX_TAG_COMPONENT_REF	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_COMPONENT_REF /;"	d	file:
WIX_TAG_CREATEDIR	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_CREATEDIR /;"	d	file:
WIX_TAG_DIR	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_DIR /;"	d	file:
WIX_TAG_FEATURE	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_FEATURE /;"	d	file:
WIX_TAG_FILE	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_FILE /;"	d	file:
WIX_TAG_REGKEY	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_REGKEY /;"	d	file:
WIX_TAG_REGVAL	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_REGVAL /;"	d	file:
WIX_TAG_REMOVEDIR	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^#define WIX_TAG_REMOVEDIR /;"	d	file:
WSAStartupFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^    WSAStartupFailed,$/;"	e	enum:UPNPControl::UPNPError
WXL_ATTR_LANGUAGE	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ATTR_LANGUAGE /;"	d	file:
WXL_ATTR_MESSAGE_ID	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ATTR_MESSAGE_ID /;"	d	file:
WXL_ATTR_OVERRIDABLE	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ATTR_OVERRIDABLE /;"	d	file:
WXL_ATTR_TRANSLATION_TYPE	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ATTR_TRANSLATION_TYPE /;"	d	file:
WXL_ELEMENT_MESSAGE	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ELEMENT_MESSAGE /;"	d	file:
WXL_ELEMENT_ROOT	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_ELEMENT_ROOT /;"	d	file:
WXL_NAMESPACE	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^#define WXL_NAMESPACE /;"	d	file:
Waiting	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	e	enum:ControlConnection::ReceiveWaiter::ReceiveStatus
Waiting	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	e	enum:SendCommandEvent::SendWaiter::SenderStatus
Warn	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Warn,       \/**< Recoverable failure conditions. *\/$/;"	e	enum:Log::LogLevel
Warn	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^    Warn       = (1u<<1),  \/**< Warn level log message. *\/$/;"	e	enum:LogEvent::Severity
WarnSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    WarnSeverity   = (1u<<1), \/**< An important, but non-fatal event. *\/$/;"	e	enum:tc::Severity
Warning	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/log.html	/^·Ä°·Äû·Ä∂·ÄØ·Ä∏·Äª·Äï·Ä≥·Äû·Ä∞·Ä°·Äô·Ä∫·Ä¨·Ä∏·ÄÖ·ÄØ·Äû·Ää·Äπ <i>Error<\/i>, <i>Warning<\/i>, ·Çè·ÄΩ·ÄÑ·Äπ·Ä∑ <i>Notice<\/i>$/;"	v
Warning	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/log.html	/^Most users should only log <i>Error<\/i>, <i>Warning<\/i>, and <i>Notice<\/i>$/;"	v
Warning	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/log.html	/^·Ä°·Äû·Ä∂·ÄØ·Ä∏·Äª·Äï·Ä≥·Äû·Ä∞·Ä°·Äô·Ä∫·Ä¨·Ä∏·ÄÖ·ÄØ·Äû·Ää·Äπ <i>Error<\/i>, <i>Warning<\/i>, ·Çè·ÄΩ·ÄÑ·Äπ·Ä∑ <i>Notice<\/i>$/;"	v
Web	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/netview.html	/^exemple pour vous connecter √† un site Web, Tor cr√©e un tunnel (ou un$/;"	v
X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  X();$/;"	p	class:X	file:	access:public	signature:()
X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^X::X()$/;"	f	class:X	signature:()
X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^class X$/;"	c	file:
X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  X();$/;"	p	class:X	file:	access:public	signature:()
X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^class X$/;"	c	file:
X	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^    Vidalian teht√§v√§palkin kuvake muuttuu vihre√§st√§ harmaaksi sipuliksi, jossa on punainen X, kun on pys√§ytetty Tor.$/;"	v
X	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/running.html	/^Â¶ÇÊûú Tor ÂºÇÂ∏∏ÈÄÄÂá∫ÔºåVidalia ‰ºöÂ∞ÜÂõæÊ†áÂèòÊàê‰∏Ä‰∏™ÊúâÁ∫¢XÁöÑÈªëËâ≤Ê¥ãËë±,Âπ∂‰∏îÊòæÁ§∫‰∏Ä‰∏™ÈîôËØØÊ∂àÊÅØ,ËÆ©ÊÇ®Áü•ÈÅìÂì™ÈáåÊúâÈîôËØØ„ÄÇÊÇ®‰πüÂèØ‰ª•ÈÄöËøáÊü•Áúã<a$/;"	v
X::X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  X();$/;"	p	class:X	file:	access:public	signature:()
X::X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^X::X()$/;"	f	class:X	signature:()
X::X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  X();$/;"	p	class:X	file:	access:public	signature:()
X::algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  int algo();$/;"	p	class:X	file:	access:public	signature:()
X::algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^int X::algo()$/;"	f	class:X	signature:()
X::algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  int algo();$/;"	p	class:X	file:	access:public	signature:()
X::algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  void algoMas(int m);$/;"	p	class:X	file:	access:public	signature:(int m)
X::algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^void X::algoMas(int m)$/;"	f	class:X	signature:(int m)
X::algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  void algoMas(int m);$/;"	p	class:X	file:	access:public	signature:(int m)
X::~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  ~X();$/;"	p	class:X	file:	access:public	signature:()
X::~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^X::~X()$/;"	f	class:X	signature:()
X::~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  ~X();$/;"	p	class:X	file:	access:public	signature:()
XSHELL_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^#define XSHELL_H$/;"	d
XSTR	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define XSTR(/;"	d	file:
X_H	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^#define X_H$/;"	d	file:
Yes	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^    Yes,$/;"	e	enum:VMessageBox::Button
Z07	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/gy.png	/^/;"	v
ZIMAGEVIEW_H	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^#define ZIMAGEVIEW_H$/;"	d
ZImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::ZImageView(QWidget *parent)$/;"	f	class:ZImageView	signature:(QWidget *parent)
ZImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  ZImageView(QWidget *parent = 0);$/;"	p	class:ZImageView	access:public	signature:(QWidget *parent = 0)
ZImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^class ZImageView : public QWidget$/;"	c	inherits:QWidget
ZImageView::ZImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::ZImageView(QWidget *parent)$/;"	f	class:ZImageView	signature:(QWidget *parent)
ZImageView::ZImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  ZImageView(QWidget *parent = 0);$/;"	p	class:ZImageView	access:public	signature:(QWidget *parent = 0)
ZImageView::_desiredX	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _desiredX;  \/**< The X value we desire (???). *\/$/;"	m	class:ZImageView	access:private
ZImageView::_desiredY	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _desiredY;  \/**< The Y value we desire (???). *\/$/;"	m	class:ZImageView	access:private
ZImageView::_image	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  QImage _image;   \/**< The displayed image. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_maxZoomFactor	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _maxZoomFactor;  \/**< Maximum amount to zoom into the image. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_mouseX	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  int  _mouseX;     \/**< The x-coordinate of the current mouse position. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_mouseY	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  int  _mouseY;     \/**< The y-coordinate of the current mouse position. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_padding	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _padding;  \/**< Amount of padding to use on the side of the image. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_view	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  QRect _view;      \/**< The displayed viewport. *\/$/;"	m	class:ZImageView	access:private
ZImageView::_zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _zoom;     \/**< The current zoom level. *\/$/;"	m	class:ZImageView	access:private
ZImageView::drawScaledImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::drawScaledImage()$/;"	f	class:ZImageView	signature:()
ZImageView::drawScaledImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void drawScaledImage();$/;"	p	class:ZImageView	access:protected	signature:()
ZImageView::mouseDoubleClickEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseDoubleClickEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
ZImageView::mouseDoubleClickEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseDoubleClickEvent(QMouseEvent *e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent *e)
ZImageView::mouseMoveEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseMoveEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
ZImageView::mouseMoveEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseMoveEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
ZImageView::mousePressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mousePressEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
ZImageView::mousePressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mousePressEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
ZImageView::mouseReleaseEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseReleaseEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
ZImageView::mouseReleaseEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseReleaseEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
ZImageView::paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::paintEvent(QPaintEvent*)$/;"	f	class:ZImageView	signature:(QPaintEvent*)
ZImageView::paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void paintEvent(QPaintEvent*);$/;"	p	class:ZImageView	access:protected	signature:(QPaintEvent*)
ZImageView::paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void paintImage(QPainter *painter) { Q_UNUSED(painter); }$/;"	f	class:ZImageView	access:protected	signature:(QPainter *painter)
ZImageView::resetZoomPoint	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::resetZoomPoint()$/;"	f	class:ZImageView	signature:()
ZImageView::resetZoomPoint	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void resetZoomPoint();$/;"	p	class:ZImageView	access:public	signature:()
ZImageView::setImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::setImage(QImage& img)$/;"	f	class:ZImageView	signature:(QImage& img)
ZImageView::setImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void setImage(QImage& pixmap);$/;"	p	class:ZImageView	access:public	signature:(QImage& pixmap)
ZImageView::updateViewport	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::updateViewport(int screendx, int screendy)$/;"	f	class:ZImageView	signature:(int screendx, int screendy)
ZImageView::updateViewport	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void updateViewport(int screendx=0, int screendy=0);$/;"	p	class:ZImageView	access:protected	signature:(int screendx=0, int screendy=0)
ZImageView::wheelEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::wheelEvent(QWheelEvent *e)$/;"	f	class:ZImageView	signature:(QWheelEvent *e)
ZImageView::wheelEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void wheelEvent(QWheelEvent *e);$/;"	p	class:ZImageView	access:protected	signature:(QWheelEvent *e)
ZImageView::zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoom(QPoint zoomAt, float pct)$/;"	f	class:ZImageView	signature:(QPoint zoomAt, float pct)
ZImageView::zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoom(float pct)$/;"	f	class:ZImageView	signature:(float pct)
ZImageView::zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoom(QPoint zoomAt, float pct);$/;"	p	class:ZImageView	access:public	signature:(QPoint zoomAt, float pct)
ZImageView::zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoom(float pct);$/;"	p	class:ZImageView	access:public	signature:(float pct)
ZImageView::zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoomIn()$/;"	f	class:ZImageView	signature:()
ZImageView::zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoomIn();$/;"	p	class:ZImageView	access:public	signature:()
ZImageView::zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoomOut()$/;"	f	class:ZImageView	signature:()
ZImageView::zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoomOut();$/;"	p	class:ZImageView	access:public	signature:()
Zlib	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    Zlib    \/**< Zlib compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
ZlibByteArray	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::ZlibByteArray(QByteArray data)$/;"	f	class:ZlibByteArray	signature:(QByteArray data)
ZlibByteArray	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  ZlibByteArray(QByteArray data);$/;"	p	class:ZlibByteArray	access:public	signature:(QByteArray data)
ZlibByteArray	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^class ZlibByteArray : public QByteArray$/;"	c	inherits:QByteArray
ZlibByteArray::CompressionMethod	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  enum CompressionMethod {$/;"	g	class:ZlibByteArray	access:public
ZlibByteArray::Gzip	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    Gzip,   \/**< Gzip compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
ZlibByteArray::None	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    None,   \/**< No compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
ZlibByteArray::Zlib	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^    Zlib    \/**< Zlib compression method. *\/$/;"	e	enum:ZlibByteArray::CompressionMethod
ZlibByteArray::ZlibByteArray	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::ZlibByteArray(QByteArray data)$/;"	f	class:ZlibByteArray	signature:(QByteArray data)
ZlibByteArray::ZlibByteArray	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  ZlibByteArray(QByteArray data);$/;"	p	class:ZlibByteArray	access:public	signature:(QByteArray data)
ZlibByteArray::compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::compress(const CompressionMethod method,$/;"	f	class:ZlibByteArray	signature:(const CompressionMethod method, QString *errmsg) const
ZlibByteArray::compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::compress(const QByteArray in,$/;"	f	class:ZlibByteArray	signature:(const QByteArray in, const CompressionMethod method, QString *errmsg)
ZlibByteArray::compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  QByteArray compress(const CompressionMethod method = Zlib,$/;"	p	class:ZlibByteArray	access:public	signature:(const CompressionMethod method = Zlib, QString *errmsg = 0) const
ZlibByteArray::compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QByteArray compress(const QByteArray in,$/;"	p	class:ZlibByteArray	access:public	signature:(const QByteArray in, const CompressionMethod method = Zlib, QString *errmsg = 0)
ZlibByteArray::isGzipSupported	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::isGzipSupported()$/;"	f	class:ZlibByteArray	signature:()
ZlibByteArray::isGzipSupported	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static bool isGzipSupported();$/;"	p	class:ZlibByteArray	access:public	signature:()
ZlibByteArray::isZlibAvailable	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::isZlibAvailable()$/;"	f	class:ZlibByteArray	signature:()
ZlibByteArray::isZlibAvailable	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static bool isZlibAvailable();$/;"	p	class:ZlibByteArray	access:public	signature:()
ZlibByteArray::methodBits	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::methodBits(CompressionMethod method)$/;"	f	class:ZlibByteArray	signature:(CompressionMethod method)
ZlibByteArray::methodBits	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static int methodBits(CompressionMethod method);$/;"	p	class:ZlibByteArray	access:private	signature:(CompressionMethod method)
ZlibByteArray::methodString	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::methodString(CompressionMethod method)$/;"	f	class:ZlibByteArray	signature:(CompressionMethod method)
ZlibByteArray::methodString	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QString methodString(CompressionMethod method);$/;"	p	class:ZlibByteArray	access:private	signature:(CompressionMethod method)
ZlibByteArray::uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::uncompress(const CompressionMethod method,$/;"	f	class:ZlibByteArray	signature:(const CompressionMethod method, QString *errmsg) const
ZlibByteArray::uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::uncompress(const QByteArray in,$/;"	f	class:ZlibByteArray	signature:(const QByteArray in, const CompressionMethod method, QString *errmsg)
ZlibByteArray::uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  QByteArray uncompress(CompressionMethod method = Zlib,$/;"	p	class:ZlibByteArray	access:public	signature:(CompressionMethod method = Zlib, QString *errmsg = 0) const
ZlibByteArray::uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QByteArray uncompress(const QByteArray in,$/;"	p	class:ZlibByteArray	access:public	signature:(const QByteArray in, const CompressionMethod method = Zlib, QString *errmsg = 0)
_ABOUTDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^#define _ABOUTDIALOG_H$/;"	d
_ABSTRACTTORSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^#define _ABSTRACTTORSETTINGS_H$/;"	d
_ADDRESSMAP_H	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^#define _ADDRESSMAP_H$/;"	d
_ADVANCEDPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^#define _ADVANCEDPAGE_H$/;"	d
_APPEARANCEPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^#define _APPEARANCEPAGE_H$/;"	d
_BOOTSTRAPSTATUS_H	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^#define _BOOTSTRAPSTATUS_H$/;"	d
_BOOTSTRAP_TEST_H	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^#define _BOOTSTRAP_TEST_H$/;"	d
_BRIDGEUSAGEDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^#define _BRIDGEUSAGEDIALOG_H$/;"	d
_BWGRAPH_H	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^#define _BWGRAPH_H$/;"	d
_CIRCUITITEM_H	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^#define _CIRCUITITEM_H$/;"	d
_CIRCUITLISTWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^#define _CIRCUITLISTWIDGET_H$/;"	d
_CIRCUIT_H	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^#define _CIRCUIT_H$/;"	d
_CONFIGDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^#define _CONFIGDIALOG_H$/;"	d
_CONFIGPAGESTACK_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^#define _CONFIGPAGESTACK_H$/;"	d
_CONFIGPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^#define _CONFIGPAGE_H$/;"	d
_CONTROLCOMMAND_H	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^#define _CONTROLCOMMAND_H$/;"	d
_CONTROLCONNECTION_H	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^#define _CONTROLCONNECTION_H$/;"	d
_CONTROLMETHOD_H	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^#define _CONTROLMETHOD_H$/;"	d
_CONTROLPASSWORDINPUTDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^#define _CONTROLPASSWORDINPUTDIALOG_H$/;"	d
_CONTROLREPLY_H	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^#define _CONTROLREPLY_H$/;"	d
_CONTROLSOCKET_H	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^#define _CONTROLSOCKET_H$/;"	d
_COUNTRYINFO_H	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^#define _COUNTRYINFO_H$/;"	d
_CRASHREPORTER_H	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^#define _CRASHREPORTER_H$/;"	d
_CRYPTO_H	/Users/chiiph/Code/vidalia/src/common/crypto.h	/^#define _CRYPTO_H$/;"	d
_DARWIN_C_SOURCE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define _DARWIN_C_SOURCE$/;"	d	file:
_DEFAULTSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^#define _DEFAULTSETTINGS_H$/;"	d
_DOMAINVALIDATOR_H	/Users/chiiph/Code/vidalia/src/vidalia/config/DomainValidator.h	/^#define _DOMAINVALIDATOR_H$/;"	d
_EXITPOLICY_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^#define _EXITPOLICY_H$/;"	d
_FILE_H	/Users/chiiph/Code/vidalia/src/common/file.h	/^#define _FILE_H$/;"	d
_GENERALPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^#define _GENERALPAGE_H$/;"	d
_GEOIPDATABASE_H	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^#define _GEOIPDATABASE_H$/;"	d
_GEOIPRECORD_H	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^#define _GEOIPRECORD_H$/;"	d
_GEOIPRESOLVER_H	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^#define _GEOIPRESOLVER_H$/;"	d
_GRAPHFRAME_H	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^#define _GRAPHFRAME_H$/;"	d
_HELPBROWSER_H	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^#define _HELPBROWSER_H$/;"	d
_HELPERPROCESS_H	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^#define _HELPERPROCESS_H$/;"	d
_HELPTEXTBROWSER_H	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^#define _HELPTEXTBROWSER_H$/;"	d
_HTML_H	/Users/chiiph/Code/vidalia/src/common/html.h	/^#define _HTML_H$/;"	d
_IPVALIDATOR_H	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^#define _IPVALIDATOR_H$/;"	d
_LANGUAGESUPPORT_H	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^#define _LANGUAGESUPPORT_H$/;"	d
_LICENSEDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^#define _LICENSEDIALOG_H$/;"	d
_LOCAL8BITSTRINGVALIDATOR_H	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^#define _LOCAL8BITSTRINGVALIDATOR_H$/;"	d
_LOGEVENT_H	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^#define _LOGEVENT_H$/;"	d
_LOGFILE_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^#define _LOGFILE_H$/;"	d
_LOGFILTER_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^#define _LOGFILTER_H$/;"	d
_LOGHEADERVIEW_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^#define _LOGHEADERVIEW_H$/;"	d
_LOGMESSAGECOLUMNDELEGATE_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^#define _LOGMESSAGECOLUMNDELEGATE_H$/;"	d
_LOGTREEITEM_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^#define _LOGTREEITEM_H$/;"	d
_LOGTREEWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^#define _LOGTREEWIDGET_H$/;"	d
_LOG_H	/Users/chiiph/Code/vidalia/src/common/Log.h	/^#define _LOG_H$/;"	d
_MAINWINDOW_H	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^#define _MAINWINDOW_H$/;"	d
_MESSAGELOG_H	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^#define _MESSAGELOG_H$/;"	d
_NETVIEWER_H	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^#define _NETVIEWER_H$/;"	d
_NETWORKPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^#define _NETWORKPAGE_H$/;"	d
_NETWORKSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^#define _NETWORKSETTINGS_H$/;"	d
_NET_H	/Users/chiiph/Code/vidalia/src/common/net.h	/^#define _NET_H$/;"	d
_NICKNAMEVALIDATOR_H	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^#define _NICKNAMEVALIDATOR_H$/;"	d
_NSH2PO_CONFIG_H	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po_config.h.in	/^#define _NSH2PO_CONFIG_H$/;"	d	file:
_P	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/gt.png	/^/;"	v
_PACKAGEINFO_H	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^#define _PACKAGEINFO_H$/;"	d
_POLICY_H	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^#define _POLICY_H$/;"	d
_PORTVALIDATOR_H	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^#define _PORTVALIDATOR_H$/;"	d
_POSIX_C_SOURCE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#undef _POSIX_C_SOURCE$/;"	d	file:
_PROCUTIL_H	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^#define _PROCUTIL_H$/;"	d
_PROTOCOLINFO_H	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^#define _PROTOCOLINFO_H$/;"	d
_Q_INVALIDATE	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define _Q_INVALIDATE(/;"	d
_REPLYLINE_H	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^#define _REPLYLINE_H$/;"	d
_ROUTERDESCRIPTORVIEW_H	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^#define _ROUTERDESCRIPTORVIEW_H$/;"	d
_ROUTERDESCRIPTOR_H	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^#define _ROUTERDESCRIPTOR_H$/;"	d
_ROUTERINFODIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^#define _ROUTERINFODIALOG_H$/;"	d
_ROUTERLISTITEM_H	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^#define _ROUTERLISTITEM_H$/;"	d
_ROUTERLISTWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^#define _ROUTERLISTWIDGET_H$/;"	d
_ROUTERSTATUS_H	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^#define _ROUTERSTATUS_H$/;"	d
_SENDCOMMANDEVENT_H	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^#define _SENDCOMMANDEVENT_H$/;"	d
_SERVERPAGE_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^#define _SERVERPAGE_H$/;"	d
_SERVERSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^#define _SERVERSETTINGS_H$/;"	d
_STATUSEVENTITEMDELEGATE_H	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^#define _STATUSEVENTITEMDELEGATE_H$/;"	d
_STATUSEVENTITEM_H	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^#define _STATUSEVENTITEM_H$/;"	d
_STATUSEVENTWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^#define _STATUSEVENTWIDGET_H$/;"	d
_STATUSTAB_H	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^#define _STATUSTAB_H$/;"	d
_STREAMITEM_H	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^#define _STREAMITEM_H$/;"	d
_STREAM_H	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^#define _STREAM_H$/;"	d
_STRINGUTIL_H	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^#define _STRINGUTIL_H$/;"	d
_SYS_QUEUE_H_	/Users/chiiph/Code/vidalia/src/miniupnpc/bsdqueue.h	/^#define	_SYS_QUEUE_H_$/;"	d
_TCGLOBAL_H	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^#define _TCGLOBAL_H$/;"	d
_TORCONTROLPROTO_H	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^#define _TORCONTROLPROTO_H$/;"	d
_TORCONTROL_H	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^#define _TORCONTROL_H$/;"	d
_TOREVENTS_H	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^#define _TOREVENTS_H$/;"	d
_TORMAPIMAGEVIEW_H	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^#define _TORMAPIMAGEVIEW_H$/;"	d
_TORMAPWIDGETPOPUPMENU_H	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^#define _TORMAPWIDGETPOPUPMENU_H$/;"	d
_TORMAPWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^#define _TORMAPWIDGET_H$/;"	d
_TORPROCESS_H	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^#define _TORPROCESS_H$/;"	d
_TORRCDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^#define _TORRCDIALOG_H$/;"	d
_TORSERVICE_H	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^#define _TORSERVICE_H$/;"	d
_TORSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^#define _TORSETTINGS_H$/;"	d
_TORSGINAL_H	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^#define _TORSGINAL_H$/;"	d
_TORSOCKET_H	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^#define _TORSOCKET_H$/;"	d
_TS2PO_CONFIG_H	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po_config.h.in	/^#define _TS2PO_CONFIG_H$/;"	d	file:
_UPDATEPROCESS_H	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^#define _UPDATEPROCESS_H$/;"	d
_UPDATEPROGRESSDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^#define _UPDATEPROGRESSDIALOG_H$/;"	d
_UPNPCONTROLTHREAD_H	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^#define _UPNPCONTROLTHREAD_H$/;"	d
_UPNPCONTROL_H	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^#define _UPNPCONTROL_H$/;"	d
_UPNPTESTDIALOG_H	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^#define _UPNPTESTDIALOG_H$/;"	d
_UpdatesAvailableDialog_H	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^#define _UpdatesAvailableDialog_H$/;"	d
_VIDALIASETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^#define _VIDALIASETTINGS_H$/;"	d
_VIDALIATAB_H	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^#define _VIDALIATAB_H$/;"	d
_VIDALIAWINDOW_H	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^#define _VIDALIAWINDOW_H$/;"	d
_VIDALIA_H	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define _VIDALIA_H$/;"	d
_VMESSAGEBOX_H	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^#define _VMESSAGEBOX_H$/;"	d
_VSETTINGS_H	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^#define _VSETTINGS_H$/;"	d
_VTABWIDGET_H	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^#define _VTABWIDGET_H$/;"	d
_WIN32_H	/Users/chiiph/Code/vidalia/src/common/win32.h	/^#define _WIN32_H$/;"	d
_XOPEN_SOURCE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define _XOPEN_SOURCE /;"	d	file:
_ZLIBBYTEARRAY_H	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^#define _ZLIBBYTEARRAY_H$/;"	d
__BSD_VISIBLE	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define __BSD_VISIBLE /;"	d	file:
__CODELENGTH_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/codelength.h	/^#define __CODELENGTH_H__$/;"	d
__CONNECTHOSTPORT_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.h	/^#define __CONNECTHOSTPORT_H__$/;"	d
__DECLSPEC_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/declspec.h	/^#define __DECLSPEC_H__$/;"	d
__EXTENSIONS__	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define __EXTENSIONS__ /;"	d	file:
__IGD_DESC_PARSE_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^#define __IGD_DESC_PARSE_H__$/;"	d
__MINISOAP_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.h	/^#define __MINISOAP_H__$/;"	d
__MINISSDPC_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.h	/^#define __MINISSDPC_H__$/;"	d
__MINIUPNPCSTRINGS_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcstrings.h	/^#define __MINIUPNPCSTRINGS_H__$/;"	d
__MINIUPNPC_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^#define __MINIUPNPC_H__$/;"	d
__MINIWGET_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.h	/^#define __MINIWGET_H__$/;"	d
__MINIXML_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^#define __MINIXML_H__$/;"	d
__UPNPCOMMANDS_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.h	/^#define __UPNPCOMMANDS_H__$/;"	d
__UPNPERRORS_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/upnperrors.h	/^#define __UPNPERRORS_H__$/;"	d
__UPNPREPLYPARSE_H__	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^#define __UPNPREPLYPARSE_H__$/;"	d
__anon1::data	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct IGDdatas data;$/;"	m	struct:__anon1	typeref:struct:__anon1::IGDdatas	file:	access:public
__anon1::devlist	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct UPNPDev * devlist;$/;"	m	struct:__anon1	typeref:struct:__anon1::UPNPDev	file:	access:public
__anon1::discoverdelay	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	unsigned int discoverdelay;	\/* value passed to upnpDiscover() *\/$/;"	m	struct:__anon1	file:	access:public
__anon1::lanaddr	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char lanaddr[16];	\/* our ip address on the LAN *\/$/;"	m	struct:__anon1	file:	access:public
__anon1::minissdpdsocket	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char * minissdpdsocket;$/;"	m	struct:__anon1	file:	access:public
__anon1::multicastif	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char * multicastif;$/;"	m	struct:__anon1	file:	access:public
__anon1::urls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct UPNPUrls urls;$/;"	m	struct:__anon1	typeref:struct:__anon1::UPNPUrls	file:	access:public
__inline	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#  define __inline /;"	d	file:
__inline	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#  define __inline /;"	d	file:
__inline	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#  define __inline /;"	d	file:
__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_X	access:public
__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_X	access:public
__qtscript_self	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_TorControl	file:	access:public
__qtscript_self	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    QScriptValue __qtscript_self;$/;"	m	class:QtScriptShell_TorSignal	file:	access:public
_action	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Recommendation _action;$/;"	m	class:BootstrapStatus	access:private
_action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  Action _action; \/**< The action to take for this policy. *\/$/;"	m	class:Policy	access:private
_action	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QAction *_action;$/;"	m	class:PluginWrapper	access:protected
_actionAbout	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionAbout;$/;"	m	class:MainWindow	access:private
_actionBandwidthGraph	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionBandwidthGraph;$/;"	m	class:MainWindow	access:private
_actionConfigure	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionConfigure;$/;"	m	class:MainWindow	access:private
_actionDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionDebugDialog;$/;"	m	class:MainWindow	access:private
_actionExit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionExit;$/;"	m	class:MainWindow	access:private
_actionMessageLog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionMessageLog;$/;"	m	class:MainWindow	access:private
_actionNetworkMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionNetworkMap;$/;"	m	class:MainWindow	access:private
_actionNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionNewIdentity;$/;"	m	class:MainWindow	access:private
_actionPanic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionPanic;$/;"	m	class:MainWindow	access:private
_actionReloadConfig	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionReloadConfig;$/;"	m	class:MainWindow	access:private
_actionRestartTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionRestartTor;$/;"	m	class:MainWindow	access:private
_actionShowControlPanel	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionShowControlPanel;$/;"	m	class:MainWindow	access:private
_actionStartStopTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionStartStopTor;$/;"	m	class:MainWindow	access:private
_actionStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionStatus;$/;"	m	class:MainWindow	access:private
_actionVidaliaHelp	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_actionVidaliaHelp;$/;"	m	class:MainWindow	access:private
_addr	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QHostAddress _addr; \/**< Address of Tor's control interface. *\/$/;"	m	class:ControlConnection	access:private
_address	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString _address;    \/**< Stream target address. *\/$/;"	m	class:Stream	access:private
_address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QHostAddress _address; \/**< Addresses to which this policy applies. *\/$/;"	m	class:Policy	access:private
_addressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  AddressMap _addressMap;$/;"	m	class:NetViewer	access:private
_annotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QHash<QString,QString> _annotations;$/;"	m	class:CrashReportDialog	access:private
_annotationsPath	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QString _annotationsPath;$/;"	m	class:CrashReportDialog	access:private
_ap	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  AdvancedPage *_ap;$/;"	m	class:FirstRunWizard	access:private
_args	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QMap<QString, QString> Vidalia::_args; \/**< List of command-line arguments.  *\/$/;"	m	class:Vidalia	file:
_args	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QMap<QString, QString> _args; \/**< List of command-line arguments.  *\/$/;"	m	class:Vidalia	access:private
_arguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QStringList _arguments;$/;"	m	class:ControlCommand	access:private
_attached	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    bool _attached;$/;"	m	class:VAttachButton	access:private
_authMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QStringList _authMethods; \/**< Tor's ccepted authentication methods. *\/$/;"	m	class:ProtocolInfo	access:private
_authenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool _authenticated;$/;"	m	class:TorControl	access:private
_author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
_avgBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _avgBandwidth;   \/**< Average bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
_backupSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  QMap<QString, QVariant> _backupSettings;$/;"	m	class:AbstractTorSettings	access:private
_bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint64 _bandwidth; \/**< Consensus bandwidth *\/$/;"	m	class:RouterStatus	access:private
_btnNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QPushButton *_btnNext;$/;"	m	class:FirstRunWizard	access:private
_buildFlags	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlags _buildFlags;$/;"	m	class:Circuit	access:private
_burstBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _burstBandwidth; \/**< Burst bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
_char_t	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^typedef wchar_t         _char_t;$/;"	t	namespace:CrashReporter	file:
_chkRemember	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  QCheckBox *_chkRemember;$/;"	m	class:VMessageBox	access:private
_circId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  CircuitId _circId; \/**< Circuit ID. *\/$/;"	m	class:Circuit	access:private
_circuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  Circuit _circuit; \/**< Circuit associated with this item. *\/$/;"	m	class:CircuitItem	access:private
_circuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  CircuitId _circuitId; \/**< ID of the circuit carrying this stream. *\/$/;"	m	class:Stream	access:private
_circuitRemovalList	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<CircuitItem *> _circuitRemovalList;$/;"	m	class:CircuitListWidget	access:private
_circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QHash<CircuitId, QPair<QPainterPath *,bool>* > _circuits;$/;"	m	class:TorMapImageView	access:private
_circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  QHash<CircuitId, CircuitGeoPath*> _circuits;$/;"	m	class:TorMapWidget	access:private
_city	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _city;    \/**< City in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
_cmd	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  ControlCommand _cmd;  \/**< Command to send to Tor. *\/$/;"	m	class:SendCommandEvent	access:private
_codec	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  QTextCodec* _codec;$/;"	m	class:Local8BitStringValidator	access:private
_comment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _content, _comment;$/;"	m	class:TorrcLine	access:private
_connMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _connMutex; \/**< Mutex around the control socket. *\/$/;"	m	class:ControlConnection	access:private
_connectAttempt	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  int _connectAttempt; \/**< How many times we've tried to connect to Tor while$/;"	m	class:ControlConnection	access:private
_connectTimer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QTimer* _connectTimer; \/**< Timer used to delay connect attempts. *\/$/;"	m	class:ControlConnection	access:private
_connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool _connected;$/;"	m	class:ControlConnection	access:private
_contact	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _contact;        \/**< Router operator contact information. *\/$/;"	m	class:RouterDescriptor	access:private
_content	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _content, _comment;$/;"	m	class:TorrcLine	access:private
_control	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl *_control; \/**< Stores desired UPnP state. *\/$/;"	m	class:UPNPControlThread	access:private
_controlConn	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ControlConnection* _controlConn;$/;"	m	class:TorControl	access:private
_controlPassword	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _controlPassword;$/;"	m	class:MainWindow	access:private
_controlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPControlThread* _controlThread; \/**< Thread used for UPnP operations. *\/$/;"	m	class:UPNPControl	access:private
_cookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString _cookieAuthFile;  \/**< Tor's authentication cookie file. *\/$/;"	m	class:ProtocolInfo	access:private
_country	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _country; \/**< Country in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
_countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _countryCode; \/**< ISO-3166-1 alpha-2 country code. *\/$/;"	m	class:GeoIpRecord	access:private
_countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString _countryCode;$/;"	m	class:RouterListItem	access:private
_currentBundle	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  BundleInfo _currentBundle;$/;"	m	class:UpdateProcess	access:private
_currentCommand	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  UpdateCommand _currentCommand;$/;"	m	class:UpdateProcess	access:private
_data	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QStringList _data;$/;"	m	class:ControlCommand	access:private
_data	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QStringList _data;  \/**< Contents of any DataReplyLines in this line. *\/$/;"	m	class:ReplyLine	access:private
_database	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpDatabase _database;$/;"	m	class:GeoIpResolver	access:private
_date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
_db	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIP *_db; \/**< Pointer to the local GeoIP database object. *\/$/;"	m	class:GeoIpDatabase	access:private
_default	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _default;$/;"	m	class:TorOpt	access:private
_defaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QSettings *_defaultSettings;$/;"	m	class:VSettings	access:private
_defaults	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QHash<QString, QVariant> _defaults;$/;"	m	class:VSettings	access:private
_defaultsMap	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QMap<QString, QPair<QString,TorOpt> > _defaultsMap;$/;"	m	class:Torrc	access:private
_delayedShutdownStarted	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _delayedShutdownStarted;$/;"	m	class:MainWindow	access:private
_description	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString _description;$/;"	m	class:BootstrapStatus	access:private
_desiredX	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _desiredX;  \/**< The X value we desire (???). *\/$/;"	m	class:ZImageView	access:private
_desiredY	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _desiredY;  \/**< The Y value we desire (???). *\/$/;"	m	class:ZImageView	access:private
_detachedTabMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QStringList _detachedTabMap; \/**< Map to handle detached tabs *\/$/;"	m	class:MainWindow	access:private
_digest	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _digest; \/**< Hexadecimal-encoded hash of the router's most recent$/;"	m	class:RouterStatus	access:private
_dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 _dirPort;        \/**< Router's DirPort. *\/$/;"	m	class:RouterDescriptor	access:private
_dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 _dirPort; \/**< Current directory port. *\/$/;"	m	class:RouterStatus	access:private
_dirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  quint16 _dirPort; \/**< Desired DirPort. *\/$/;"	m	class:UPNPControlThread	access:private
_dirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _dirPort;    \/**< DirPort used during the test. *\/$/;"	m	class:UPNPTestDialog	access:private
_discoverTimer	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  QTimer _discoverTimer;$/;"	m	class:UPNPTestDialog	access:private
_document	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  Marble::GeoDataDocument *_document;$/;"	m	class:TorMapWidget	access:private
_donePage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_networkPage, *_donePage;$/;"	m	class:FirstRunWizard	access:private
_dummy	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QAction *_dummy; \/**< Dummy action to display when there are no more tabs *\/$/;"	m	class:MainWindow	access:private
_elementList	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QList<QDomElement> _elementList;$/;"	m	class:HelpBrowser	access:private
_enableLogging	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool _enableLogging;$/;"	m	class:MessageLog	access:private
_engine	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  PluginEngine *_engine;$/;"	m	class:MainWindow	access:private
_engine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    PluginEngine *_engine;$/;"	m	class:PluginWrapper	access:protected
_errmsg	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QString _errmsg; \/**< Error message if the reply fails. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
_errmsg	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QString _errmsg; \/**< Error message if the send fails. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
_error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPError _error; \/**< Most recent UPNP error. *\/$/;"	m	class:UPNPControl	access:private
_eventHandler	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorEvents* _eventHandler;$/;"	m	class:TorControl	access:private
_events	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  TorEvents* _events; \/**< Dispatches asynchronous events from Tor. *\/$/;"	m	class:ControlConnection	access:private
_events	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorEvents::Events _events;$/;"	m	class:TorControl	access:private
_exitPolicy	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _exitPolicy;     \/** Exit policy *\/$/;"	m	class:RouterDescriptor	access:private
_exitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QList<Policy> _exitPolicy;$/;"	m	class:ExitPolicy	access:private
_expressionTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  ExpTree * _expressionTree;$/;"	m	class:LogFilterSearchTerm	access:private
_family	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _family;         \/** Family *\/$/;"	m	class:RouterDescriptor	access:private
_file	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QFile* _file;        \/**< The log file. *\/$/;"	m	class:LogFile	access:private
_file_handle_t	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^typedef HANDLE          _file_handle_t;$/;"	t	namespace:CrashReporter	file:
_files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QStringList _files;$/;"	m	class:PluginWrapper	access:protected
_filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  uint _filter;$/;"	m	class:LogFilter	access:private
_filter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  uint _filter;$/;"	m	class:MessageLog	access:private
_fingerprint	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _fingerprint;    \/**< Router's fingerprint. *\/$/;"	m	class:RouterDescriptor	access:private
_flags	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flags _flags;     \/**< OR-ed field of the router's current status flags. *\/$/;"	m	class:RouterStatus	access:private
_folder	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  Marble::GeoDataFolder *_folder;$/;"	m	class:TorMapWidget	access:private
_forwardedDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  quint16 _forwardedDirPort; \/**< Currently forwarded DirPort. *\/$/;"	m	class:UPNPControl	access:private
_forwardedORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  quint16 _forwardedORPort; \/**< Currently forwarded ORPort. *\/$/;"	m	class:UPNPControl	access:private
_foundBefore	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool _foundBefore;$/;"	m	class:HelpBrowser	access:private
_fromPort	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  quint16 _fromPort;  \/**< Start of a port range. *\/$/;"	m	class:Policy	access:private
_geoip	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  GeoIpResolver _geoip;$/;"	m	class:NetViewer	access:private
_graph	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  BandwidthGraph *_graph; \/**< Graph that draws bandwidth usage *\/$/;"	m	class:MainWindow	access:private
_graphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  GraphStyle _graphStyle;$/;"	m	class:GraphFrame	access:private
_gui	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool _persistent, _gui;$/;"	m	class:PluginWrapper	access:protected
_helpIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  QPixmap _helpIcon;$/;"	m	class:StatusEventItemDelegate	access:private
_id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _id;             \/**< Router's descriptor ID. *\/$/;"	m	class:RouterDescriptor	access:private
_id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _id;   \/**< Hexadecimal-encoded router identity digest. *\/$/;"	m	class:RouterStatus	access:private
_idmap	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  QHash<QString,RouterListItem*> _idmap;$/;"	m	class:RouterListWidget	access:private
_ids	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList _ids;    \/**< IDs of the routers in the circuit. *\/$/;"	m	class:Circuit	access:private
_image	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  QImage _image;   \/**< The displayed image. *\/$/;"	m	class:ZImageView	access:private
_instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl* UPNPControl::_instance = 0;$/;"	m	class:UPNPControl	file:
_instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static UPNPControl* _instance; \/**< UPNPControl singleton instance. *\/$/;"	m	class:UPNPControl	access:private
_introPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_introPage, *_panicPage;$/;"	m	class:FirstRunWizard	access:private
_invert	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  bool _invert;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
_ip	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QHostAddress _ip;        \/**< Router's IP address. *\/$/;"	m	class:RouterDescriptor	access:private
_ip	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QHostAddress _ip; \/**< IP address for this location. *\/$/;"	m	class:GeoIpRecord	access:private
_ipAddress	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QHostAddress _ipAddress;  \/**< Current IP address. *\/$/;"	m	class:RouterStatus	access:private
_isIntentionalExit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _isIntentionalExit;$/;"	m	class:MainWindow	access:private
_isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  bool _isValid;$/;"	m	class:Circuit	access:private
_isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _isVidaliaRunningTor;$/;"	m	class:MainWindow	access:private
_it	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QList<RouterDescriptor>::const_iterator _it;$/;"	m	class:NetViewer	access:private
_itemHistory	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> _itemHistory;$/;"	m	class:LogTreeWidget	access:private
_keepRunning	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  bool _keepRunning; \/**< True if the control thread should keep running. *\/$/;"	m	class:UPNPControlThread	access:private
_keyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString _keyword;$/;"	m	class:ControlCommand	access:private
_language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QString Vidalia::_language;            \/**< The current language.            *\/$/;"	m	class:Vidalia	file:
_language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString _language;            \/**< The current language.            *\/$/;"	m	class:Vidalia	access:private
_lastFind	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString _lastFind;$/;"	m	class:HelpBrowser	access:private
_lastSearch	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString _lastSearch;$/;"	m	class:HelpBrowser	access:private
_latitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float _latitude;  \/**< Latitudinal coordinate for this IP's location. *\/$/;"	m	class:GeoIpRecord	access:private
_left	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree * _left;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
_leftClickMenu	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  QMenu *_leftClickMenu;$/;"	m	class:TorMapWidgetPopupMenu	access:private
_line	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine *_line;$/;"	m	class:TorOpt	access:private
_lines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QList<ReplyLine> _lines;$/;"	m	class:ControlReply	access:private
_lines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QList<TorrcLine *> _lines;$/;"	m	class:Torrc	access:private
_list	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterListWidget* _list; \/**< The list for this list item. *\/$/;"	m	class:RouterListItem	access:private
_localSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QLocalSocket *_localSocket; \/**< Socket used in the connection *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
_location	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _location;       \/**< Geographic location information. *\/$/;"	m	class:RouterDescriptor	access:private
_location	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  GeoIpRecord _location;   \/**< Location information for this router. *\/$/;"	m	class:RouterListItem	access:private
_log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Log Vidalia::_log;$/;"	m	class:Vidalia	file:
_log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Log _log; \/**< Logs debugging messages to file or stdout. *\/$/;"	m	class:Vidalia	access:private
_logFile	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  QFile _logFile;     \/**< Log output destination. *\/$/;"	m	class:Log	access:private
_logFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  LogFile _logFile;$/;"	m	class:MessageLog	access:private
_logFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  LogFilter* _logFilter;$/;"	m	class:MessageLog	access:private
_logLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  LogLevel _logLevel; \/**< Minimum log severity level. *\/$/;"	m	class:Log	access:private
_longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QHash<QString,QString> _longDescription;$/;"	m	class:PackageInfo	access:private
_longitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float _longitude; \/**< Longitudinal coordinate for this IP's location. *\/$/;"	m	class:GeoIpRecord	access:private
_mainWindow	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  MainWindow * _mainWindow;$/;"	m	class:BootstrapTestCase	access:private
_map	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorMapImageView* _map;$/;"	m	class:NetViewer	access:private
_map	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorMapWidget* _map;$/;"	m	class:NetViewer	access:private
_mask	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  uchar _mask;  \/**< Address mask. *\/$/;"	m	class:Policy	access:private
_maxItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  int _maxItemCount; \/**< Maximum number of items in the tree. *\/$/;"	m	class:LogTreeWidget	access:private
_maxPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _maxPoints;$/;"	m	class:GraphFrame	access:private
_maxPosition	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _maxPosition;$/;"	m	class:GraphFrame	access:private
_maxValue	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _maxValue;$/;"	m	class:GraphFrame	access:private
_maxZoomFactor	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _maxZoomFactor;  \/**< Maximum amount to zoom into the image. *\/$/;"	m	class:ZImageView	access:private
_maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  int _maximumItemCount;$/;"	m	class:StatusEventWidget	access:private
_message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  QString  _message;$/;"	m	class:LogEvent	access:private
_message	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString _message;   \/**< ReplyText portion of this reply line. *\/$/;"	m	class:ReplyLine	access:private
_messageLog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  MessageLog *_messageLog; \/**< Message log that displays a more detailed log from Tor *\/$/;"	m	class:MainWindow	access:private
_method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlMethod::Method _method; \/** Method used to communicate with Tor. *\/$/;"	m	class:ControlConnection	access:private
_method	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ControlMethod::Method _method; \/**< Connection method. *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
_method	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ControlMethod::Method _method;$/;"	m	class:TorControl	access:private
_microdesc	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool _microdesc;         \/** *\/$/;"	m	class:RouterDescriptor	access:private
_minidumpPath	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  QString _minidumpPath;$/;"	m	class:CrashReportDialog	access:private
_mouseX	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  int  _mouseX;     \/**< The x-coordinate of the current mouse position. *\/$/;"	m	class:ZImageView	access:private
_mouseY	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  int  _mouseY;     \/**< The y-coordinate of the current mouse position. *\/$/;"	m	class:ZImageView	access:private
_mutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QMutex _mutex; \/**< Mutex around the wait condition. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
_mutex	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QMutex _mutex; \/**< Mutex around the wait condition. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
_mutex	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  QMutex* _mutex; \/**< Mutex around variables shared with UPNPControlThread. *\/$/;"	m	class:UPNPControl	access:private
_name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _name;           \/**< The router's name. *\/$/;"	m	class:RouterDescriptor	access:private
_name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString _name; \/**< Router nickname. *\/$/;"	m	class:RouterStatus	access:private
_name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString _name;$/;"	m	class:PackageInfo	access:private
_name	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  QString _name;  \/**< Name associated with this window. *\/$/;"	m	class:VidaliaWindow	access:private
_name	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString _name;$/;"	m	class:TorOpt	access:private
_name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _name, _date, _author;$/;"	m	class:PluginWrapper	access:protected
_names	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList _names;  \/**< Nicknames of the routers in the circuit. *\/$/;"	m	class:Circuit	access:private
_netViewer	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  NetViewer _netViewer; \/**< Network map that draws circuits *\/$/;"	m	class:MainWindow	access:private
_networkPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_networkPage, *_donePage;$/;"	m	class:FirstRunWizard	access:private
_np	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  NetworkPage *_np;$/;"	m	class:FirstRunWizard	access:private
_nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString _nspace;$/;"	m	class:PluginWrapper	access:protected
_observedBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _observedBandwidth; \/**< Observed bandwidth. *\/$/;"	m	class:RouterDescriptor	access:private
_oldDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _oldDirPort; \/**< Original (pre-test) forwarded DirPort. *\/$/;"	m	class:UPNPTestDialog	access:private
_oldOrPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _oldOrPort;  \/**< Original (pre-test) forwarded ORPort. *\/$/;"	m	class:UPNPTestDialog	access:private
_onTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  bool _onTop; \/**< True if the current tab is the one being displayed *\/$/;"	m	class:VidaliaTab	access:protected
_onionKey	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _onionKey;       \/** Router SSL key *\/$/;"	m	class:RouterDescriptor	access:private
_orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 _orPort;         \/**< Router's ORPort. *\/$/;"	m	class:RouterDescriptor	access:private
_orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 _orPort;  \/**< Current OR port. *\/$/;"	m	class:RouterStatus	access:private
_orPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  quint16 _orPort; \/**< Desired ORPort. *\/$/;"	m	class:UPNPControlThread	access:private
_orPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  quint16 _orPort;     \/**< ORPort used during the test. *\/$/;"	m	class:UPNPTestDialog	access:private
_packageList	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  PackageList _packageList;$/;"	m	class:UpdateProcess	access:private
_padding	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _padding;  \/**< Amount of padding to use on the side of the image. *\/$/;"	m	class:ZImageView	access:private
_pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  QHash<QAction*, ConfigPage*> _pages;$/;"	m	class:ConfigPageStack	access:private
_painter	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QPainter* _painter;$/;"	m	class:GraphFrame	access:private
_panicPage	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  QWizardPage *_introPage, *_panicPage;$/;"	m	class:FirstRunWizard	access:private
_parser	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  TorrcParser _parser;$/;"	m	class:Torrc	access:private
_path	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QString _path; \/**< Path to the socket *\/$/;"	m	class:ControlConnection	access:private
_percentComplete	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  int _percentComplete;$/;"	m	class:BootstrapStatus	access:private
_persistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool _persistent, _gui;$/;"	m	class:PluginWrapper	access:protected
_platform	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString _platform;       \/**< Platform on which router is running. *\/$/;"	m	class:RouterDescriptor	access:private
_port	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  quint16 _port; \/**< Port of Tor's control interface. *\/$/;"	m	class:ControlConnection	access:private
_port	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  quint16 _port;       \/**< Stream target port. *\/$/;"	m	class:Stream	access:private
_pressedStop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _pressedStop; \/**< True if the user has pressed the Stop Tor button *\/$/;"	m	class:MainWindow	access:private
_previousControlPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _previousControlPort; \/**< Holds the previous controlport used *\/$/;"	m	class:MainWindow	access:private
_previousSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString _previousSocksPort; \/**< Holds the previous socksport used *\/$/;"	m	class:MainWindow	access:private
_processName	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  QString _processName;$/;"	m	class:HelperProcess	access:private
_published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QDateTime _published;    \/**< Date router descriptor was published. *\/$/;"	m	class:RouterDescriptor	access:private
_published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QDateTime _published; \/**< The publication time of the router's most recent$/;"	m	class:RouterStatus	access:private
_purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose _purpose;$/;"	m	class:Circuit	access:private
_rd	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterDescriptor* _rd;   \/**< Descriptor for this router item. *\/$/;"	m	class:RouterListItem	access:private
_reason	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::ConnectionStatusReason _reason;$/;"	m	class:BootstrapStatus	access:private
_reason	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString _reason;$/;"	m	class:TorControl	access:private
_reattachMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QMenu _reattachMenu; \/**< Menu used to handle tab re-attaching *\/$/;"	m	class:MainWindow	access:private
_rec	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QRect _rec;$/;"	m	class:GraphFrame	access:private
_recvData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QList<qreal> *_recvData;$/;"	m	class:GraphFrame	access:private
_recvMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _recvMutex; \/**< Mutex around the queue of ReceiveWaiters. *\/$/;"	m	class:ControlConnection	access:private
_recvQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QQueue<ReceiveWaiter *> _recvQueue; \/**< Objects waiting for a reply. *\/$/;"	m	class:ControlConnection	access:private
_refreshTimer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QTimer _refreshTimer;$/;"	m	class:NetViewer	access:private
_regExp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  QRegExp _regExp;$/;"	m	class:LogFilterRegExp	access:private
_regexp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QRegExp _regexp;$/;"	m	class:TorrcParser	access:private
_region	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString _region;   \/**< State or district in which this IP lives. *\/$/;"	m	class:GeoIpRecord	access:private
_remoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  QString _remoteHost;     \/**< Remote hostname. *\/$/;"	m	class:TorSocket	access:private
_remotePort	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  quint16 _remotePort;     \/**< Remote host port. *\/$/;"	m	class:TorSocket	access:private
_reply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      ControlReply _reply; \/**< Reply to a previous command. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
_restartTorAfterUpgrade	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _restartTorAfterUpgrade;$/;"	m	class:MainWindow	access:private
_right	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ExpTree * _right;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  QList<RouterDescriptor> _routers;$/;"	m	class:NetViewer	access:private
_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QHash<QString, QPair<QPointF,bool>* > _routers;$/;"	m	class:TorMapImageView	access:private
_routers	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  QHash<QString, Marble::GeoDataCoordinates> _routers;$/;"	m	class:TorMapWidget	access:private
_scaleWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int _scaleWidth;$/;"	m	class:GraphFrame	access:private
_scm	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SC_HANDLE _scm;$/;"	m	class:TorService	access:private
_scrollOnNewItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  bool _scrollOnNewItem; \/**< Set to true if we are to scroll to the new item$/;"	m	class:LogTreeWidget	access:private
_sendData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QList<qreal> *_sendData;$/;"	m	class:GraphFrame	access:private
_sendWaiter	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  SendCommandEvent::SendWaiter* _sendWaiter;$/;"	m	class:ControlConnection	access:private
_seqnum	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  quint32 _seqnum;  \/**< Sequence number used to disambiguate messages with$/;"	m	class:LogTreeItem	access:private
_service_fns	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^ServiceFunctions TorService::_service_fns =$/;"	m	class:TorService	file:
_service_fns	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static ServiceFunctions _service_fns;$/;"	m	class:TorService	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  VSettings* _settings; \/**< Object used to store window properties *\/$/;"	m	class:VidaliaTab	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  VSettings* _settings; \/**< Object used to store window properties *\/$/;"	m	class:VidaliaWindow	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  VidaliaSettings* _settings;$/;"	m	class:BandwidthGraph	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  TorSettings* _settings;$/;"	m	class:AdvancedPage	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  VidaliaSettings* _settings;$/;"	m	class:AppearancePage	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  QSettings *_settings;$/;"	m	class:DefaultSettings	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  NetworkSettings *_settings;$/;"	m	class:NetworkPage	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ServerSettings*  _settings;$/;"	m	class:ServerPage	access:private
_settings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  VidaliaSettings* _settings;$/;"	m	class:MessageLog	access:private
_severity	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::Severity _severity;$/;"	m	class:BootstrapStatus	access:private
_severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  Severity _severity;$/;"	m	class:LogEvent	access:private
_shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QHash<QString,QString> _shortDescription;$/;"	m	class:PackageInfo	access:private
_shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool _shouldContinue;$/;"	m	class:TorControl	access:private
_showRecv	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  bool _showRecv;$/;"	m	class:GraphFrame	access:private
_showSend	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  bool _showSend;$/;"	m	class:GraphFrame	access:private
_sock	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ControlSocket* _sock; \/**< Socket used to communicate with Tor. *\/$/;"	m	class:ControlConnection	access:private
_sock	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  SocketWrapper * _sock;  \/**< Helper object to convenient use both sockets *\/$/;"	m	class:ControlSocket	access:private
_socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  QIODevice *_socket; \/**< Abstract pointer to transparently use both sockets *\/$/;"	m	class:ControlSocket	access:private
_socksAddr	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  QHostAddress _socksAddr; \/**< Address of Tor's SOCKS listener. *\/$/;"	m	class:TorSocket	access:private
_socksPort	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  quint16 _socksPort;      \/**< Port of Tor's SOCKS listener. *\/$/;"	m	class:TorSocket	access:private
_socksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  quint16 _socksPort;$/;"	m	class:UpdateProcess	access:private
_squelchDescriptorAcceptedEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  bool _squelchDescriptorAcceptedEvent;$/;"	m	class:StatusEventWidget	access:private
_startedWithPrevious	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _startedWithPrevious; \/**< True if Vidalia tried to start Tor with the previous ports *\/$/;"	m	class:MainWindow	access:private
_state	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPState _state; \/**< Current UPNP status. *\/$/;"	m	class:UPNPControl	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Status _status;$/;"	m	class:BootstrapStatus	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Status _status;  \/**< Circuit status. *\/$/;"	m	class:Circuit	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      enum ReceiveStatus { Waiting, Failed, Success } _status;$/;"	m	class:ControlConnection::ReceiveWaiter	typeref:enum:ControlConnection::ReceiveWaiter::ReceiveStatus	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  Status _status; \/**< Status of the control connection. *\/$/;"	m	class:ControlConnection	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString _status;    \/**< Response status code. *\/$/;"	m	class:ReplyLine	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  RouterStatusEnum _status;\/**< Availability status of this router. *\/$/;"	m	class:RouterDescriptor	access:private
_status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    enum SenderStatus { Waiting, Failed, Success } _status;$/;"	m	class:SendCommandEvent::SendWaiter	typeref:enum:SendCommandEvent::SendWaiter::SenderStatus	access:public
_status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Status  _status;     \/**< Stream status value. *\/$/;"	m	class:Stream	access:private
_status	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorStatus _status;$/;"	m	class:MainWindow	access:private
_statusBar	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  QStatusBar *_statusBar;$/;"	m	class:BandwidthGraph	access:private
_statusBar	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  QPointer<QStatusBar> _statusBar;$/;"	m	class:MessageLog	access:private
_statusMutex	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QMutex _statusMutex; \/**< Mutex around the connection status value. *\/$/;"	m	class:ControlConnection	access:private
_statusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  StatusTab _statusTab; \/**< Status tab that displays the load progress and a short log *\/$/;"	m	class:MainWindow	access:private
_statusValue	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  qint64 _statusValue;     \/**< Value used to sort items by status. *\/$/;"	m	class:RouterListItem	access:private
_stream	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QTextStream _stream; \/**< Stream used to write to the log file. *\/$/;"	m	class:LogFile	access:private
_stream	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  Stream _stream;$/;"	m	class:StreamItem	access:private
_streamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  StreamId _streamId;   \/**< Unique ID associated with this stream. *\/$/;"	m	class:Stream	access:private
_streamRemovalList	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<StreamItem *> _streamRemovalList;$/;"	m	class:CircuitListWidget	access:private
_style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QString Vidalia::_style;               \/**< The current GUI style.           *\/$/;"	m	class:Vidalia	file:
_style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString _style;               \/**< The current GUI style.           *\/$/;"	m	class:Vidalia	access:private
_tab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VidaliaTab *_tab;$/;"	m	class:VAttachButton	access:private
_tabMap	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QStringList _tabMap; \/**< Map to handle opened tabs *\/$/;"	m	class:MainWindow	access:private
_tcpSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QTcpSocket *_tcpSocket; \/**< Socket used in the connection *\/$/;"	m	class:ControlSocket::SocketWrapper	file:	access:private
_testResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TestResult _testResult;$/;"	m	class:BootstrapTestCase	access:private
_testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapStatus::Status _testStatus;$/;"	m	class:BootstrapTestTorKiller	access:private
_timer	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  QTimer _timer;$/;"	m	class:BootstrapTestCase	access:private
_title	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QString _title; \/**< Title displayed in the tab *\/$/;"	m	class:VidaliaTab	access:private
_title	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  QString _title; \/**< Title of this configuration page. *\/$/;"	m	class:ConfigPage	access:private
_tmpDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  QString _tmpDirPort;$/;"	m	class:ServerPage	access:private
_tmpMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool _tmpMirror;$/;"	m	class:ServerPage	access:private
_toPort	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  quint16 _toPort;  \/**< End of a port range. *\/$/;"	m	class:Policy	access:private
_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestCase	access:private
_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestSuite	access:private
_torControl	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TorControl * _torControl;$/;"	m	class:BootstrapTestTorKiller	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorControl* _torControl;$/;"	m	class:MainWindow	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^TorControl* Vidalia::_torControl = 0;  \/**< Main TorControl object.          *\/$/;"	m	class:Vidalia	file:
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static TorControl* _torControl;      \/**< Vidalia's main TorControl object.*\/$/;"	m	class:Vidalia	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  TorControl* _torControl;$/;"	m	class:BandwidthGraph	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  TorControl* _torControl;$/;"	m	class:AbstractTorSettings	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  TorControl* _torControl;$/;"	m	class:MessageLog	access:private
_torControl	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  TorControl* _torControl;$/;"	m	class:NetViewer	access:private
_torKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool _torKilled;$/;"	m	class:BootstrapTestTorKiller	access:private
_torKiller	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  BootstrapTestTorKiller * _torKiller;$/;"	m	class:BootstrapTestCase	access:private
_torOpts	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorOpt> _torOpts;$/;"	m	class:TorrcParser	access:private
_torProcess	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorProcess* _torProcess;$/;"	m	class:TorControl	access:private
_torService	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  TorService* _torService;$/;"	m	class:TorControl	access:private
_torSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  TorSettings *_torSettings;$/;"	m	class:GeneralPage	access:private
_torVersion	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString _torVersion;      \/**< The Tor version in the PROTOCOLINFO reply. *\/$/;"	m	class:ProtocolInfo	access:private
_torVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString _torVersion;$/;"	m	class:TorControl	access:private
_torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Torrc* Vidalia::_torrc = 0;            \/**< Main Torrc object.               *\/$/;"	m	class:Vidalia	file:
_torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Torrc* _torrc;      \/**< Vidalia's main Torrc object.     *\/$/;"	m	class:Vidalia	access:private
_torrcMap	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QMap<QString, QPair<QString,TorOpt> > _torrcMap;$/;"	m	class:Torrc	access:private
_torrcPath	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QString _torrcPath;$/;"	m	class:Torrc	access:private
_totalRecv	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _totalRecv;$/;"	m	class:GraphFrame	access:private
_totalSend	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  qreal _totalSend;$/;"	m	class:GraphFrame	access:private
_translators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^QList<QTranslator *> Vidalia::_translators;$/;"	m	class:Vidalia	file:
_translators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QList<QTranslator *> _translators; \/**< List of installed translators. *\/$/;"	m	class:Vidalia	access:private
_trayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QSystemTrayIcon _trayIcon;$/;"	m	class:MainWindow	access:private
_type	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  OptType _type;$/;"	m	class:TorOpt	access:private
_updateProcess	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  UpdateProcess _updateProcess;$/;"	m	class:MainWindow	access:private
_updateProgressDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  UpdateProgressDialog _updateProgressDialog;$/;"	m	class:MainWindow	access:private
_updateTimer	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QTimer _updateTimer;$/;"	m	class:MainWindow	access:private
_upnp	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  UPNPControl *_upnp;$/;"	m	class:UPNPTestDialog	access:private
_upnpInitialized	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QTime _upnpInitialized; \/**< Time at which the UPnP state was last set. *\/$/;"	m	class:UPNPControlThread	access:private
_uptime	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 _uptime;         \/**< Time the router has been online. *\/$/;"	m	class:RouterDescriptor	access:private
_useLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  bool _useLocalDatabase;$/;"	m	class:GeoIpResolver	access:private
_useSavedPassword	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool _useSavedPassword;$/;"	m	class:MainWindow	access:private
_valid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool _valid;   \/**< True if this object is a valid RouterStatus. *\/$/;"	m	class:RouterStatus	access:private
_value	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  QString _value;$/;"	m	class:LogFilterSearchTerm::ExpTree	file:	access:private
_version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString _version;$/;"	m	class:PackageInfo	access:private
_vidaliaSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  VidaliaSettings *_vidaliaSettings;$/;"	m	class:GeneralPage	access:private
_view	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  QRect _view;      \/**< The displayed viewport. *\/$/;"	m	class:ZImageView	access:private
_volatileSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QMap<QString, QVariant> _volatileSettings;$/;"	m	class:VSettings	access:private
_waitCond	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      QWaitCondition _waitCond; \/**< Waits for a control rpely. *\/$/;"	m	class:ControlConnection::ReceiveWaiter	access:private
_waitCond	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    QWaitCondition _waitCond; \/**< Waits for the send to complete. *\/$/;"	m	class:SendCommandEvent::SendWaiter	access:private
_waitCondition	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QWaitCondition *_waitCondition; \/**< Used to wake up the control thread. *\/$/;"	m	class:UPNPControlThread	access:private
_waitMutex	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  QMutex *_waitMutex; \/**< Mutex around shared variables. *\/$/;"	m	class:UPNPControlThread	access:private
_waiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendWaiter* _waiter; \/**< SendWaiter for the result of this event. *\/$/;"	m	class:SendCommandEvent	access:private
_warning	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString _warning;$/;"	m	class:BootstrapStatus	access:private
_widget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  TorMapWidget *_widget;$/;"	m	class:TorMapWidgetPopupMenu	access:private
_withNetwork	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  bool _withPanic, _withNetwork;$/;"	m	class:FirstRunWizard	access:private
_withPanic	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  bool _withPanic, _withNetwork;$/;"	m	class:FirstRunWizard	access:private
_wizard	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  FirstRunWizard *_wizard; \/**< Wizard displayed when running Vidalia for the first time *\/$/;"	m	class:MainWindow	access:private
_zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  float _zoom;     \/**< The current zoom level. *\/$/;"	m	class:ZImageView	access:private
aboutToQuit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::aboutToQuit()$/;"	f	class:MainWindow	signature:()
aboutToQuit	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void aboutToQuit();$/;"	p	class:MainWindow	access:private	signature:()
above	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^If you find an error message like the one above, you will need to stop the other$/;"	v
above	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/troubleshooting.html	/^If you find an error message like the one above, you will need to stop the other$/;"	v
above	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/troubleshooting.html	/^If you find an error message like the one above, you will need to stop the other$/;"	v
accept	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::accept()$/;"	f	class:CrashReportDialog	signature:()
accept	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  virtual void accept();$/;"	p	class:CrashReportDialog	access:public	signature:()
acceptsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::acceptsPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
acceptsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool acceptsPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
accountingMaxAmount	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingMaxAmount()$/;"	f	class:ServerSettings	signature:()
accountingMaxAmount	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  int accountingMaxAmount();$/;"	p	class:ServerSettings	access:public	signature:()
accountingMaxUnit	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingMaxUnit()$/;"	f	class:ServerSettings	signature:()
accountingMaxUnit	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingMaxUnit();$/;"	p	class:ServerSettings	access:public	signature:()
accountingStartDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartDay()$/;"	f	class:ServerSettings	signature:()
accountingStartDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  int accountingStartDay();$/;"	p	class:ServerSettings	access:public	signature:()
accountingStartDwm	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartDwm()$/;"	f	class:ServerSettings	signature:()
accountingStartDwm	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingStartDwm();$/;"	p	class:ServerSettings	access:public	signature:()
accountingStartTime	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::accountingStartTime()$/;"	f	class:ServerSettings	signature:()
accountingStartTime	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  const QString accountingStartTime();$/;"	p	class:ServerSettings	access:public	signature:()
action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::action() const$/;"	f	class:Policy	signature:() const
action	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString action() const;$/;"	p	class:Policy	access:public	signature:() const
actionFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::actionFromString(const QString &str)$/;"	f	class:BootstrapStatus	signature:(const QString &str)
actionFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  static Recommendation actionFromString(const QString &str);$/;"	p	class:BootstrapStatus	access:public	signature:(const QString &str)
add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::add(const QString &from, const QString &to,$/;"	f	class:AddressMap	signature:(const QString &from, const QString &to, const QDateTime &expires)
add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::add(const QString &mapping)$/;"	f	class:AddressMap	signature:(const QString &mapping)
add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  void add(const QString &from, const QString &to, const QDateTime &expires);$/;"	p	class:AddressMap	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
add	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  void add(const QString &mapping);$/;"	p	class:AddressMap	access:public	signature:(const QString &mapping)
add	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::add(ConfigPage *page, QAction *action)$/;"	f	class:ConfigPageStack	signature:(ConfigPage *page, QAction *action)
add	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void add(ConfigPage *page, QAction *action);$/;"	p	class:ConfigPageStack	access:public	signature:(ConfigPage *page, QAction *action)
addAcceptedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addAcceptedPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
addAcceptedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addAcceptedPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
addAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::addAction(QAction *action, const char *slot)$/;"	f	class:ConfigDialog	signature:(QAction *action, const char *slot)
addAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void addAction(QAction *action, const char *slot = 0);$/;"	p	class:ConfigDialog	access:private	signature:(QAction *action, const char *slot = 0)
addArgument	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::addArgument(const QString &arg)$/;"	f	class:ControlCommand	signature:(const QString &arg)
addArgument	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void addArgument(const QString &arg);$/;"	p	class:ControlCommand	access:public	signature:(const QString &arg)
addArguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::addArguments(const QStringList &args)$/;"	f	class:ControlCommand	signature:(const QStringList &args)
addArguments	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void addArguments(const QStringList &args);$/;"	p	class:ControlCommand	access:public	signature:(const QStringList &args)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QPixmap &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &pixmap, const QPixmap &badge)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QPixmap &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &pixmap, const QString &badge)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addBadgeToPixmap(const QString &pixmap,$/;"	f	class:StatusEventWidget	signature:(const QString &pixmap, const QString &badge)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QPixmap &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &pixmap, const QPixmap &badge)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QPixmap &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &pixmap, const QString &badge)
addBadgeToPixmap	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  static QPixmap addBadgeToPixmap(const QString &pixmap,$/;"	p	class:StatusEventWidget	access:private	signature:(const QString &pixmap, const QString &badge)
addBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::addBridge()$/;"	f	class:NetworkPage	signature:()
addBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void addBridge();$/;"	p	class:NetworkPage	access:private	signature:()
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::addCircuit(const Circuit &circuit)$/;"	f	class:CircuitListWidget	signature:(const Circuit &circuit)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void addCircuit(const Circuit &circuit);$/;"	p	class:CircuitListWidget	access:public	signature:(const Circuit &circuit)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addCircuit(const Circuit &circuit)$/;"	f	class:NetViewer	signature:(const Circuit &circuit)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addCircuit(const Circuit &circuit);$/;"	p	class:NetViewer	access:public	signature:(const Circuit &circuit)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::addCircuit(const CircuitId &circid, const QStringList &path)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid, const QStringList &path)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void addCircuit(const CircuitId &circid, const QStringList &path);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid, const QStringList &path)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::addCircuit(const CircuitId &circid, const QStringList &path)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid, const QStringList &path)
addCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void addCircuit(const CircuitId &circid, const QStringList &path);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid, const QStringList &path)
addLogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::addLogTreeItem(LogTreeItem *item)$/;"	f	class:LogTreeWidget	signature:(LogTreeItem *item)
addLogTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void addLogTreeItem(LogTreeItem *item);$/;"	p	class:LogTreeWidget	access:private	signature:(LogTreeItem *item)
addNotification	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::addNotification(const QPixmap &icon,$/;"	f	class:StatusEventWidget	signature:(const QPixmap &icon, const QString &title, const QString &description, const QString &helpUrl)
addNotification	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void addNotification(const QPixmap &icon,$/;"	p	class:StatusEventWidget	access:private	signature:(const QPixmap &icon, const QString &title, const QString &description, const QString &helpUrl = QString())
addPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::addPoints(qreal recv, qreal send)$/;"	f	class:GraphFrame	signature:(qreal recv, qreal send)
addPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void addPoints(qreal recv, qreal send);$/;"	p	class:GraphFrame	access:public	signature:(qreal recv, qreal send)
addPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addPolicy(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
addPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addPolicy(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
addRejectedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::addRejectedPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
addRejectedPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void addRejectedPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addRouter(const RouterDescriptor &rd)$/;"	f	class:NetViewer	signature:(const RouterDescriptor &rd)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addRouter(const RouterDescriptor &rd);$/;"	p	class:NetViewer	access:public	signature:(const RouterDescriptor &rd)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::addRouter(const RouterDescriptor &rd)$/;"	f	class:RouterListWidget	signature:(const RouterDescriptor &rd)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListItem* addRouter(const RouterDescriptor &rd);$/;"	p	class:RouterListWidget	access:public	signature:(const RouterDescriptor &rd)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip)$/;"	f	class:TorMapImageView	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip);$/;"	p	class:TorMapImageView	access:public	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip)$/;"	f	class:TorMapWidget	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
addRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void addRouter(const RouterDescriptor &desc, const GeoIpRecord &geoip);$/;"	p	class:TorMapWidget	access:public	signature:(const RouterDescriptor &desc, const GeoIpRecord &geoip)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::addStream(StreamItem *stream)$/;"	f	class:CircuitItem	signature:(StreamItem *stream)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void addStream(StreamItem *stream);$/;"	p	class:CircuitItem	access:public	signature:(StreamItem *stream)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::addStream(const Stream &stream)$/;"	f	class:CircuitListWidget	signature:(const Stream &stream)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void addStream(const Stream &stream);$/;"	p	class:CircuitListWidget	access:public	signature:(const Stream &stream)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addStream(const Stream &stream)$/;"	f	class:NetViewer	signature:(const Stream &stream)
addStream	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addStream(const Stream &stream);$/;"	p	class:NetViewer	access:public	signature:(const Stream &stream)
addTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::addTab(VidaliaTab *tab)$/;"	f	class:MainWindow	signature:(VidaliaTab *tab)
addTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void addTab(VidaliaTab *tab);$/;"	p	class:MainWindow	access:private	signature:(VidaliaTab *tab)
addToQueue	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^addToQueue(QList<QString>& queue, QString& token)$/;"	f	signature:(QList<QString>& queue, QString& token)
addfunc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^addfunc(void *cbdata,$/;"	f	signature:(void *cbdata, QDomElement e)
address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::address() const$/;"	f	class:Policy	signature:() const
address	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString address() const;$/;"	p	class:Policy	access:public	signature:() const
address	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/config.html	/^    their address, port number, and fingerprint.<br\/>$/;"	v
address	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/config.html	/^    their address, port number, and fingerprint.<br>$/;"	v
addressMapped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorControl	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
addressMapped	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorEvents	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::addressMapped(const QString &from, const QString &to,$/;"	f	class:NetViewer	signature:(const QString &from, const QString &to, const QDateTime &expires)
addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:NetViewer	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
addressMapped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void addressMapped(const QString &from, const QString &to,$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &from, const QString &to, const QDateTime &expires)
addresses	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/bridges.html	/^it harder for an attacker to learn lots of bridge addresses, you must send$/;"	v
addresses	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/bridges.html	/^attacker to learn lots of bridge addresses, you must send this request from$/;"	v
addresses	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/bridges.html	/^it harder for an attacker to learn lots of bridge addresses, you must send$/;"	v
adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::adjustUptime(quint64 uptime, QDateTime published)$/;"	f	class:RouterDescriptorView	signature:(quint64 uptime, QDateTime published)
adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  quint64 adjustUptime(quint64 uptime, QDateTime published);$/;"	p	class:RouterDescriptorView	access:private	signature:(quint64 uptime, QDateTime published)
adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::adjustUptime(quint64 uptime, const QDateTime &published)$/;"	f	class:RouterInfoDialog	signature:(quint64 uptime, const QDateTime &published)
adjustUptime	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  quint64 adjustUptime(quint64 uptime, const QDateTime &published);$/;"	p	class:RouterInfoDialog	access:private	signature:(quint64 uptime, const QDateTime &published)
algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  int algo();$/;"	p	class:X	file:	access:public	signature:()
algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^int X::algo()$/;"	f	class:X	signature:()
algo	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  int algo();$/;"	p	class:X	file:	access:public	signature:()
algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  void algoMas(int m);$/;"	p	class:X	file:	access:public	signature:(int m)
algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^void X::algoMas(int m)$/;"	f	class:X	signature:(int m)
algoMas	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  void algoMas(int m);$/;"	p	class:X	file:	access:public	signature:(int m)
allEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::allEvents() const$/;"	f	class:StatusEventWidget	signature:() const
allEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QStringList allEvents() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
allMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::allMessages() const$/;"	f	class:LogTreeWidget	signature:() const
allMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QStringList allMessages() const;$/;"	p	class:LogTreeWidget	access:public	signature:() const
allSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::allSettings() const$/;"	f	class:VSettings	signature:() const
allSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QMap<QString, QVariant> allSettings() const;$/;"	p	class:VSettings	access:protected	signature:() const
allowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::allowPanic() const$/;"	f	class:VidaliaSettings	signature:() const
allowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool allowPanic() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
an	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    wollen, geben Sie entweder ein Verzeichnis und einen Dateinamen an, oder$/;"	v
an	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^Eine h&ouml;her gewichtete Nachricht deutet normalerweise an, dass etwas mit Tor$/;"	v
angeben	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    angeben, wird Tor mit den Rechten dieses Benutzers ausge&uuml;hrt$/;"	v
angeben	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Port angeben, falls ein anderer Dienst auf Ihrem Rechner ebenfalls diesen$/;"	v
appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::appendData(const QString &data)$/;"	f	class:ControlCommand	signature:(const QString &data)
appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void appendData(const QString &data);$/;"	p	class:ControlCommand	access:public	signature:(const QString &data)
appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::appendData(const QString &data)$/;"	f	class:ReplyLine	signature:(const QString &data)
appendData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void appendData(const QString &data);$/;"	p	class:ReplyLine	access:public	signature:(const QString &data)
appendLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::appendLine(ReplyLine line)$/;"	f	class:ControlReply	signature:(ReplyLine line)
appendLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  void appendLine(ReplyLine line);$/;"	p	class:ControlReply	access:public	signature:(ReplyLine line)
appendRouterStatusInfo	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::appendRouterStatusInfo(const RouterStatus &rs)$/;"	f	class:RouterDescriptor	signature:(const RouterStatus &rs)
appendRouterStatusInfo	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void appendRouterStatusInfo(const RouterStatus &rs);$/;"	p	class:RouterDescriptor	access:public	signature:(const RouterStatus &rs)
append_string	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^append_string(_char_t *dst, const _char_t *src, size_t siz)$/;"	f	namespace:CrashReporter	signature:(_char_t *dst, const _char_t *src, size_t siz)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual bool apply(QString *errmsg) = 0;$/;"	p	class:AbstractTorSettings	access:public	signature:(QString *errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::apply(QString &errmsg)$/;"	f	class:AdvancedPage	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:AdvancedPage	access:public	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool apply(QString &errmsg) {$/;"	f	class:ConfigPage	access:public	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::apply(QString &errmsg)$/;"	f	class:NetworkPage	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:NetworkPage	access:public	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::apply(QString *errmsg)$/;"	f	class:NetworkSettings	signature:(QString *errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:NetworkSettings	access:public	signature:(QString *errmsg = 0)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::apply(QString &errmsg)$/;"	f	class:ServerPage	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool apply(QString &errmsg);$/;"	p	class:ServerPage	access:public	signature:(QString &errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::apply(QString *errmsg)$/;"	f	class:ServerSettings	signature:(QString *errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:ServerSettings	access:public	signature:(QString *errmsg = 0)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::apply(QString *errmsg)$/;"	f	class:TorSettings	signature:(QString *errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool apply(QString *errmsg = 0);$/;"	p	class:TorSettings	access:public	signature:(QString *errmsg = 0)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::apply(TorControl *tc, QString *errmsg)$/;"	f	class:Torrc	signature:(TorControl *tc, QString *errmsg)
apply	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool apply(TorControl *tc = 0, QString *errmsg = 0);$/;"	p	class:Torrc	access:public	signature:(TorControl *tc = 0, QString *errmsg = 0)
applyChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::applyChanges()$/;"	f	class:ConfigDialog	signature:()
applyChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void applyChanges();$/;"	p	class:ConfigDialog	access:private	signature:()
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QHostAddress &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QHostAddress &a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QString &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QString &a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(const QStringList &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QStringList &a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(int a)$/;"	f	class:Log::LogMessage	access:public	signature:(int a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(long a)$/;"	f	class:Log::LogMessage	access:public	signature:(long a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(qlonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qlonglong a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(qulonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qulonglong a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(short a)$/;"	f	class:Log::LogMessage	access:public	signature:(short a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(uint a)$/;"	f	class:Log::LogMessage	access:public	signature:(uint a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(ulong a)$/;"	f	class:Log::LogMessage	access:public	signature:(ulong a)
arg	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage arg(ushort a)$/;"	f	class:Log::LogMessage	access:public	signature:(ushort a)
arg	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage arg(const QString &a)$/;"	f	class:tc::DebugMessage	access:public	signature:(const QString &a)
arg	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage arg(int a)$/;"	f	class:tc::DebugMessage	access:public	signature:(int a)
argNeedsValue	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::argNeedsValue(QString argName)$/;"	f	class:Vidalia	signature:(QString argName)
argNeedsValue	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool argNeedsValue(QString argName);$/;"	p	class:Vidalia	access:private	signature:(QString argName)
attachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::attachTab()$/;"	f	class:MainWindow	signature:()
attachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void attachTab();$/;"	p	class:MainWindow	access:private	signature:()
attachTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void attachTab();$/;"	p	class:VAttachButton	access:public	signature:()
attfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*attfunc) (void *, const char *, int, const char *, int);$/;"	m	struct:xmlparser	access:public
aufzuzeichnen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    Nachrichten aufzuzeichnen, wenn Sie wissen, was Sie tun.$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    <i>Start<\/i> aus dem Tray-Men&uuml; ausw&auml;hlen. Falls Sie mehrere$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    die <i>W&auml;hlen<\/i> Schaltfl&auml;che die Tor-Version ausw&auml;hlen, die$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^Vidalia erm&ouml;glicht es Ihnen die am gebr&auml;chlisten Einstellungen$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^Sie k&ouml;nnen oben die Schaltfl&auml;che <i>Suchen<\/i> benutzen, um$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^W&auml;hlen Sie ein Hilfe-Thema aus der Liste von der linken Seite oder$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Debug<\/b>: Sehr ausf&uuml;hrliche Nachrichten, die haupts&auml;chlich$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Hinweis<\/b>: Nachrichten, die unregelm&auml;&szlig;ig w&auml;hrend des$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Info<\/b>: Nachrichten, die regelm&auml;&szlig;ig w&auml;hrend des$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    klicken Sie auf <i>&Ouml;ffnen<\/i>, um eine Datei auszuw&auml;hlen.$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^w&auml;hrend des Tor-Betriebs und m&uuml;ssen normalerweise nicht aufgezeichnet$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^		  etwas mit Ihrem Server schief l&auml;ft. Sie k&ouml;nnen$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^        k&ouml;nnen Sie auf die Schaltfl&auml;che <i>Adresse<\/i> klicken,$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^<a href="log.html">Nachrichtenprotokoll<\/a> auf Fehler w&auml;hrend des$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls Tor sofort nach dem Start beendet wird, l&auml;uft wahrscheinlich$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Meldungen gelb hervorgehoben ist und eine Nachricht &auml;hnlich der folgenden$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Nachfolgend sind einige der h&auml;ufigsten Probleme und Fragen zum Betrieb$/;"	v
auml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^enth&auml;lt:$/;"	v
aus	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    W&auml;hlen Sie unter <i>Nachrichtenfilter<\/i> die Nachrichten aus, die$/;"	v
ausreichend	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^F&uuml;r die meisten Nutzer ist es ausreichend, nur Nachrichten der Gewichtung$/;"	v
authMethodChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::authMethodChanged(int index)$/;"	f	class:AdvancedPage	signature:(int index)
authMethodChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void authMethodChanged(int index);$/;"	p	class:AdvancedPage	access:private	signature:(int index)
authMethodToIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::authMethodToIndex(TorSettings::AuthenticationMethod method)$/;"	f	class:AdvancedPage	signature:(TorSettings::AuthenticationMethod method)
authMethodToIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  int authMethodToIndex(TorSettings::AuthenticationMethod method);$/;"	p	class:AdvancedPage	access:private	signature:(TorSettings::AuthenticationMethod method)
authMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QStringList authMethods() const { return _authMethods; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::authenticate(const QByteArray cookie, QString *errmsg)$/;"	f	class:TorControl	signature:(const QByteArray cookie, QString *errmsg)
authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::authenticate(const QString &password, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &password, QString *errmsg)
authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool authenticate(const QByteArray cookie, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QByteArray cookie, QString *errmsg = 0)
authenticate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool authenticate(const QString &password = QString(), QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &password = QString(), QString *errmsg = 0)
authenticate	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticate()$/;"	f	class:MainWindow	signature:()
authenticate	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticate();$/;"	p	class:MainWindow	access:private	signature:()
authenticate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant authenticate(const QByteArray cookie);$/;"	p	class:TorControlPrototype	access:public	signature:(const QByteArray cookie)
authenticate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant authenticate(const QString &password = QString());$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &password = QString())
authenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void authenticated();$/;"	p	class:TorControl	access:public	signature:()
authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticated()$/;"	f	class:MainWindow	signature:()
authenticated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticated();$/;"	p	class:MainWindow	access:private	signature:()
authenticated	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::authenticated()$/;"	f	class:StatusEventWidget	signature:()
authenticated	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void authenticated();$/;"	p	class:StatusEventWidget	access:private	signature:()
authenticated	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void authenticated();$/;"	p	class:TorControlPrototype	access:public	signature:()
authenticationFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::authenticationFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
authenticationFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void authenticationFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::author() const$/;"	f	class:PluginWrapper	signature:() const
author	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString author() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
autoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::autoControlPort() const$/;"	f	class:TorSettings	signature:() const
autoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool autoControlPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
averageBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 averageBandwidth() const { return _avgBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
b	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^b(QString str)$/;"	f	signature:(QString str)
b	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString b(QString str);$/;"	p	signature:(QString str)
bandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint64 bandwidth() const { return _bandwidth; }$/;"	f	class:RouterStatus	access:public	signature:() const
bandwidthHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::bandwidthHelp()$/;"	f	class:ServerPage	signature:()
bandwidthHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void bandwidthHelp();$/;"	p	class:ServerPage	access:private	signature:()
bandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorControl	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
bandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorEvents	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
bandwidthUpdate	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bandwidthUpdate(quint64 bytesReceived, quint64 bytesSent);$/;"	p	class:TorControlPrototype	access:public	signature:(quint64 bytesReceived, quint64 bytesSent)
base16_encode	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^base16_encode(const QByteArray &buf)$/;"	f	signature:(const QByteArray &buf)
base16_encode	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString base16_encode(const QByteArray &buf);$/;"	p	signature:(const QByteArray &buf)
beenden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/running.html	/^Ihnen Tor zu starten und zu beenden, zeigt Statusinformationen an und$/;"	v
benutzen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^Sie k&ouml;nnen oben die Schaltfl&auml;che <i>Suchen<\/i> benutzen, um$/;"	v
bootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::bootstrap() const$/;"	f	class:TorSettings	signature:() const
bootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool bootstrap() const;$/;"	p	class:TorSettings	access:public	signature:() const
bootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::bootstrapFrom() const$/;"	f	class:TorSettings	signature:() const
bootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString bootstrapFrom() const;$/;"	p	class:TorSettings	access:public	signature:() const
bootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::bootstrapStatus(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
bootstrapStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  BootstrapStatus bootstrapStatus(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::bootstrapStatusChanged(const BootstrapStatus &bs)$/;"	f	class:BootstrapTestTorKiller	signature:(const BootstrapStatus &bs)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void bootstrapStatusChanged(const BootstrapStatus &bs);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(const BootstrapStatus &bs)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorControl	access:public	signature:(const BootstrapStatus &status)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorEvents	access:public	signature:(const BootstrapStatus &status)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::bootstrapStatusChanged(const BootstrapStatus &bs)$/;"	f	class:MainWindow	signature:(const BootstrapStatus &bs)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void bootstrapStatusChanged(const BootstrapStatus &bs);$/;"	p	class:MainWindow	access:private	signature:(const BootstrapStatus &bs)
bootstrapStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bootstrapStatusChanged(const BootstrapStatus &status);$/;"	p	class:TorControlPrototype	access:public	signature:(const BootstrapStatus &status)
box	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/log.html	/^    either type the path and filename into the text box, or click <i>Browse<\/i>$/;"	v
box	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/log.html	/^    either type the path and filename into the text box, or click <i>Bl√§ddra<\/i>$/;"	v
bridgeContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::bridgeContextMenuRequested(const QPoint &pos)$/;"	f	class:NetworkPage	signature:(const QPoint &pos)
bridgeContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void bridgeContextMenuRequested(const QPoint &pos);$/;"	p	class:NetworkPage	access:private	signature:(const QPoint &pos)
bridgeSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::bridgeSelectionChanged()$/;"	f	class:NetworkPage	signature:()
bridgeSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void bridgeSelectionChanged();$/;"	p	class:NetworkPage	access:private	signature:()
bridges	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/bridges.html	/^To use private bridges, ask your friends to run Vidalia and Tor in an$/;"	v
bridges	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/bridges.html	/^To use private bridges, ask your friends to run Vidalia and Tor in an$/;"	v
browse	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::browse()$/;"	f	class:MessageLog	signature:()
browse	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void browse();$/;"	p	class:MessageLog	access:private	signature:()
browseExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::browseExecutable(const QString &caption, const QString &file)$/;"	f	class:GeneralPage	signature:(const QString &caption, const QString &file)
browseExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  QString browseExecutable(const QString &caption,$/;"	p	class:GeneralPage	access:private	signature:(const QString &caption, const QString &file = QString())
browsePanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browsePanicPath()$/;"	f	class:AdvancedPage	signature:()
browsePanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browsePanicPath();$/;"	p	class:AdvancedPage	access:private	signature:()
browseSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseSocketPath()$/;"	f	class:AdvancedPage	signature:()
browseSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseSocketPath();$/;"	p	class:AdvancedPage	access:private	signature:()
browseTorConfig	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseTorConfig()$/;"	f	class:AdvancedPage	signature:()
browseTorConfig	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseTorConfig();$/;"	p	class:AdvancedPage	access:private	signature:()
browseTorDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::browseTorDataDirectory()$/;"	f	class:AdvancedPage	signature:()
browseTorDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void browseTorDataDirectory();$/;"	p	class:AdvancedPage	access:private	signature:()
browseTorExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::browseTorExecutable()$/;"	f	class:GeneralPage	signature:()
browseTorExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void browseTorExecutable();$/;"	p	class:GeneralPage	access:private	signature:()
buf	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    QString buf;$/;"	m	struct:Log::LogMessage::Stream	access:public
buf	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      QString buf;    \/**< Log message buffer. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
buffer	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char buffer[2];$/;"	m	struct:UPNPDev	access:public
bug	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void bug(const QString &reason);$/;"	p	class:TorControl	access:public	signature:(const QString &reason)
bug	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void bug(const QString &reason);$/;"	p	class:TorEvents	access:public	signature:(const QString &reason)
bug	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::bug(const QString &description)$/;"	f	class:StatusEventWidget	signature:(const QString &description)
bug	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void bug(const QString &reason);$/;"	p	class:StatusEventWidget	access:private	signature:(const QString &reason)
bug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void bug(const QString &reason);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &reason)
buildFlags	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlags buildFlags() const { return _buildFlags; }$/;"	f	class:Circuit	access:public	signature:() const
buildGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::buildGUI()$/;"	f	class:PluginWrapper	signature:()
buildGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    VidaliaTab *buildGUI();$/;"	p	class:PluginWrapper	access:public	signature:()
buildMessageFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::buildMessageFilter(const QString &input)$/;"	f	class:MessageLog	signature:(const QString &input)
buildMessageFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void buildMessageFilter(const QString& input);$/;"	p	class:MessageLog	access:private	signature:(const QString& input)
buildVersion	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char buildVersion[MAX_VERSION_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
bundleInfoToString	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::bundleInfoToString(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
bundleInfoToString	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  QString bundleInfoToString(BundleInfo bundleInfo);$/;"	p	class:UpdateProcess	access:protected	signature:(BundleInfo bundleInfo)
burstBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 burstBandwidth() const { return _burstBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
buttonText	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::buttonText(int btn)$/;"	f	class:VMessageBox	signature:(int btn)
buttonText	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static QString buttonText(int button);$/;"	p	class:VMessageBox	access:public	signature:(int button)
c	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/jm.png	/^ã-ÏÏËcûjÈùñÁÎ„ldÏöí[:°å/;"	v
c	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/qa.png	/^/;"	v
canEncode	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::canEncode(const QString &input)$/;"	f	class:Local8BitStringValidator	signature:(const QString &input)
canEncode	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  static bool canEncode(const QString &input);$/;"	p	class:Local8BitStringValidator	access:public	signature:(const QString &input)
canReadLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::canReadLine() const$/;"	f	class:ControlSocket	signature:() const
canReadLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool canReadLine() const;$/;"	p	class:ControlSocket	access:public	signature:() const
cancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::cancel()$/;"	f	class:UpdateProcess	signature:()
cancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void cancel();$/;"	p	class:UpdateProcess	access:public	signature:()
cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::cancelChanges()$/;"	f	class:BandwidthGraph	signature:()
cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void cancelChanges();$/;"	p	class:BandwidthGraph	access:private	signature:()
cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::cancelChanges()$/;"	f	class:MessageLog	signature:()
cancelChanges	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void cancelChanges();$/;"	p	class:MessageLog	access:private	signature:()
cancelConnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::cancelConnect()$/;"	f	class:ControlConnection	signature:()
cancelConnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void cancelConnect();$/;"	p	class:ControlConnection	access:public	signature:()
cancelUpdate	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void cancelUpdate();$/;"	p	class:UpdateProgressDialog	access:public	signature:()
censura	/Users/chiiph/Code/vidalia/src/vidalia/help/content/es/bridges.html	/^en una parte del internet sin censura, y luego haz clic en <i>Ayudar$/;"	v
cgo	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/si.png	/^/;"	v
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::changeEvent(QEvent *e)$/;"	f	class:VTabWidget	signature:(QEvent *e)
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void changeEvent(QEvent *e);$/;"	p	class:VTabWidget	access:protected	signature:(QEvent *e)
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::changeEvent(QEvent *e)$/;"	f	class:VidaliaTab	signature:(QEvent *e)
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void changeEvent(QEvent *e);$/;"	p	class:VidaliaTab	access:protected	signature:(QEvent *e)
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::changeEvent(QEvent *e)$/;"	f	class:VidaliaWindow	signature:(QEvent *e)
changeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void changeEvent(QEvent *e);$/;"	p	class:VidaliaWindow	access:protected	signature:(QEvent *e)
changed	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool changed;$/;"	m	class:Torrc	access:private
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::changedSinceLastApply() const$/;"	f	class:AbstractTorSettings	signature:() const
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual bool changedSinceLastApply() const;$/;"	p	class:AbstractTorSettings	access:public	signature:() const
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::changedSinceLastApply()$/;"	f	class:AdvancedPage	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool changedSinceLastApply();$/;"	p	class:AdvancedPage	access:public	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool changedSinceLastApply() {$/;"	f	class:ConfigPage	access:public	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::changedSinceLastApply()$/;"	f	class:NetworkPage	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool changedSinceLastApply();$/;"	p	class:NetworkPage	access:public	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::changedSinceLastApply()$/;"	f	class:ServerPage	signature:()
changedSinceLastApply	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool changedSinceLastApply();$/;"	p	class:ServerPage	access:public	signature:()
char_array_to_stringlist	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^char_array_to_stringlist(char **arr, int len)$/;"	f	signature:(char **arr, int len)
char_array_to_stringlist	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QStringList char_array_to_stringlist(char **arr, int len);$/;"	p	signature:(char **arr, int len)
checkExceptions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::checkExceptions()$/;"	f	class:PluginWrapper	signature:()
checkExceptions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool checkExceptions();$/;"	p	class:PluginWrapper	access:protected	signature:()
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdates(bool showProgress)$/;"	f	class:MainWindow	signature:(bool showProgress)
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdates(bool showProgress = false);$/;"	p	class:MainWindow	access:private	signature:(bool showProgress = false)
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::checkForUpdates(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void checkForUpdates(BundleInfo bi);$/;"	p	class:UpdateProcess	access:public	signature:(BundleInfo bi)
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void checkForUpdates();$/;"	p	class:ConfigDialog	access:public	signature:()
checkForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void checkForUpdates();$/;"	p	class:GeneralPage	access:public	signature:()
checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdatesFailed(const QString &errmsg)$/;"	f	class:MainWindow	signature:(const QString &errmsg)
checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdatesFailed(const QString &errmsg);$/;"	p	class:MainWindow	access:private	signature:(const QString &errmsg)
checkForUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void checkForUpdatesFailed(QString errmsg);$/;"	p	class:UpdateProcess	access:public	signature:(QString errmsg)
checkForUpdatesInterval	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::checkForUpdatesInterval()$/;"	f	class:UpdateProcess	signature:()
checkForUpdatesInterval	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static int checkForUpdatesInterval();$/;"	p	class:UpdateProcess	access:public	signature:()
checkForUpdatesWithUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkForUpdatesWithUi()$/;"	f	class:MainWindow	signature:()
checkForUpdatesWithUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkForUpdatesWithUi();$/;"	p	class:MainWindow	access:private	signature:()
checkShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::checkShowOnStartup(bool check)$/;"	f	class:StatusTab	signature:(bool check)
checkShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void checkShowOnStartup(bool check);$/;"	p	class:StatusTab	access:public	signature:(bool check)
checkTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::checkTorVersion()$/;"	f	class:MainWindow	signature:()
checkTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void checkTorVersion();$/;"	p	class:MainWindow	access:private	signature:()
checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::checkingDirPortReachability(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
checkingDirPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void checkingDirPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::checkingOrPortReachability(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
checkingOrPortReachability	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void checkingOrPortReachability(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QChildEvent* arg__1)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void childEvent(QChildEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QChildEvent* arg__1)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QChildEvent* arg__1)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::childEvent(QChildEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QChildEvent* arg__1)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void childEvent(QChildEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QChildEvent* arg__1)
childEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void childEvent(QChildEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QChildEvent* arg__1)
circuit	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
circuit	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
circuit	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
circuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  Circuit circuit() const { return _circuit; }$/;"	f	class:CircuitItem	access:public	signature:() const
circuitBoundingBox	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::circuitBoundingBox()$/;"	f	class:TorMapImageView	signature:()
circuitBoundingBox	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QRectF circuitBoundingBox();$/;"	p	class:TorMapImageView	access:private	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void circuitEstablished();$/;"	p	class:TorControl	access:public	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void circuitEstablished();$/;"	p	class:TorEvents	access:public	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::circuitEstablished()$/;"	f	class:MainWindow	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void circuitEstablished();$/;"	p	class:MainWindow	access:private	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::circuitEstablished()$/;"	f	class:StatusEventWidget	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void circuitEstablished();$/;"	p	class:StatusEventWidget	access:private	signature:()
circuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void circuitEstablished();$/;"	p	class:TorControlPrototype	access:public	signature:()
circuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  CircuitId circuitId() const { return _circuitId; }$/;"	f	class:Stream	access:public	signature:() const
circuitRemoved	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void circuitRemoved(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void circuitSelected(Circuit circuit);$/;"	p	class:CircuitListWidget	access:public	signature:(Circuit circuit)
circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::circuitSelected(const Circuit &circuit)$/;"	f	class:NetViewer	signature:(const Circuit &circuit)
circuitSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void circuitSelected(const Circuit &circuit);$/;"	p	class:NetViewer	access:private	signature:(const Circuit &circuit)
circuitStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorControl	access:public	signature:(const Circuit &circuit)
circuitStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorEvents	access:public	signature:(const Circuit &circuit)
circuitStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void circuitStatusChanged(const Circuit &circuit);$/;"	p	class:TorControlPrototype	access:public	signature:(const Circuit &circuit)
circuits	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^your current circuits, as well as any application traffic currently on those$/;"	v
circuits	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^your current circuits, as well as any application traffic currently on those$/;"	v
circuits	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^your current circuits, as well as any application traffic currently on those$/;"	v
circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::circuits()$/;"	f	class:CircuitListWidget	signature:()
circuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  QList<Circuit> circuits();$/;"	p	class:CircuitListWidget	access:public	signature:()
city	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString city() const { return _city; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
cleanup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::cleanup()$/;"	f	class:UPNPControl	signature:()
cleanup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static void cleanup();$/;"	p	class:UPNPControl	access:public	signature:()
cleanupPortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::cleanupPortForwarding()$/;"	f	class:ServerSettings	signature:()
cleanupPortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void cleanupPortForwarding();$/;"	p	class:ServerSettings	access:public	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::clear(QStringList &keys)$/;"	f	class:Torrc	signature:(QStringList &keys)
clear	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void clear(QStringList &keys);$/;"	p	class:Torrc	access:public	signature:(QStringList &keys)
clear	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::clear()$/;"	f	class:MessageLog	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void clear();$/;"	p	class:MessageLog	access:private	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::clear()$/;"	f	class:NetViewer	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void clear();$/;"	p	class:NetViewer	access:public	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::clear()$/;"	f	class:TorMapImageView	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void clear();$/;"	p	class:TorMapImageView	access:public	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::clear()$/;"	f	class:TorMapWidget	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void clear();$/;"	p	class:TorMapWidget	access:public	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::clear()$/;"	f	class:DebugDialog	signature:()
clear	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void clear();$/;"	p	class:DebugDialog	access:public	signature:()
clearAll	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::clearAll()$/;"	f	class:Torrc	signature:()
clearAll	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void clearAll();$/;"	p	class:Torrc	access:public	signature:()
clearCache	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::clearCache()$/;"	f	class:BootstrapTestCase	signature:()
clearCache	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void clearCache();$/;"	p	class:BootstrapTestCase	access:private	signature:()
clearCircuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::clearCircuits()$/;"	f	class:CircuitListWidget	signature:()
clearCircuits	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void clearCircuits();$/;"	p	class:CircuitListWidget	access:public	signature:()
clearCommandQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::clearCommandQueue()$/;"	f	class:ControlConnection	signature:()
clearCommandQueue	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void clearCommandQueue();$/;"	p	class:ControlConnection	access:private	signature:()
clearErrState	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::clearErrState()$/;"	f	class:TorControl	signature:()
clearErrState	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void clearErrState();$/;"	p	class:TorControl	access:public	signature:()
clearMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::clearMessages()$/;"	f	class:LogTreeWidget	signature:()
clearMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void clearMessages();$/;"	p	class:LogTreeWidget	access:public	signature:()
clearRouters	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::clearRouters()$/;"	f	class:RouterListWidget	signature:()
clearRouters	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void clearRouters();$/;"	p	class:RouterListWidget	access:public	signature:()
clicked	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::clicked(QAbstractButton *button)$/;"	f	class:ControlPasswordInputDialog	signature:(QAbstractButton *button)
clicked	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void clicked(QAbstractButton *button);$/;"	p	class:ControlPasswordInputDialog	access:protected	signature:(QAbstractButton *button)
clicked	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::clicked(QAbstractButton *button)$/;"	f	class:UPNPTestDialog	signature:(QAbstractButton *button)
clicked	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void clicked(QAbstractButton *button);$/;"	p	class:UPNPTestDialog	access:protected	signature:(QAbstractButton *button)
clockSkewed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorControl	access:public	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorEvents	access:public	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::clockSkewed(int skew, const QString &source)$/;"	f	class:MainWindow	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:MainWindow	access:private	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::clockSkewed(int skew, const QString &source)$/;"	f	class:StatusEventWidget	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:StatusEventWidget	access:private	signature:(int skew, const QString &source)
clockSkewed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void clockSkewed(int skew, const QString &source);$/;"	p	class:TorControlPrototype	access:public	signature:(int skew, const QString &source)
close	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::close()$/;"	f	class:Log	signature:()
close	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  void close();$/;"	p	class:Log	access:public	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::close()$/;"	f	class:MainWindow	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void close();$/;"	p	class:MainWindow	access:private	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::close()$/;"	f	class:LogFile	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  void close();$/;"	p	class:LogFile	access:public	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::close()$/;"	f	class:GeoIpDatabase	signature:()
close	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  void close();$/;"	p	class:GeoIpDatabase	access:public	signature:()
closeCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeCircuit(const CircuitId &circId, bool ifUnused, QString *errmsg)$/;"	f	class:TorControl	signature:(const CircuitId &circId, bool ifUnused, QString *errmsg)
closeCircuit	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool closeCircuit(const CircuitId &circId, bool ifUnused = false,$/;"	p	class:TorControl	access:public	signature:(const CircuitId &circId, bool ifUnused = false, QString *errmsg = 0)
closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeCircuit(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::closeCircuit(const CircuitId &circId, bool ifUnused, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const CircuitId &circId, bool ifUnused, QString *errmsg)
closeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  bool closeCircuit(const CircuitId &circId, bool ifUnused = false,$/;"	p	class:TorControlPrototype	access:public	signature:(const CircuitId &circId, bool ifUnused = false, QString *errmsg = 0)
closeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::closeEvent(QCloseEvent *event)$/;"	f	class:VidaliaTab	signature:(QCloseEvent *event)
closeEvent	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void closeEvent(QCloseEvent *event);$/;"	p	class:VidaliaTab	access:protected	signature:(QCloseEvent *event)
closeHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::closeHandle(SC_HANDLE handle)$/;"	f	class:TorService	signature:(SC_HANDLE handle)
closeHandle	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static void closeHandle(SC_HANDLE handle);$/;"	p	class:TorService	access:private	signature:(SC_HANDLE handle)
closeSelectedConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::closeSelectedConnections()$/;"	f	class:CircuitListWidget	signature:()
closeSelectedConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeSelectedConnections();$/;"	p	class:CircuitListWidget	access:private	signature:()
closeStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::closeStdout()$/;"	f	class:TorProcess	signature:()
closeStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void closeStdout();$/;"	p	class:TorProcess	access:public	signature:()
closeStream	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeStream(const StreamId &streamId, QString *errmsg)$/;"	f	class:TorControl	signature:(const StreamId &streamId, QString *errmsg)
closeStream	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool closeStream(const StreamId &streamId, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const StreamId &streamId, QString *errmsg = 0)
closeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void closeStream(StreamId streamid);$/;"	p	class:CircuitListWidget	access:public	signature:(StreamId streamid)
closeStream	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::closeStream(const StreamId &streamId, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const StreamId &streamId, QString *errmsg)
closeStream	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  bool closeStream(const StreamId &streamId, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const StreamId &streamId, QString *errmsg = 0)
closeTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void closeTab();$/;"	p	class:VidaliaTab	access:public	signature:()
closeTorStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::closeTorStdout()$/;"	f	class:TorControl	signature:()
closeTorStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void closeTorStdout();$/;"	p	class:TorControl	access:public	signature:()
closeTorStdout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void closeTorStdout();$/;"	p	class:TorControlPrototype	access:public	signature:()
closesocket	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define closesocket /;"	d	file:
closesocket	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define closesocket /;"	d	file:
closesocket	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define closesocket /;"	d	file:
command	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  ControlCommand command() { return _cmd; }$/;"	f	class:SendCommandEvent	access:public	signature:()
comment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString comment()$/;"	f	class:TorrcLine	access:public	signature:()
compareStatusEventItems	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^bool compareStatusEventItems(const QTreeWidgetItem *a,$/;"	f	signature:(const QTreeWidgetItem *a, const QTreeWidgetItem *b)
completeness	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^For completeness, the following table lists the specific port numbers$/;"	v
completeness	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^For completeness, the following table lists the specific port numbers$/;"	v
compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::compress(const CompressionMethod method,$/;"	f	class:ZlibByteArray	signature:(const CompressionMethod method, QString *errmsg) const
compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::compress(const QByteArray in,$/;"	f	class:ZlibByteArray	signature:(const QByteArray in, const CompressionMethod method, QString *errmsg)
compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  QByteArray compress(const CompressionMethod method = Zlib,$/;"	p	class:ZlibByteArray	access:public	signature:(const CompressionMethod method = Zlib, QString *errmsg = 0) const
compress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QByteArray compress(const QByteArray in,$/;"	p	class:ZlibByteArray	access:public	signature:(const QByteArray in, const CompressionMethod method = Zlib, QString *errmsg = 0)
configChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void configChanged();$/;"	p	class:ConfigDialog	access:public	signature:()
configChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void configChanged();$/;"	p	class:ConfigPage	access:public	signature:()
configurePortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::configurePortForwarding()$/;"	f	class:ServerSettings	signature:()
configurePortForwarding	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void configurePortForwarding();$/;"	p	class:ServerSettings	access:public	signature:()
configurePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::configurePorts()$/;"	f	class:UPNPControlThread	signature:()
configurePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void configurePorts();$/;"	p	class:UPNPControlThread	access:private	signature:()
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect()$/;"	f	class:ControlConnection	signature:()
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect(const QHostAddress &addr, quint16 port)$/;"	f	class:ControlConnection	signature:(const QHostAddress &addr, quint16 port)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::connect(const QString &addr)$/;"	f	class:ControlConnection	signature:(const QString &addr)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect();$/;"	p	class:ControlConnection	access:private	signature:()
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect(const QHostAddress &addr, quint16 port);$/;"	p	class:ControlConnection	access:public	signature:(const QHostAddress &addr, quint16 port)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connect(const QString &addr);$/;"	p	class:ControlConnection	access:public	signature:(const QString &addr)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::connect(const QHostAddress &address, quint16 port)$/;"	f	class:TorControl	signature:(const QHostAddress &address, quint16 port)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::connect(const QString &path)$/;"	f	class:TorControl	signature:(const QString &path)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connect(const QHostAddress &address, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &address, quint16 port)
connect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connect(const QString &path);$/;"	p	class:TorControl	access:public	signature:(const QString &path)
connect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void connect(const QHostAddress &address, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &address, quint16 port)
connect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void connect(const QString &path);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &path)
connectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connectFailed(QString errmsg);$/;"	p	class:ControlConnection	access:public	signature:(QString errmsg)
connectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connectFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::connectFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void connectFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
connectFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void connectFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void connectToHost(const QHostAddress &address, quint16 port)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(const QHostAddress &address, quint16 port)
connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::connectToHost(const QHostAddress &address, quint16 port)$/;"	f	class:ControlSocket	signature:(const QHostAddress &address, quint16 port)
connectToHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connectToHost(const QHostAddress &address, quint16 port);$/;"	p	class:ControlSocket	access:public	signature:(const QHostAddress &address, quint16 port)
connectToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::connectToRemoteHost(const QString &remoteHost, quint16 remotePort)$/;"	f	class:TorSocket	signature:(const QString &remoteHost, quint16 remotePort)
connectToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectToRemoteHost(const QString &remoteHost, quint16 remotePort);$/;"	p	class:TorSocket	access:public	signature:(const QString &remoteHost, quint16 remotePort)
connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void connectToServer(const QString &name)$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:(const QString &name)
connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::connectToServer(const QString &name)$/;"	f	class:ControlSocket	signature:(const QString &name)
connectToServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connectToServer(const QString &name);$/;"	p	class:ControlSocket	access:public	signature:(const QString &name)
connectToTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::connectToTor()$/;"	f	class:MainWindow	signature:()
connectToTor	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void connectToTor();$/;"	p	class:MainWindow	access:private	signature:()
connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void connected();$/;"	p	class:ControlConnection	access:public	signature:()
connected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void connected();$/;"	p	class:ControlSocket	access:public	signature:()
connected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void connected();$/;"	p	class:TorControl	access:public	signature:()
connected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void connected();$/;"	p	class:TorControlPrototype	access:public	signature:()
connectedToProxy	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::connectedToProxy()$/;"	f	class:TorSocket	signature:()
connectedToProxy	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectedToProxy();$/;"	p	class:TorSocket	access:private	signature:()
connectedToRemoteHost	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void connectedToRemoteHost();$/;"	p	class:TorSocket	access:public	signature:()
connecthostport	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^int connecthostport(const char * host, unsigned short port)$/;"	f	signature:(const char * host, unsigned short port)
connecthostport	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.h	/^int connecthostport(const char * host, unsigned short port);$/;"	p	signature:(const char * host, unsigned short port)
connectionStatusReasonFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^connectionStatusReasonFromString(const QString &str)$/;"	f	namespace:tc	signature:(const QString &str)
connectionStatusReasonFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  ConnectionStatusReason connectionStatusReasonFromString(const QString &str);$/;"	p	namespace:tc	signature:(const QString &str)
constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::constructor(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:HelperProcessPrototype	signature:(QScriptContext *context, QScriptEngine *engine)
constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static QScriptValue constructor(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:HelperProcessPrototype	access:public	signature:(QScriptContext *context, QScriptEngine *engine)
constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::constructor(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:VidaliaTabPrototype	signature:(QScriptContext *context, QScriptEngine *engine)
constructor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static QScriptValue constructor(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QScriptContext *context, QScriptEngine *engine)
contact	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString contact() const { return _contact; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
contains	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::contains(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
contains	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool contains(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
content	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString content()$/;"	f	class:TorrcLine	access:public	signature:()
contentsItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::contentsItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
contentsItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void contentsItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:RouterDescriptorView	signature:(QContextMenuEvent *event)
contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  virtual void contextMenuEvent(QContextMenuEvent *event);$/;"	p	class:RouterDescriptorView	access:protected	signature:(QContextMenuEvent *event)
contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:RouterListWidget	signature:(QContextMenuEvent *event)
contextMenuEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  virtual void contextMenuEvent(QContextMenuEvent *event);$/;"	p	class:RouterListWidget	access:protected	signature:(QContextMenuEvent *event)
controlURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * controlURL;$/;"	m	struct:UPNPUrls	access:public
controlURL_CIF	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * controlURL_CIF;$/;"	m	struct:UPNPUrls	access:public
controlurl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char controlurl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
convert_context	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^convert_context(const QDomElement &context, QString *po, QString *errorMessage)$/;"	f	signature:(const QDomElement &context, QString *po, QString *errorMessage)
cookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString cookieAuthFile() const { return _cookieAuthFile; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/bridges.po	/^No part of Vidalia, including this file, may be copied, modified, propagated, or$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/config.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/index.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/links.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/log.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/netview.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/running.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/server.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/services.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copied	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/troubleshooting.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
copy	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::copy()$/;"	f	class:MessageLog	signature:()
copy	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void copy();$/;"	p	class:MessageLog	access:private	signature:()
copyBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::copyBridgeIdentity()$/;"	f	class:ServerPage	signature:()
copyBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void copyBridgeIdentity();$/;"	p	class:ServerPage	access:private	signature:()
copyDefaultSettingsFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::copyDefaultSettingsFile() const$/;"	f	class:Vidalia	signature:() const
copyDefaultSettingsFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void copyDefaultSettingsFile() const;$/;"	p	class:Vidalia	access:private	signature:() const
copySelectedBridgesToClipboard	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::copySelectedBridgesToClipboard()$/;"	f	class:NetworkPage	signature:()
copySelectedBridgesToClipboard	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void copySelectedBridgesToClipboard();$/;"	p	class:NetworkPage	access:private	signature:()
copySelectedFingerprints	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::copySelectedFingerprints()$/;"	f	class:RouterListWidget	signature:()
copySelectedFingerprints	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void copySelectedFingerprints();$/;"	p	class:RouterListWidget	access:private	signature:()
copySelectedNicknames	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::copySelectedNicknames()$/;"	f	class:RouterListWidget	signature:()
copySelectedNicknames	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void copySelectedNicknames();$/;"	p	class:RouterListWidget	access:private	signature:()
copySelectedText	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::copySelectedText()$/;"	f	class:RouterDescriptorView	signature:()
copySelectedText	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void copySelectedText();$/;"	p	class:RouterDescriptorView	access:public	signature:()
copy_dir	/Users/chiiph/Code/vidalia/src/common/file.cpp	/^copy_dir(const QString &source, const QString &dest)$/;"	f	signature:(const QString &source, const QString &dest)
copy_dir	/Users/chiiph/Code/vidalia/src/common/file.h	/^bool copy_dir(const QString &source, const QString &dest);$/;"	p	signature:(const QString &source, const QString &dest)
country	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString country() const { return _country; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
countryCode	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString countryCode() const { return _countryCode; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
countryCodeByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::countryCodeByAddr(const QHostAddress &ip)$/;"	f	class:GeoIpDatabase	signature:(const QHostAddress &ip)
countryCodeByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  QString countryCodeByAddr(const QHostAddress &ip);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QHostAddress &ip)
countryLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::countryLocation(const QString &countryCode)$/;"	f	class:CountryInfo	signature:(const QString &countryCode)
countryLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  static QPair<float,float> countryLocation(const QString &countryCode);$/;"	p	class:CountryInfo	access:public	signature:(const QString &countryCode)
countryName	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.cpp	/^CountryInfo::countryName(const QString &countryCode)$/;"	f	class:CountryInfo	signature:(const QString &countryCode)
countryName	/Users/chiiph/Code/vidalia/src/vidalia/network/CountryInfo.h	/^  static QString countryName(const QString &countryCode);$/;"	p	class:CountryInfo	access:public	signature:(const QString &countryCode)
crash	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::crash()$/;"	f	class:TorProcess	signature:()
crash	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void crash();$/;"	p	class:TorProcess	access:public	signature:()
crashReporterExecutable	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static _char_t crashReporterExecutable[MAX_PATH_LEN + 1] = TEXT("");$/;"	m	namespace:CrashReporter	file:
createActions	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createActions()$/;"	f	class:MainWindow	signature:()
createActions	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createActions();$/;"	p	class:MainWindow	access:private	signature:()
createActions	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::createActions()$/;"	f	class:BandwidthGraph	signature:()
createActions	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void createActions();$/;"	p	class:BandwidthGraph	access:private	signature:()
createActions	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::createActions()$/;"	f	class:MessageLog	signature:()
createActions	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void createActions();$/;"	p	class:MessageLog	access:private	signature:()
createConnections	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createConnections()$/;"	f	class:MainWindow	signature:()
createConnections	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createConnections();$/;"	p	class:MainWindow	access:private	signature:()
createDirMgmtComponent	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^createDirMgmtComponent(QDomElement e,$/;"	f	signature:(QDomElement e, QString dirName)
createGUI	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createGUI()$/;"	f	class:MainWindow	signature:()
createGUI	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createGUI();$/;"	p	class:MainWindow	access:private	signature:()
createMenuBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createMenuBar()$/;"	f	class:MainWindow	signature:()
createMenuBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createMenuBar();$/;"	p	class:MainWindow	access:private	signature:()
createPageAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::createPageAction(const QIcon &img, const QString &text,$/;"	f	class:ConfigDialog	signature:(const QIcon &img, const QString &text, const QString &data, QActionGroup *group)
createPageAction	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  QAction* createPageAction(const QIcon &img, const QString &text,$/;"	p	class:ConfigDialog	access:private	signature:(const QIcon &img, const QString &text, const QString &data, QActionGroup *group)
createPages	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::createPages()$/;"	f	class:FirstRunWizard	signature:()
createPages	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  void createPages();$/;"	p	class:FirstRunWizard	access:private	signature:()
createPathToFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::createPathToFile(QString filename)$/;"	f	class:LogFile	signature:(QString filename)
createPathToFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool createPathToFile(QString filename);$/;"	p	class:LogFile	access:private	signature:(QString filename)
createRegExp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::createRegExp()$/;"	f	class:TorrcParser	signature:()
createRegExp	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QRegExp createRegExp();$/;"	p	class:TorrcParser	access:private	signature:()
createRegLocalComponent	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^createRegLocalComponent(QDomElement e,$/;"	f	signature:(QDomElement e, QString dirName, QString keyPath)
createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::createShortcut(const QKeySequence &key, QWidget *sender,$/;"	f	class:Vidalia	signature:(const QKeySequence &key, QWidget *sender, QObject *receiver, const char *slot)
createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::createShortcut(const QString &key, QWidget *sender,$/;"	f	class:Vidalia	signature:(const QString &key, QWidget *sender, QObject *receiver, const char *slot)
createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void createShortcut(const QKeySequence &key, QWidget *sender,$/;"	p	class:Vidalia	access:public	signature:(const QKeySequence &key, QWidget *sender, QObject *receiver, const char *slot)
createShortcut	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void createShortcut(const QString &key, QWidget *sender,$/;"	p	class:Vidalia	access:public	signature:(const QString &key, QWidget *sender, QObject *receiver, const char *slot)
createToolBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createToolBar()$/;"	f	class:MainWindow	signature:()
createToolBar	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createToolBar();$/;"	p	class:MainWindow	access:private	signature:()
createTopicTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::createTopicTreeItem(const QDomElement &topicElement,$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
createTopicTreeItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QTreeWidgetItem* createTopicTreeItem(const QDomElement &topicElement,$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
createTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createTrayIcon()$/;"	f	class:MainWindow	signature:()
createTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void createTrayIcon();$/;"	p	class:MainWindow	access:private	signature:()
createTrayMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::createTrayMenu()$/;"	f	class:MainWindow	signature:()
createTrayMenu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QMenu* createTrayMenu();$/;"	p	class:MainWindow	access:private	signature:()
create_path	/Users/chiiph/Code/vidalia/src/common/file.cpp	/^create_path(const QString &path)$/;"	f	signature:(const QString &path)
create_path	/Users/chiiph/Code/vidalia/src/common/file.h	/^bool create_path(const QString &path);$/;"	p	signature:(const QString &path)
create_po_header	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^create_po_header(const QString &charset)$/;"	f	signature:(const QString &charset)
create_po_header	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^create_po_header(const QString &encoding)$/;"	f	signature:(const QString &encoding)
create_po_timestamp	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^create_po_timestamp()$/;"	f	signature:()
create_po_timestamp	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^create_po_timestamp()$/;"	f	signature:()
critical	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::critical(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
critical	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int critical(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
crypto_rand_bytes	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^crypto_rand_bytes(int len)$/;"	f	signature:(int len)
crypto_rand_bytes	/Users/chiiph/Code/vidalia/src/common/crypto.h	/^QByteArray crypto_rand_bytes(int len);$/;"	p	signature:(int len)
crypto_rand_quint32	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^crypto_rand_quint32(quint32 max)$/;"	f	signature:(quint32 max)
crypto_rand_quint32	/Users/chiiph/Code/vidalia/src/common/crypto.h	/^quint32 crypto_rand_quint32(quint32 max);$/;"	p	signature:(quint32 max)
crypto_rand_string	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^crypto_rand_string(int len)$/;"	f	signature:(int len)
crypto_rand_string	/Users/chiiph/Code/vidalia/src/common/crypto.h	/^QString crypto_rand_string(int len);$/;"	p	signature:(int len)
crypto_secret_to_key	/Users/chiiph/Code/vidalia/src/common/crypto.cpp	/^crypto_secret_to_key(const QString &secret, const QByteArray &salt, quint8 c)$/;"	f	signature:(const QString &secret, const QByteArray &salt, quint8 c)
crypto_secret_to_key	/Users/chiiph/Code/vidalia/src/common/crypto.h	/^crypto_secret_to_key(const QString &secret, const QByteArray &salt, quint8 c);$/;"	p	signature:(const QString &secret, const QByteArray &salt, quint8 c)
culture_lcid	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^culture_lcid(const QString &culture)$/;"	f	signature:(const QString &culture)
curelt	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char curelt[64];$/;"	m	struct:NameValueParserData	access:public
cureltname	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char cureltname[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas	access:public
currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::currentItemChanged(QTreeWidgetItem *current,$/;"	f	class:UpdatesAvailableDialog	signature:(QTreeWidgetItem *current, QTreeWidgetItem *previous)
currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *previous);$/;"	p	class:UpdatesAvailableDialog	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *previous)
currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
currentItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void currentItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::customContextMenuRequested(const QPoint &pos)$/;"	f	class:StatusEventWidget	signature:(const QPoint &pos)
customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void customContextMenuRequested(const QPoint &pos);$/;"	p	class:StatusEventWidget	access:private	signature:(const QPoint &pos)
customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::customContextMenuRequested(const QPoint &pos)$/;"	f	class:CircuitListWidget	signature:(const QPoint &pos)
customContextMenuRequested	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void customContextMenuRequested(const QPoint &pos);$/;"	p	class:CircuitListWidget	access:private	signature:(const QPoint &pos)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void customEvent(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::customEvent(QEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void customEvent(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void customEvent(QEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QEvent* arg__1)
customEvent	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::customEvent(QEvent *event)$/;"	f	class:ControlSocket	signature:(QEvent *event)
customEvent	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void customEvent(QEvent *event);$/;"	p	class:ControlSocket	access:protected	signature:(QEvent *event)
customPaint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::customPaint(GeoPainter *painter)$/;"	f	class:TorMapWidget	signature:(GeoPainter *painter)
customPaint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  virtual void customPaint(Marble::GeoPainter *painter);$/;"	p	class:TorMapWidget	access:protected	signature:(Marble::GeoPainter *painter)
customRateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::customRateChanged()$/;"	f	class:ServerPage	signature:()
customRateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void customRateChanged();$/;"	p	class:ServerPage	access:private	signature:()
d	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/window-close.png	/^⁄{‰Îux|n3ÏS!f/;"	v
dangerousPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorControl	access:public	signature:(quint16 port, bool rejected)
dangerousPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorEvents	access:public	signature:(quint16 port, bool rejected)
dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dangerousPort(quint16 port, bool rejected)$/;"	f	class:StatusEventWidget	signature:(quint16 port, bool rejected)
dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:StatusEventWidget	access:private	signature:(quint16 port, bool rejected)
dangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dangerousPort(quint16 port, bool rejected);$/;"	p	class:TorControlPrototype	access:public	signature:(quint16 port, bool rejected)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorControl	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorEvents	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::dangerousTorVersion(tc::TorVersionStatus reason,$/;"	f	class:MainWindow	signature:(tc::TorVersionStatus reason, const QString &current, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:MainWindow	access:private	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dangerousTorVersion(tc::TorVersionStatus reason,$/;"	f	class:StatusEventWidget	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:StatusEventWidget	access:private	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
dangerousTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dangerousTorVersion(tc::TorVersionStatus reason,$/;"	p	class:TorControlPrototype	access:public	signature:(tc::TorVersionStatus reason, const QString &version, const QStringList &recommended)
data	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct IGDdatas data;$/;"	m	struct:__anon1	typeref:struct:__anon1::IGDdatas	file:	access:public
data	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void * data;$/;"	m	struct:xmlparser	access:public
data	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  struct IGDdatas data;$/;"	m	class:UPNPControlThread	typeref:struct:UPNPControlThread::IGDdatas	access:private
dataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::dataDirectory()$/;"	f	class:Vidalia	signature:()
dataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString dataDirectory();$/;"	p	class:Vidalia	access:public	signature:()
datafunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*datafunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::date() const$/;"	f	class:PluginWrapper	signature:() const
date	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString date() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
debug	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^debug(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
debug	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage debug(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
defaultButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::defaultButton(int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int button0, int button1, int button2)
defaultButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int defaultButton(int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int button0, int button1, int button2)
defaultDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::defaultDataDirectory()$/;"	f	class:Vidalia	signature:()
defaultDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString defaultDataDirectory();$/;"	p	class:Vidalia	access:public	signature:()
defaultLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::defaultLanguageCode()$/;"	f	class:LanguageSupport	signature:()
defaultLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString defaultLanguageCode();$/;"	p	class:LanguageSupport	access:public	signature:()
defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::defaultValue(const QString &key) const$/;"	f	class:VSettings	signature:(const QString &key) const
defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  QVariant defaultValue(const QString &key) const;$/;"	p	class:VSettings	access:protected	signature:(const QString &key) const
defaultValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString defaultValue() const$/;"	f	class:TorOpt	access:public	signature:() const
delTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::delTab(int index)$/;"	f	class:MainWindow	signature:(int index)
delTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void delTab(int index = -1);$/;"	p	class:MainWindow	access:private	signature:(int index = -1)
descURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * descURL;$/;"	m	struct:UPNPDev	access:public
description	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString description() const { return _description; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
description	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::description() const$/;"	f	class:StatusEventItem	signature:() const
description	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString description() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
descriptor	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  RouterDescriptor descriptor() const { return *_rd; }$/;"	f	class:RouterListItem	access:public	signature:() const
descriptorDigest	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString descriptorDigest() const { return _digest; }$/;"	f	class:RouterStatus	access:public	signature:() const
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::deselectAll()$/;"	f	class:LogTreeWidget	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void deselectAll();$/;"	p	class:LogTreeWidget	access:public	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::deselectAll()$/;"	f	class:RouterListWidget	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void deselectAll();$/;"	p	class:RouterListWidget	access:public	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::deselectAll()$/;"	f	class:TorMapImageView	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void deselectAll();$/;"	p	class:TorMapImageView	access:public	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::deselectAll()$/;"	f	class:TorMapWidget	signature:()
deselectAll	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void deselectAll();$/;"	p	class:TorMapWidget	access:public	signature:()
det	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/running.html	/^Med Vidalia du kan kontrolla Tor; startar och stoppar det, √∂vervakar Tors st√§llning och vet om det har ov√§ntat avslutats.$/;"	v
detachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::detachTab()$/;"	f	class:MainWindow	signature:()
detachTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void detachTab();$/;"	p	class:MainWindow	access:private	signature:()
detachTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void detachTab();$/;"	p	class:VAttachButton	access:public	signature:()
devlist	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct UPNPDev * devlist;$/;"	m	struct:__anon1	typeref:struct:__anon1::UPNPDev	file:	access:public
did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      did;$/;"	m	struct:s_SpliceData	file:	access:public
did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  did;$/;"	m	struct:s_AddData	file:	access:public
did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  did;$/;"	m	struct:s_ReplaceData	file:	access:public
dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 dirPort() const { return _dirPort; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
dirPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 dirPort() const { return _dirPort; }$/;"	f	class:RouterStatus	access:public	signature:() const
dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dirPortReachabilityFinished(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, bool reachable)
dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, bool reachable)
dirPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dirPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
disableAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::disableAccounting()$/;"	f	class:ServerSettings	signature:()
disableAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void disableAccounting();$/;"	p	class:ServerSettings	access:public	signature:()
disablePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::disablePort(quint16 port)$/;"	f	class:UPNPControlThread	signature:(quint16 port)
disablePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError disablePort(quint16 port);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 port)
disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::disconnect()$/;"	f	class:ControlConnection	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void disconnect();$/;"	p	class:ControlConnection	access:public	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::disconnect()$/;"	f	class:TorControl	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void disconnect();$/;"	p	class:TorControl	access:public	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::disconnect()$/;"	f	class:MainWindow	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void disconnect();$/;"	p	class:MainWindow	access:private	signature:()
disconnect	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void disconnect();$/;"	p	class:TorControlPrototype	access:public	signature:()
disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void disconnectFromHost()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::disconnectFromHost()$/;"	f	class:ControlSocket	signature:()
disconnectFromHost	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnectFromHost();$/;"	p	class:ControlSocket	access:public	signature:()
disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void disconnectFromServer()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::disconnectFromServer()$/;"	f	class:ControlSocket	signature:()
disconnectFromServer	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnectFromServer();$/;"	p	class:ControlSocket	access:public	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void disconnected();$/;"	p	class:ControlConnection	access:public	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void disconnected();$/;"	p	class:ControlSocket	access:public	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void disconnected();$/;"	p	class:TorControl	access:public	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::disconnected()$/;"	f	class:MainWindow	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void disconnected();$/;"	p	class:MainWindow	access:private	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::disconnected()$/;"	f	class:StatusEventWidget	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void disconnected();$/;"	p	class:StatusEventWidget	access:private	signature:()
disconnected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void disconnected();$/;"	p	class:TorControlPrototype	access:public	signature:()
discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::discoverTimeout() const$/;"	f	class:UPNPControl	signature:() const
discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  int discoverTimeout() const;$/;"	p	class:UPNPControl	access:public	signature:() const
discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::discoverTimeout()$/;"	f	class:UPNPTestDialog	signature:()
discoverTimeout	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void discoverTimeout();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
discoverdelay	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	unsigned int discoverdelay;	\/* value passed to upnpDiscover() *\/$/;"	m	struct:__anon1	file:	access:public
display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::display(QList<RouterDescriptor> rdlist)$/;"	f	class:RouterDescriptorView	signature:(QList<RouterDescriptor> rdlist)
display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.cpp	/^RouterDescriptorView::display(RouterDescriptor rd)$/;"	f	class:RouterDescriptorView	signature:(RouterDescriptor rd)
display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void display(QList<RouterDescriptor> rdlist);$/;"	p	class:RouterDescriptorView	access:public	signature:(QList<RouterDescriptor> rdlist)
display	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterDescriptorView.h	/^  void display(RouterDescriptor rd);$/;"	p	class:RouterDescriptorView	access:public	signature:(RouterDescriptor rd)
displayBridgeUsage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::displayBridgeUsage()$/;"	f	class:ServerPage	signature:()
displayBridgeUsage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void displayBridgeUsage();$/;"	p	class:ServerPage	access:private	signature:()
displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::displayRouterInfo(const QString &id)$/;"	f	class:NetViewer	signature:(const QString &id)
displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:NetViewer	access:private	signature:(const QString &id)
displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:TorMapWidget	access:public	signature:(const QString &id)
displayRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void displayRouterInfo(const QString &id);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(const QString &id)
displayTorVersionWarning	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::displayTorVersionWarning()$/;"	f	class:MainWindow	signature:()
displayTorVersionWarning	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void displayTorVersionWarning();$/;"	p	class:MainWindow	access:private	signature:()
displayTorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::displayTorrcDialog()$/;"	f	class:AdvancedPage	signature:()
displayTorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void displayTorrcDialog();$/;"	p	class:AdvancedPage	access:private	signature:()
displayWarning	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::displayWarning(bool checked)$/;"	f	class:AdvancedPage	signature:(bool checked)
displayWarning	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void displayWarning(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
disponible	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/netview.html	/^    Dur√©e pendant laquelle le relais a √©t√© disponible, ce qui est utile pour en$/;"	v
dnsHijacked	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dnsHijacked();$/;"	p	class:TorControl	access:public	signature:()
dnsHijacked	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dnsHijacked();$/;"	p	class:TorEvents	access:public	signature:()
dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dnsHijacked()$/;"	f	class:StatusEventWidget	signature:()
dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dnsHijacked();$/;"	p	class:StatusEventWidget	access:private	signature:()
dnsHijacked	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dnsHijacked();$/;"	p	class:TorControlPrototype	access:public	signature:()
dnsUseless	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void dnsUseless();$/;"	p	class:TorControl	access:public	signature:()
dnsUseless	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void dnsUseless();$/;"	p	class:TorEvents	access:public	signature:()
dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::dnsUseless()$/;"	f	class:StatusEventWidget	signature:()
dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void dnsUseless();$/;"	p	class:StatusEventWidget	access:private	signature:()
dnsUseless	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void dnsUseless();$/;"	p	class:TorControlPrototype	access:public	signature:()
do_walkdoc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^do_walkdoc(QDomNode  n,$/;"	f	signature:(QDomNode n, TraverseCallback cb, void * cbdata, QString *errorMessage)
docadd	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^docadd(QDomDocument *doc,$/;"	f	signature:(QDomDocument *doc, QString arguments, QString *errorMessage)
docreplace	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^docreplace(QDomDocument *doc,$/;"	f	signature:(QDomDocument *doc, QString arguments, QString *errorMessage)
docsplice	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^docsplice(QDomDocument *doc,$/;"	f	signature:(QDomDocument *doc, QString arguments, QString *errorMessage)
docuserlocal	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^docuserlocal(QDomDocument *doc,$/;"	f	signature:(QDomDocument *doc, QString argument, QString *errorMessage)
downloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void downloadProgress(QString url, int bytesReceived, int bytesTotal);$/;"	p	class:UpdateProcess	access:public	signature:(QString url, int bytesReceived, int bytesTotal)
dprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dprop;$/;"	m	struct:s_ReplaceData	file:	access:public
drawScaledImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::drawScaledImage()$/;"	f	class:ZImageView	signature:()
drawScaledImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void drawScaledImage();$/;"	p	class:ZImageView	access:protected	signature:()
dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      dtag;$/;"	m	struct:s_SpliceData	file:	access:public
dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dtag;$/;"	m	struct:s_AddData	file:	access:public
dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dtag;$/;"	m	struct:s_ReplaceData	file:	access:public
durchsuchen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^<a href="log.html">Nachrichtenprotokoll<\/a> auf Fehler durchsuchen, die beim$/;"	v
e	/Users/chiiph/Code/vidalia/src/vidalia/res/map/world-map.png	/^/;"	v
elt	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNParg { const char * elt; const char * val; };$/;"	m	struct:UPNParg	access:public
emitPluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::emitPluginTab()$/;"	f	class:PluginWrapper	signature:()
emitPluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void emitPluginTab();$/;"	p	class:PluginWrapper	access:private	signature:()
enableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::enableNetwork()$/;"	f	class:MainWindow	signature:()
enableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void enableNetwork();$/;"	p	class:MainWindow	access:private	signature:()
enableNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::enableNewIdentity()$/;"	f	class:MainWindow	signature:()
enableNewIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void enableNewIdentity();$/;"	p	class:MainWindow	access:private	signature:()
endeltfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*endeltfunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
ensure_valid_chars	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^ensure_valid_chars(const QString &str, const QString &validChars)$/;"	f	signature:(const QString &str, const QString &validChars)
ensure_valid_chars	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString ensure_valid_chars(const QString &str, const QString &validChars);$/;"	p	signature:(const QString &str, const QString &validChars)
entries	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    LIST_ENTRY(NameValue) entries;$/;"	m	struct:NameValue	access:public
eq	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ws.png	/^/;"	v
err	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^err(QString *str, const QString &errmsg)$/;"	f	signature:(QString *str, const QString &errmsg)
err	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^bool err(QString *str, const QString &errmsg);$/;"	p	signature:(QString *str, const QString &errmsg)
error	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void error(QAbstractSocket::SocketError);$/;"	p	class:ControlSocket	access:public	signature:(QAbstractSocket::SocketError)
error	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^error(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
error	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage error(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::error() const$/;"	f	class:UPNPControl	signature:() const
error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  UPNPError error() const;$/;"	p	class:UPNPControl	access:public	signature:() const
error	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void error(UPNPControl::UPNPError error);$/;"	p	class:UPNPControl	access:public	signature:(UPNPControl::UPNPError error)
errorString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  QString errorString() { return _logFile.errorString(); }$/;"	f	class:Log	access:public	signature:()
errorString	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::errorString() const$/;"	f	class:UPNPControl	signature:() const
errorString	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  QString errorString() const;$/;"	p	class:UPNPControl	access:public	signature:() const
erscheinen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Fehler<\/b>: Nachrichten, die erscheinen, wenn ein schwerwiegender Fehler$/;"	v
erscheinen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    <b>Warnung<\/b>: Nachrichten, die nur erscheinen, wenn weniger$/;"	v
erwartet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^erwartet, kann Vidalia keine Verbindung zu Tor herstellen. Diese Einstellung$/;"	v
escape	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^escape(QString str)$/;"	f	signature:(QString str)
escape	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString escape(QString str);$/;"	p	signature:(QString str)
escape	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::escape(const QString &unescaped) const$/;"	f	class:ControlCommand	signature:(const QString &unescaped) const
escape	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString escape(const QString &str) const;$/;"	p	class:ControlCommand	access:private	signature:(const QString &str) const
escapeButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::escapeButton(int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int button0, int button1, int button2)
escapeButton	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int escapeButton(int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int button0, int button1, int button2)
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  bool eval(const QString& input)$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:(const QString& input)
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::eval(tc::Severity type, const QString &message) const$/;"	f	class:LogFilter	signature:(tc::Severity type, const QString &message) const
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterRegExp::eval(tc::Severity type, const QString &message) const$/;"	f	class:LogFilterRegExp	signature:(tc::Severity type, const QString &message) const
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::eval(tc::Severity type, const QString &msg) const$/;"	f	class:LogFilterSearchTerm	signature:(tc::Severity type, const QString &msg) const
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  bool eval(tc::Severity type, const QString &message) const;$/;"	p	class:LogFilterRegExp	access:public	signature:(tc::Severity type, const QString &message) const
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  bool eval(tc::Severity type, const QString &message) const;$/;"	p	class:LogFilterSearchTerm	access:public	signature:(tc::Severity type, const QString &message) const
eval	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  virtual bool eval(tc::Severity type, const QString& message) const;$/;"	p	class:LogFilter	access:public	signature:(tc::Severity type, const QString& message) const
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^bool QtScriptShell_X::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  bool event(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^bool QtScriptShell_X::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QEvent* arg__1)
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^bool  QtScriptShell_TorControl::event(QEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QEvent* arg__1)
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  bool event(QEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QEvent* arg__1)
event	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    bool  event(QEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QEvent* arg__1)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^bool QtScriptShell_X::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_X	signature:(QObject* arg__1, QEvent* arg__2)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  bool eventFilter(QObject* arg__1, QEvent* arg__2);$/;"	p	class:QtScriptShell_X	access:public	signature:(QObject* arg__1, QEvent* arg__2)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^bool QtScriptShell_X::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_X	signature:(QObject* arg__1, QEvent* arg__2)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^bool  QtScriptShell_TorControl::eventFilter(QObject*  arg__1, QEvent*  arg__2)$/;"	f	class:QtScriptShell_TorControl	signature:(QObject* arg__1, QEvent* arg__2)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  bool eventFilter(QObject* arg__1, QEvent* arg__2);$/;"	p	class:QtScriptShell_X	access:public	signature:(QObject* arg__1, QEvent* arg__2)
eventFilter	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    bool  eventFilter(QObject*  arg__1, QEvent*  arg__2);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QObject* arg__1, QEvent* arg__2)
eventsuburl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char eventsuburl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
example	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^kilobytes per second). For example, you might want to choose 2 megabytes per$/;"	v
example	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^kilobytes per second). For example, you might want to choose 2 megabytes per $/;"	v
exceptBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::exceptBuffer;$/;"	m	class:DebugDialog	file:
exceptBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList exceptBuffer;$/;"	m	class:DebugDialog	access:private
exceptDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::exceptDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
exceptDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void exceptDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
exceptionHandler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static google_breakpad::ExceptionHandler *exceptionHandler = 0;$/;"	m	namespace:CrashReporter	file:
exitCode	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::exitCode()$/;"	f	class:TorService	signature:()
exitCode	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  int exitCode();$/;"	p	class:TorService	access:public	signature:()
exitPolicy	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString exitPolicy() const { return _exitPolicy; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
exitPolicyHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::exitPolicyHelp()$/;"	f	class:ServerPage	signature:()
exitPolicyHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void exitPolicyHelp();$/;"	p	class:ServerPage	access:private	signature:()
exitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::exitStatus()$/;"	f	class:TorService	signature:()
exitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  QProcess::ExitStatus exitStatus();$/;"	p	class:TorService	access:public	signature:()
expand_filename	/Users/chiiph/Code/vidalia/src/common/file.cpp	/^expand_filename(const QString &filename)$/;"	f	signature:(const QString &filename)
expand_filename	/Users/chiiph/Code/vidalia/src/common/file.h	/^QString expand_filename(const QString &filename);$/;"	p	signature:(const QString &filename)
externalAddressChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, const QString &hostname)
externalAddressChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, const QString &hostname)
externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::externalAddressChanged(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, const QString &hostname)
externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, const QString &hostname)
externalAddressChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void externalAddressChanged(const QHostAddress &ip, const QString &hostname);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, const QString &hostname)
f	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/list-add.png	/^/;"	v
f	/Users/chiiph/Code/vidalia/src/vidalia/res/map/world-map.png	/^Õb«≥’zé>8Ÿª>å ≈ºK‚äwN®7íE“<¢˘ÉÆYúñ!w)tç<<úÔ]‹qŸ◊EummT"˛¯ﬁ≤ÿÿºvaê:mt¡]‹›ææπΩ¡ ®û¥,‹¢ÈNÊÛ«¥&ªó∂w.ŸÏ‰˛√Gô;ÙGmû≥«·ò√†ó≈sN@FIH$KN©˚~fÛßw^‹ôú6ÕkGÌåˇŒçu[Õ6ism¸^ü<^kÊ≠X1}nã˛ÉwNû€_›ˇﬁΩ”ˇ—g∂~xˇÙ©∑À˘_‹ŸRqEıÿê/;"	v
fC	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cv.png	/^/;"	v
fab	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bn.png	/^/;"	v
family	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString family() const { return _family; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
fatal	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^fatal(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
fatal	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage fatal(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
fatales	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/log.html	/^    <b>Erreur<\/b>&nbsp;: Ces messages apparaissent lors des erreurs fatales,$/;"	v
featureLeftClicked	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::featureLeftClicked(int x, int y)$/;"	f	class:TorMapWidgetPopupMenu	signature:(int x, int y)
featureLeftClicked	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void featureLeftClicked(int x, int y);$/;"	p	class:TorMapWidgetPopupMenu	access:public	signature:(int x, int y)
featureid	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      featureid;$/;"	m	struct:s_UserLocalData	file:	access:public
felmeddelande	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/running.html	/^Om Vidalia kan inte starta Tor, Vidalia skall visa en felmeddelande, som ber√§ttar vad var det problem. Du kan ocks√• titta din$/;"	v
felmeddelande	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/running.html	/^Om Vidalia kan inte stoppa Tor, Vidalia skall visa en felmeddelande, som ber√§ttar vad var det problem. Du kan ocks√• titta din$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/bridges.po	/^No part of Vidalia, including this file, may be copied, modified, propagated, or$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/config.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/index.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/links.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/log.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/netview.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/running.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/server.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/services.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
file	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/troubleshooting.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
filename	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::filename()$/;"	f	class:LogFile	signature:()
filename	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  QString filename();$/;"	p	class:LogFile	access:public	signature:()
files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::files() const$/;"	f	class:PluginWrapper	signature:() const
files	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QStringList files() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
fillText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::fillText(QTextEdit *tedit, QStringList buffer)$/;"	f	class:DebugDialog	signature:(QTextEdit *tedit, QStringList buffer)
fillText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    void fillText(QTextEdit *tedit, QStringList buffer);$/;"	p	class:DebugDialog	access:public	signature:(QTextEdit *tedit, QStringList buffer)
filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::filter(LogFilter * filter)$/;"	f	class:LogTreeWidget	signature:(LogFilter * filter)
filter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void filter(LogFilter * filter);$/;"	p	class:LogTreeWidget	access:public	signature:(LogFilter * filter)
find	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::find(bool forward)$/;"	f	class:HelpBrowser	signature:(bool forward)
find	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void find(bool forward);$/;"	p	class:HelpBrowser	access:private	signature:(bool forward)
find	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::find(QString text, bool highlight)$/;"	f	class:LogTreeWidget	signature:(QString text, bool highlight)
find	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> find(QString text, bool highlight = true);$/;"	p	class:LogTreeWidget	access:public	signature:(QString text, bool highlight = true)
find	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::find()$/;"	f	class:MessageLog	signature:()
find	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void find();$/;"	p	class:MessageLog	access:private	signature:()
find	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::find(const QString &text, bool highlight)$/;"	f	class:StatusEventWidget	signature:(const QString &text, bool highlight)
find	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QList<StatusEventItem *> find(const QString &text, bool highlight = true);$/;"	p	class:StatusEventWidget	access:public	signature:(const QString &text, bool highlight = true)
findCircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::findCircuitItem(const CircuitId &circid)$/;"	f	class:CircuitListWidget	signature:(const CircuitId &circid)
findCircuitItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  CircuitItem* findCircuitItem(const CircuitId &circid);$/;"	p	class:CircuitListWidget	access:private	signature:(const CircuitId &circid)
findNext	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findNext()$/;"	f	class:HelpBrowser	signature:()
findNext	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void findNext();$/;"	p	class:HelpBrowser	access:private	signature:()
findPrev	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findPrev()$/;"	f	class:HelpBrowser	signature:()
findPrev	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void findPrev();$/;"	p	class:HelpBrowser	access:private	signature:()
findRouterById	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::findRouterById(QString id)$/;"	f	class:RouterListWidget	signature:(QString id)
findRouterById	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  RouterListItem* findRouterById(QString id);$/;"	p	class:RouterListWidget	access:public	signature:(QString id)
findStreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::findStreamItem(const StreamId &streamid)$/;"	f	class:CircuitListWidget	signature:(const StreamId &streamid)
findStreamItem	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  StreamItem* findStreamItem(const StreamId &streamid);$/;"	p	class:CircuitListWidget	access:private	signature:(const StreamId &streamid)
findTopicItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::findTopicItem(QTreeWidgetItem *startItem, QString topic)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *startItem, QString topic)
findTopicItem	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QTreeWidgetItem* findTopicItem(QTreeWidgetItem *startItem, QString topic);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *startItem, QString topic)
findValueLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::findValueLines(TorrcLine *line,$/;"	f	class:TorrcParser	signature:(TorrcLine *line, const QList<TorrcLine *> &lines) const
findValueLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> findValueLines(TorrcLine *line,$/;"	p	class:TorrcParser	access:private	signature:(TorrcLine *line, const QList<TorrcLine *> &lines) const
findWidget	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::findWidget(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
findWidget	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue findWidget(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
finden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls Sie eine solche Fehlermeldung finden, m&uuml;ssen Sie den anderen Tor-Prozess$/;"	v
fingerprint	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString fingerprint() const { return _fingerprint; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::finished(int *exitCode, QProcess::ExitStatus *exitStatus)$/;"	f	class:TorControl	signature:(int *exitCode, QProcess::ExitStatus *exitStatus)
finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool finished(int *exitCode, QProcess::ExitStatus *exitStatus);$/;"	p	class:TorControl	access:public	signature:(int *exitCode, QProcess::ExitStatus *exitStatus)
finished	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void finished(int exitCode, QProcess::ExitStatus);$/;"	p	class:TorService	access:public	signature:(int exitCode, QProcess::ExitStatus)
first	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service first;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
firstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::firstRun() const$/;"	f	class:VidaliaSettings	signature:() const
firstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool firstRun() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::flagValue(const QString &flag) const$/;"	f	class:Circuit	signature:(const QString &flag) const
flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  BuildFlag flagValue(const QString &flag) const;$/;"	p	class:Circuit	access:private	signature:(const QString &flag) const
flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.cpp	/^RouterStatus::flagValue(const QString &flag)$/;"	f	class:RouterStatus	signature:(const QString &flag)
flagValue	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flag flagValue(const QString &flag);$/;"	p	class:RouterStatus	access:private	signature:(const QString &flag)
flags	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  Flags flags() const { return _flags; }$/;"	f	class:RouterStatus	access:public	signature:() const
flush	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  void flush()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
fonctionnalit	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/services.html	/^fonctionnalit√©, ou plut√¥t, ne pas nous bl√¢mez pas si quelque chose ne va$/;"	v
formatArguments	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::formatArguments(const QStringList &args)$/;"	f	class:TorProcess	signature:(const QStringList &args)
formatArguments	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  QString formatArguments(const QStringList &args);$/;"	p	class:TorProcess	access:private	signature:(const QStringList &args)
forms	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^Redistribution and use in source and binary forms, with or without$/;"	v
forwardPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::forwardPort(quint16 port)$/;"	f	class:UPNPControlThread	signature:(quint16 port)
forwardPort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError forwardPort(quint16 port);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 port)
freeUPNPDevlist	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^LIBSPEC void freeUPNPDevlist(struct UPNPDev * devlist)$/;"	f	signature:(struct UPNPDev * devlist)
freeUPNPDevlist	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC void freeUPNPDevlist(struct UPNPDev * devlist);$/;"	p	signature:(struct UPNPDev * devlist)
fromString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.cpp	/^ControlMethod::fromString(QString method)$/;"	f	class:ControlMethod	signature:(QString method)
fromString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    static Method fromString(QString method);$/;"	p	class:ControlMethod	access:public	signature:(QString method)
fromString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::fromString(const QString &stream)$/;"	f	class:Stream	signature:(const QString &stream)
fromString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  static Stream fromString(const QString &stream);$/;"	p	class:Stream	access:public	signature:(const QString &stream)
fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::fromString(QString policy)$/;"	f	class:Policy	signature:(QString policy)
fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  void fromString(QString policy);$/;"	p	class:Policy	access:public	signature:(QString policy)
fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::fromString(QString iconPref)$/;"	f	class:VidaliaSettings	signature:(QString iconPref)
fromString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  IconPosition fromString(QString iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(QString iconPref)
fromTorControl	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::fromTorControl(TorControl *tc)$/;"	f	class:RouterDescriptor	signature:(TorControl *tc)
fromTorControl	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  static RouterDescriptor *fromTorControl(TorControl *tc);$/;"	p	class:RouterDescriptor	access:public	signature:(TorControl *tc)
getAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getAddressMap(AddressMap::AddressMapType type, QString *errmsg)$/;"	f	class:TorControl	signature:(AddressMap::AddressMapType type, QString *errmsg)
getAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  AddressMap getAddressMap($/;"	p	class:TorControl	access:public	signature:( AddressMap::AddressMapType type = AddressMap::AddressMapAll, QString *errmsg = 0)
getAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getAddressMap(AddressMap::AddressMapType type, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(AddressMap::AddressMapType type, QString *errmsg)
getAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE AddressMap getAddressMap($/;"	p	class:TorControlPrototype	access:public	signature:( AddressMap::AddressMapType type = AddressMap::AddressMapAll, QString *errmsg = 0)
getAllActions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::getAllActions()$/;"	f	class:PluginEngine	signature:()
getAllActions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    QList<QAction *> getAllActions();$/;"	p	class:PluginEngine	access:public	signature:()
getAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getAuthenticationMethod() const$/;"	f	class:TorSettings	signature:() const
getAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  AuthenticationMethod getAuthenticationMethod() const;$/;"	p	class:TorSettings	access:public	signature:() const
getBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getBandwidthAvgRate()$/;"	f	class:ServerSettings	signature:()
getBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint32 getBandwidthAvgRate();$/;"	p	class:ServerSettings	access:public	signature:()
getBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getBandwidthBurstRate()$/;"	f	class:ServerSettings	signature:()
getBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint32 getBandwidthBurstRate();$/;"	p	class:ServerSettings	access:public	signature:()
getBootstrapPhase	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getBootstrapPhase()$/;"	f	class:TorControl	signature:()
getBootstrapPhase	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void getBootstrapPhase();$/;"	p	class:TorControl	access:private	signature:()
getBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getBridgeList()$/;"	f	class:NetworkSettings	signature:()
getBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QStringList getBridgeList();$/;"	p	class:NetworkSettings	access:public	signature:()
getBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getBrowserDirectory() const$/;"	f	class:VidaliaSettings	signature:() const
getBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getBrowserDirectory() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
getBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getBrowserExecutable() const$/;"	f	class:VidaliaSettings	signature:() const
getBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getBrowserExecutable() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
getCircuits	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getCircuits(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getCircuits	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  CircuitList getCircuits(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getCircuits	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getCircuits(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
getCircuits	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE CircuitList getCircuits(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QString> &map, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QHash<QString,QStringList> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QStringList> &map, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QString key, QString &value, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString &value, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(QString key, QStringList &value, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QStringList &value, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getConf(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControl	signature:(const QStringList &keys, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariant getConf(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariantMap getConf(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QHash<QString,QString> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> &map, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QHash<QString,QStringList> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QStringList> &map, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QString key, QString &value, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString &value, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getConf(QString key, QStringList &value, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QStringList &value, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QHash<QString,QString> &map, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QHash<QString,QStringList> &map, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QHash<QString,QStringList> &map, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(QString key, QStringList &value, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString key, QStringList &value, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getConf(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QStringList &keys, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getConf(QString key);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariantMap getConf(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QHash<QString,QString> &map, QString *errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> &map, QString *errmsg)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QHash<QString,QStringList> &map, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QStringList> &map, QString *errmsg = 0)
getConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool getConf(QString key, QStringList &value, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key, QStringList &value, QString *errmsg = 0)
getContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getContactInfo()$/;"	f	class:ServerSettings	signature:()
getContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  QString getContactInfo();$/;"	p	class:ServerSettings	access:public	signature:()
getContentLengthAndHeaderLength	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^getContentLengthAndHeaderLength(char * p, int n,$/;"	f	file:	signature:(char * p, int n, int * contentlen, int * headerlen)
getControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlAddress() const$/;"	f	class:TorSettings	signature:() const
getControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QHostAddress getControlAddress() const;$/;"	p	class:TorSettings	access:public	signature:() const
getControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlMethod() const$/;"	f	class:TorSettings	signature:() const
getControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  ControlMethod::Method getControlMethod() const;$/;"	p	class:TorSettings	access:public	signature:() const
getControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlPassword() const$/;"	f	class:TorSettings	signature:() const
getControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getControlPassword() const;$/;"	p	class:TorSettings	access:public	signature:() const
getControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getControlPort() const$/;"	f	class:TorSettings	signature:() const
getControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  quint16 getControlPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
getData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getData() const$/;"	f	class:ControlReply	signature:() const
getData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QStringList getData() const;$/;"	p	class:ControlReply	access:public	signature:() const
getData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getData() const$/;"	f	class:ReplyLine	signature:() const
getData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QStringList getData() const;$/;"	p	class:ReplyLine	access:public	signature:() const
getDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDataDirectory() const$/;"	f	class:TorSettings	signature:() const
getDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getDataDirectory() const;$/;"	p	class:TorSettings	access:public	signature:() const
getDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::getDefault(const QString &key,$/;"	f	class:DefaultSettings	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
getDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  QVariant getDefault(const QString &key,$/;"	p	class:DefaultSettings	access:public	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
getDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDefaultsTorrc() const$/;"	f	class:TorSettings	signature:() const
getDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getDefaultsTorrc() const;$/;"	p	class:TorSettings	access:public	signature:() const
getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getDescriptorAnnotations(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  DescriptorAnnotations getDescriptorAnnotations(const QString &id,$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getDescriptorAnnotations(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
getDescriptorAnnotations	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE DescriptorAnnotations getDescriptorAnnotations(const QString &id,$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
getDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::getDesiredState(quint16 *desiredDirPort, quint16 *desiredOrPort)$/;"	f	class:UPNPControl	signature:(quint16 *desiredDirPort, quint16 *desiredOrPort)
getDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void getDesiredState(quint16 *desiredDirPort, quint16 *desiredOrPort);$/;"	p	class:UPNPControl	access:public	signature:(quint16 *desiredDirPort, quint16 *desiredOrPort)
getDevicesFromMiniSSDPD	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^getDevicesFromMiniSSDPD(const char * devtype, const char * socketpath)$/;"	f	signature:(const char * devtype, const char * socketpath)
getDevicesFromMiniSSDPD	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.h	/^getDevicesFromMiniSSDPD(const char * devtype, const char * socketpath);$/;"	p	signature:(const char * devtype, const char * socketpath)
getDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getDirPort()$/;"	f	class:ServerSettings	signature:()
getDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint16 getDirPort();$/;"	p	class:ServerSettings	access:public	signature:()
getDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getDisableNetwork() const$/;"	f	class:TorSettings	signature:() const
getDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool getDisableNetwork() const;$/;"	p	class:TorSettings	access:public	signature:() const
getExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getExecutable() const$/;"	f	class:TorSettings	signature:() const
getExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getExecutable() const;$/;"	p	class:TorSettings	access:public	signature:() const
getExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getExitPolicy()$/;"	f	class:ServerSettings	signature:()
getExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  ExitPolicy getExitPolicy();$/;"	p	class:ServerSettings	access:public	signature:()
getFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getFascistFirewall()$/;"	f	class:NetworkSettings	signature:()
getFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getFascistFirewall();$/;"	p	class:NetworkSettings	access:public	signature:()
getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getHiddenServiceConf(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString getHiddenServiceConf(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
getHiddenServiceConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getHiddenServiceConf(const QString &key);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &key)
getIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getIMExecutable() const$/;"	f	class:VidaliaSettings	signature:() const
getIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getIMExecutable() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
getIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getIconPref()$/;"	f	class:VidaliaSettings	signature:()
getIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  IconPosition getIconPref();$/;"	p	class:VidaliaSettings	access:public	signature:()
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(QHash<QString,QString> &map, QString *errmsg)$/;"	f	class:TorControl	signature:(QHash<QString,QString> &map, QString *errmsg)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(QString key, QString &val, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString &val, QString *errmsg)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(const QString &key, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &key, QString *errmsg)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getInfo(const QStringList &keys, QString *errmsg)$/;"	f	class:TorControl	signature:(const QStringList &keys, QString *errmsg)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariant getInfo(const QString &key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &key, QString *errmsg = 0)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QVariantMap getInfo(const QStringList &keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QStringList &keys, QString *errmsg = 0)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getInfo(QHash<QString,QString> &map, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> &map, QString *errmsg = 0)
getInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool getInfo(QString key, QString &val, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString &val, QString *errmsg = 0)
getInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getInfo(QHash<QString,QString> &map);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> &map)
getInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getInfo(const QString &key);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &key)
getInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getInterfaceStyle()$/;"	f	class:VidaliaSettings	signature:()
getInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getInterfaceStyle();$/;"	p	class:VidaliaSettings	access:public	signature:()
getLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::getLanguageCode()$/;"	f	class:VidaliaSettings	signature:()
getLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString getLanguageCode();$/;"	p	class:VidaliaSettings	access:public	signature:()
getLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getLine(int idx) const$/;"	f	class:ControlReply	signature:(int idx) const
getLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  ReplyLine getLine(int idx = 0) const;$/;"	p	class:ControlReply	access:public	signature:(int idx = 0) const
getLines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getLines() const$/;"	f	class:ControlReply	signature:() const
getLines	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QList<ReplyLine> getLines() const;$/;"	p	class:ControlReply	access:public	signature:() const
getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getMessage() const$/;"	f	class:ControlReply	signature:() const
getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString getMessage() const;$/;"	p	class:ControlReply	access:public	signature:() const
getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getMessage() const$/;"	f	class:ReplyLine	signature:() const
getMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString getMessage() const;$/;"	p	class:ReplyLine	access:public	signature:() const
getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ControlMethod::Method getMethod() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::getMethod() const$/;"	f	class:ControlSocket	signature:() const
getMethod	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ControlMethod::Method getMethod() const;$/;"	p	class:ControlSocket	access:public	signature:() const
getNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getNetworkStatus(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getNetworkStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  NetworkStatus getNetworkStatus(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getNetworkStatus(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
getNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE NetworkStatus getNetworkStatus(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
getNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getNickname()$/;"	f	class:ServerSettings	signature:()
getNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  QString getNickname();$/;"	p	class:ServerSettings	access:public	signature:()
getNumPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::getNumPoints()$/;"	f	class:GraphFrame	signature:()
getNumPoints	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int getNumPoints();$/;"	p	class:GraphFrame	access:private	signature:()
getORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::getORPort()$/;"	f	class:ServerSettings	signature:()
getORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  quint16 getORPort();$/;"	p	class:ServerSettings	access:public	signature:()
getProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyAddress()$/;"	f	class:NetworkSettings	signature:()
getProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyAddress();$/;"	p	class:NetworkSettings	access:public	signature:()
getProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyPassword()$/;"	f	class:NetworkSettings	signature:()
getProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyPassword();$/;"	p	class:NetworkSettings	access:public	signature:()
getProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyType()$/;"	f	class:NetworkSettings	signature:()
getProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  ProxyType getProxyType();$/;"	p	class:NetworkSettings	access:public	signature:()
getProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getProxyUsername()$/;"	f	class:NetworkSettings	signature:()
getProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString getProxyUsername();$/;"	p	class:NetworkSettings	access:public	signature:()
getReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getReachablePorts()$/;"	f	class:NetworkSettings	signature:()
getReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QList<quint16> getReachablePorts();$/;"	p	class:NetworkSettings	access:public	signature:()
getRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getRejectPlaintextPorts() const$/;"	f	class:TorSettings	signature:() const
getRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QList<quint16> getRejectPlaintextPorts() const;$/;"	p	class:TorSettings	access:public	signature:() const
getResourcePath	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::getResourcePath(const QDomElement &topicElement)$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement)
getResourcePath	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString getResourcePath(const QDomElement &topicElement);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement)
getResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ReceiveWaiter::getResult(ControlReply *reply,$/;"	f	class:ControlConnection::ReceiveWaiter	signature:(ControlReply *reply, QString *errmsg)
getResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      bool getResult(ControlReply *reply, QString *errmsg = 0);$/;"	p	class:ControlConnection::ReceiveWaiter	access:public	signature:(ControlReply *reply, QString *errmsg = 0)
getResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::getResult(QString *errmsg)$/;"	f	class:SendCommandEvent::SendWaiter	signature:(QString *errmsg)
getResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    bool getResult(QString *errmsg = 0);$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:(QString *errmsg = 0)
getRouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterDescriptor(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
getRouterDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  RouterDescriptor getRouterDescriptor(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
getRouterDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterDescriptor(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
getRouterDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE RouterDescriptor getRouterDescriptor(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterDescriptorText(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QStringList getRouterDescriptorText(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterDescriptorText(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
getRouterDescriptorText	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QStringList getRouterDescriptorText(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
getRouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getRouterStatus(const QString &id, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &id, QString *errmsg)
getRouterStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  RouterStatus getRouterStatus(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &id, QString *errmsg = 0)
getRouterStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getRouterStatus(const QString &id, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(const QString &id, QString *errmsg)
getRouterStatus	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE RouterStatus getRouterStatus(const QString &id, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &id, QString *errmsg = 0)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::getSetting(QString setting, QVariant defaultValue)$/;"	f	class:VidaliaTab	signature:(QString setting, QVariant defaultValue)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaTab	access:public	signature:(QString name, QVariant defaultValue)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::getSetting(QString setting, QVariant defaultValue)$/;"	f	class:VidaliaWindow	signature:(QString setting, QVariant defaultValue)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaWindow	access:public	signature:(QString name, QVariant defaultValue)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::getSetting(QString name, QVariant defaultValue)$/;"	f	class:VidaliaTabPrototype	signature:(QString name, QVariant defaultValue)
getSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE QVariant getSetting(QString name, QVariant defaultValue);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QString name, QVariant defaultValue)
getSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getSocketPath() const$/;"	f	class:TorSettings	signature:() const
getSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getSocketPath() const;$/;"	p	class:TorSettings	access:public	signature:() const
getSocksAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksAddress(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getSocksAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QHostAddress getSocksAddress(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getSocksAddressList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksAddressList(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getSocksAddressList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QStringList getSocksAddressList(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getSocksAddressList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getSocksAddressList(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
getSocksAddressList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QStringList getSocksAddressList(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
getSocksPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksPort(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getSocksPort	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  quint16 getSocksPort(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getSocksPort() const$/;"	f	class:TorSettings	signature:() const
getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  quint16 getSocksPort() const;$/;"	p	class:TorSettings	access:public	signature:() const
getSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant getSocksPort();$/;"	p	class:TorControlPrototype	access:public	signature:()
getSocksPortList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getSocksPortList(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getSocksPortList	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QList<quint16> getSocksPortList(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getSocksPortList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getSocksPortList(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
getSocksPortList	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QList<quint16> getSocksPortList(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::getStatus() const$/;"	f	class:ControlReply	signature:() const
getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString getStatus() const;$/;"	p	class:ControlReply	access:public	signature:() const
getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::getStatus() const$/;"	f	class:ReplyLine	signature:() const
getStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString getStatus() const;$/;"	p	class:ReplyLine	access:public	signature:() const
getStreams	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getStreams(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
getStreams	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  StreamList getStreams(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
getStreams	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::getStreams(QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QString *errmsg)
getStreams	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE StreamList getStreams(QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QString *errmsg = 0)
getTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::getTab()$/;"	f	class:VAttachButton	signature:()
getTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    VidaliaTab *getTab();$/;"	p	class:VAttachButton	access:public	signature:()
getTitle	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  QString getTitle() const { return _title; }$/;"	f	class:VidaliaTab	access:public	signature:() const
getTorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::getTorOpt(const QString &name)$/;"	f	class:TorrcParser	signature:(const QString &name)
getTorOpt	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorOpt getTorOpt(const QString &name);$/;"	p	class:TorrcParser	access:public	signature:(const QString &name)
getTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getTorVersion()$/;"	f	class:TorControl	signature:()
getTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  quint32 getTorVersion();$/;"	p	class:TorControl	access:public	signature:()
getTorVersion	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE quint32 getTorVersion();$/;"	p	class:TorControlPrototype	access:public	signature:()
getTorVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::getTorVersionString()$/;"	f	class:TorControl	signature:()
getTorVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString getTorVersionString();$/;"	p	class:TorControl	access:public	signature:()
getTorVersionString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QString getTorVersionString();$/;"	p	class:TorControlPrototype	access:public	signature:()
getTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getTorrc() const$/;"	f	class:TorSettings	signature:() const
getTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString getTorrc() const;$/;"	p	class:TorSettings	access:public	signature:() const
getTorrcPath	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QString getTorrcPath() const$/;"	f	class:Torrc	access:public	signature:() const
getTunnelDirConns	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getTunnelDirConns()$/;"	f	class:NetworkSettings	signature:()
getTunnelDirConns	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getTunnelDirConns();$/;"	p	class:NetworkSettings	access:public	signature:()
getUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::getUseBridges()$/;"	f	class:NetworkSettings	signature:()
getUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  bool getUseBridges();$/;"	p	class:NetworkSettings	access:public	signature:()
getWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::getWarnPlaintextPorts() const$/;"	f	class:TorSettings	signature:() const
getWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QList<quint16> getWarnPlaintextPorts() const;$/;"	p	class:TorSettings	access:public	signature:() const
get_pid	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^get_pid()$/;"	f	signature:()
get_pid	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^qint64 get_pid();$/;"	p	signature:()
getcontentlenfromline	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^static int getcontentlenfromline(const char * p, int n)$/;"	f	file:	signature:(const char * p, int n)
gravit	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/log.html	/^niveau de <i>gravit√©<\/i>, depuis <b>Erreur<\/b> (le plus s√©rieux) jusqu'√†$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.ui	/^         <string>&lt;b&gt;WARNING&lt;\/b&gt;: If you hand pick the password it will be saved as plain text in Vidalia's configuration file. Using a random password is safer.<\/string>$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.ui	/^         <string>&lt;b&gt;WARNING&lt;\/b&gt;: The panic button will erease the application if pressed<\/string>$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.ui	/^           <string>&lt;a href=&quot;bridges.finding&quot;&gt;How can I find bridges?&lt;\/a&gt;<\/string>$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeUsage&quot;&gt;Who has used my bridge?&lt;\/a&gt;<\/string>$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/netview.html	/^    –†–µ—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω , –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å  &gt;= 20 –ö–ë\/—Å.$/;"	v
gt	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.ui	/^            <string>&lt;a href=&quot;server.offline&quot;&gt;Why is my relay offline?&lt;\/a&gt;<\/string>$/;"	v
haben	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^durchsuchen. Fehler die zum Beenden von Tor gef&uuml;hrt haben, werden rot oder$/;"	v
handleAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleAddressMap(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleAddressMap	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleAddressMap(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleAttachedClose	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::handleAttachedClose()$/;"	f	class:MainWindow	signature:()
handleAttachedClose	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void handleAttachedClose();$/;"	p	class:MainWindow	access:private	signature:()
handleBandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleBandwidthUpdate(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleBandwidthUpdate	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleBandwidthUpdate(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleCircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleCircuitStatus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleCircuitStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleCircuitStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleClientStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleClientStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleClientStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleClientStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleCloseTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::handleCloseTab(int index)$/;"	f	class:MainWindow	signature:(int index)
handleCloseTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void handleCloseTab(int index);$/;"	p	class:MainWindow	access:private	signature:(int index)
handleEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleEvent(const ControlReply &reply)$/;"	f	class:TorEvents	signature:(const ControlReply &reply)
handleEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleEvent(const ControlReply &reply);$/;"	p	class:TorEvents	access:public	signature:(const ControlReply &reply)
handleGeneralStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleGeneralStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleGeneralStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleGeneralStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleLogMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleLogMessage(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleLogMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleLogMessage(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleNewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleNewConsensus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleNewConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleNewConsensus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleNewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleNewDescriptor(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleNewDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleNewDescriptor(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::handleNext()$/;"	f	class:FirstRunWizard	signature:()
handleNext	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  void handleNext();$/;"	p	class:FirstRunWizard	access:public	signature:()
handleOrConnStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleOrConnStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
handleServerStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleServerStatusEvent(tc::Severity severity,$/;"	f	class:TorEvents	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleServerStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleServerStatusEvent(tc::Severity severity,$/;"	p	class:TorEvents	access:private	signature:(tc::Severity severity, const QString &action, const QHash<QString,QString> &args)
handleStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleStatusEvent(Event e, const ReplyLine &line)$/;"	f	class:TorEvents	signature:(Event e, const ReplyLine &line)
handleStatusEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleStatusEvent(Event type, const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(Event type, const ReplyLine &line)
handleStreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::handleStreamStatus(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
handleStreamStatus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void handleStreamStatus(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
hasData	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  bool hasData() const { return _data.size() > 0; }$/;"	f	class:ReplyLine	access:public	signature:() const
hasGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::hasGUI()$/;"	f	class:PluginWrapper	signature:()
hasGUI	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool hasGUI();$/;"	p	class:PluginWrapper	access:public	signature:()
hasLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::hasLongDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
hasLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool hasLongDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
hasShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::hasShortDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
hasShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool hasShortDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
hashPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::hashPassword(const QString &password)$/;"	f	class:TorSettings	signature:(const QString &password)
hashPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  static QString hashPassword(const QString &password);$/;"	p	class:TorSettings	access:public	signature:(const QString &password)
head	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    LIST_HEAD(listhead, NameValue) head;$/;"	m	struct:NameValueParserData	access:public
help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::help()$/;"	f	class:ConfigDialog	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::help(const QString &topic)$/;"	f	class:ConfigDialog	signature:(const QString &topic)
help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void help();$/;"	p	class:ConfigDialog	access:private	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void help(const QString &topic);$/;"	p	class:ConfigDialog	access:private	signature:(const QString &topic)
help	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void help();$/;"	p	class:UPNPTestDialog	access:public	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::help()$/;"	f	class:MessageLog	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void help();$/;"	p	class:MessageLog	access:private	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::help()$/;"	f	class:NetViewer	signature:()
help	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void help();$/;"	p	class:NetViewer	access:private	signature:()
helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void helpRequested(const QString &topic);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(const QString &topic)
helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void helpRequested(const QString &topic);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &topic)
helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void helpRequested(const QString &topic);$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &topic)
helpRequested	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void helpRequested(const QString &topic);$/;"	p	class:ConfigPage	access:public	signature:(const QString &topic)
helpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::helpUrl() const$/;"	f	class:StatusEventItem	signature:() const
helpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString helpUrl() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
herausfinden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^<a href="log.html">Nachrichtenprotokoll<\/a> anschauen und herausfinden,$/;"	v
herror	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define herror$/;"	d	file:
herror	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define herror(/;"	d	file:
hibernating	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool hibernating() const { return _status == Hibernating; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
hideCheckShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::hideCheckShowOnStartup()$/;"	f	class:StatusTab	signature:()
hideCheckShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void hideCheckShowOnStartup();$/;"	p	class:StatusTab	access:public	signature:()
hideGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::hideGroup(ConfigGroup group)$/;"	f	class:AdvancedPage	signature:(ConfigGroup group)
hideGroup	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void hideGroup(ConfigGroup group);$/;"	p	class:AdvancedPage	access:public	signature:(ConfigGroup group)
highlightBlock	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorHighlighter::highlightBlock(const QString &text)$/;"	f	class:TorHighlighter	signature:(const QString &text)
highlightBlock	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    void highlightBlock(const QString &text);$/;"	p	class:TorHighlighter	access:public	signature:(const QString &text)
however	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^want to run a Tor relay, however, other Tor clients and relays must be able to$/;"	v
however	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^want to run a Tor relay, however, other Tor clients and relays must be able to$/;"	v
href	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.ui	/^      <string>&lt;a href=&quot;https:\/\/trac.torproject.org\/projects\/tor\/newticket&quot;&gt;https:\/\/trac.torproject.org\/projects\/tor\/newticket&lt;\/a&gt;<\/string>$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeHelp&quot;&gt;What's this?&lt;\/a&gt;<\/string>$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeUsage&quot;&gt;Who has used my bridge?&lt;\/a&gt;<\/string>$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/server.html	/^href="http:\/\/192.168.0.1\/">http:\/\/192.168.0.1<\/a> ÿ£Ÿà <a$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/troubleshooting.html	/^href="log.html">le journal des √©v√®nements<\/a> pour voir si un des derniers$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/server.html	/^href="http:\/\/192.168.0.1\/">http:\/\/192.168.0.1<\/a> –∏–ª–∏ <a$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.ui	/^            <string>&lt;a href=&quot;server.offline&quot;&gt;Why is my relay offline?&lt;\/a&gt;<\/string>$/;"	v
href	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.ui	/^            <string>If your relay isn't listed among the others, it may be because it doesn't have a Running flag yet. &lt;a href=&quot;server.consensus&quot;&gt;What's this?&lt;\/a&gt;<\/string>$/;"	v
httpWrite	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.c	/^httpWrite(int fd, const char * body, int bodysize,$/;"	f	file:	signature:(int fd, const char * body, int bodysize, const char * headers, int headerssize)
i	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^i(QString str)$/;"	f	signature:(QString str)
i	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString i(QString str);$/;"	p	signature:(QString str)
i1	/Users/chiiph/Code/vidalia/src/vidalia/res/icons/vidalia.icns	/^icns/;"	v
icon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::icon() const$/;"	f	class:StatusEventItem	signature:() const
icon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QPixmap icon() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  CircuitId id() const { return _circId; }$/;"	f	class:Circuit	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString id() const { return _id; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString id() const { return _id; }$/;"	f	class:RouterStatus	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  StreamId id() const { return _streamId; }$/;"	f	class:Stream	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  quint32 id() const { return _seqnum; }$/;"	f	class:LogTreeItem	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  CircuitId id() const { return _circuit.id(); }$/;"	f	class:CircuitItem	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString id() const { return _rd->id(); }$/;"	f	class:RouterListItem	access:public	signature:() const
id	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  StreamId id() const { return _stream.id(); }$/;"	f	class:StreamItem	access:public	signature:() const
identity	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^port lets Vidalia receive status updates from Tor, request a new identity,$/;"	v
importExtension	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::importExtension(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
importExtension	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue importExtension(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
included	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^<i>If you got Tor as a static binary with OpenSSL included, then you should $/;"	v	file:
indexToAuthMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::indexToAuthMethod(int index)$/;"	f	class:AdvancedPage	signature:(int index)
indexToAuthMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  TorSettings::AuthenticationMethod indexToAuthMethod(int index);$/;"	p	class:AdvancedPage	access:private	signature:(int index)
information	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::information(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
information	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int information(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.cpp	/^void VidaliaExtension::initialize(const QString &key, QScriptEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QScriptEngine *engine)
initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^  void initialize(const QString &key, QScriptEngine *engine);$/;"	p	class:VidaliaExtension	access:public	signature:(const QString &key, QScriptEngine *engine)
initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  void initialize(const QString &key, QScriptEngine *engine);$/;"	p	class:VidaliaExtension	file:	access:public	signature:(const QString &key, QScriptEngine *engine)
initialize	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^void VidaliaExtension::initialize(const QString &key, QStringEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QStringEngine *engine)
initialize	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensions.cpp~	/^void VidaliaExtension::initialize(const QString &key, QScriptEngine *engine)$/;"	f	class:VidaliaExtension	signature:(const QString &key, QScriptEngine *engine)
initializeUPNP	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::initializeUPNP()$/;"	f	class:UPNPControlThread	signature:()
initializeUPNP	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError initializeUPNP();$/;"	p	class:UPNPControlThread	access:private	signature:()
initminiupnpc	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^initminiupnpc(void) $/;"	f	signature:(void)
install	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::install(const QString &torPath, const QString &torrc,$/;"	f	class:TorService	signature:(const QString &torPath, const QString &torrc, quint16 controlPort)
install	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool install(const QString &torPath, const QString &torrc,$/;"	p	class:TorService	access:public	signature:(const QString &torPath, const QString &torrc, quint16 controlPort)
installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::installUpdates(UpdateProcess::BundleInfo bi)$/;"	f	class:MainWindow	signature:(UpdateProcess::BundleInfo bi)
installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void installUpdates(UpdateProcess::BundleInfo bi);$/;"	p	class:MainWindow	access:private	signature:(UpdateProcess::BundleInfo bi)
installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::installUpdates(BundleInfo bi)$/;"	f	class:UpdateProcess	signature:(BundleInfo bi)
installUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void installUpdates(BundleInfo bi);$/;"	p	class:UpdateProcess	access:public	signature:(BundleInfo bi)
installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::installUpdatesFailed(const QString &errmsg)$/;"	f	class:MainWindow	signature:(const QString &errmsg)
installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void installUpdatesFailed(const QString &errmsg);$/;"	p	class:MainWindow	access:private	signature:(const QString &errmsg)
installUpdatesFailed	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void installUpdatesFailed(QString errmsg);$/;"	p	class:UpdateProcess	access:public	signature:(QString errmsg)
installUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::installUpdatesLater()$/;"	f	class:UpdatesAvailableDialog	signature:()
installUpdatesLater	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void installUpdatesLater();$/;"	p	class:UpdatesAvailableDialog	access:private	signature:()
installUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::installUpdatesNow()$/;"	f	class:UpdatesAvailableDialog	signature:()
installUpdatesNow	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void installUpdatesNow();$/;"	p	class:UpdatesAvailableDialog	access:private	signature:()
install_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^install_exception_handler(const QString &dumpPath)$/;"	f	namespace:CrashReporter	signature:(const QString &dumpPath)
install_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool install_exception_handler(const QString &dumpPath);$/;"	p	namespace:CrashReporter	signature:(const QString &dumpPath)
install_signal_handler	/Users/chiiph/Code/vidalia/src/tests/testMain.cpp	/^install_signal_handler()$/;"	f	signature:()
install_signal_handler	/Users/chiiph/Code/vidalia/src/vidalia/main.cpp	/^install_signal_handler()$/;"	f	signature:()
instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl* UPNPControl::instance()$/;"	f	class:UPNPControl	signature:()
instance	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  static UPNPControl* instance();$/;"	p	class:UPNPControl	access:public	signature:()
interface	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^administrative interface, you should look for an option to enable UPnP. The$/;"	v
interface	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^administrative interface, you should look for an option to enable UPnP. The$/;"	v
ip	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QHostAddress ip() const { return _ip; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
ip	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QHostAddress ip() const { return _ip; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
ipAddress	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QHostAddress ipAddress() const { return _ipAddress; }$/;"	f	class:RouterStatus	access:public	signature:() const
ipToCountry	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::ipToCountry(const QHostAddress &ip, QString *errmsg)$/;"	f	class:TorControl	signature:(const QHostAddress &ip, QString *errmsg)
ipToCountry	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  QString ipToCountry(const QHostAddress &ip, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, QString *errmsg = 0)
ipToCountry	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant ipToCountry(const QHostAddress &ip);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip)
ipcondescURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * ipcondescURL;$/;"	m	struct:UPNPUrls	access:public
isAccountingEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isAccountingEnabled()$/;"	f	class:ServerSettings	signature:()
isAccountingEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isAccountingEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
isAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isAuthenticated()$/;"	f	class:TorControl	signature:()
isAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isAuthenticated();$/;"	p	class:TorControl	access:public	signature:()
isAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::isAutoUpdateEnabled() const$/;"	f	class:VidaliaSettings	signature:() const
isAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool isAutoUpdateEnabled() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
isBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isBridgeEnabled()$/;"	f	class:ServerSettings	signature:()
isBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isBridgeEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
isCheckedShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::isCheckedShowOnStartup()$/;"	f	class:StatusTab	signature:()
isCheckedShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  bool isCheckedShowOnStartup();$/;"	p	class:StatusTab	access:public	signature:()
isCircuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isCircuitEstablished()$/;"	f	class:TorControl	signature:()
isCircuitEstablished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isCircuitEstablished();$/;"	p	class:TorControl	access:public	signature:()
isCircuitEstablished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isCircuitEstablished();$/;"	p	class:TorControlPrototype	access:public	signature:()
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::isConnected()$/;"	f	class:ControlConnection	signature:()
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool isConnected();$/;"	p	class:ControlConnection	access:public	signature:()
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  bool isConnected() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::isConnected() const$/;"	f	class:ControlSocket	signature:() const
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool isConnected() const;$/;"	p	class:ControlSocket	access:public	signature:() const
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isConnected()$/;"	f	class:TorControl	signature:()
isConnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isConnected();$/;"	p	class:TorControl	access:public	signature:()
isConnected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isConnected();$/;"	p	class:TorControlPrototype	access:public	signature:()
isDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isDirectoryMirror()$/;"	f	class:ServerSettings	signature:()
isDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isDirectoryMirror();$/;"	p	class:ServerSettings	access:public	signature:()
isDone	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::isDone() const$/;"	f	class:HelperProcess	signature:() const
isDone	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  bool isDone() const;$/;"	p	class:HelperProcess	access:public	signature:() const
isDone	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::isDone() const$/;"	f	class:HelperProcessPrototype	signature:() const
isDone	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE bool isDone() const;$/;"	p	class:HelperProcessPrototype	access:public	signature:() const
isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.cpp	/^ProtocolInfo::isEmpty() const$/;"	f	class:ProtocolInfo	signature:() const
isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  bool isEmpty() const;$/;"	p	class:ProtocolInfo	access:public	signature:() const
isEmpty	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool isEmpty() { return (_id.isEmpty() && _name.isEmpty()); }$/;"	f	class:RouterDescriptor	access:public	signature:()
isEmptyValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::isEmptyValue(const QVariant &value) const$/;"	f	class:AbstractTorSettings	signature:(const QVariant &value) const
isEmptyValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  bool isEmptyValue(const QVariant &value) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QVariant &value) const
isExpired	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::isExpired(const AddressMapEntry &entry) const$/;"	f	class:AddressMap	signature:(const AddressMapEntry &entry) const
isExpired	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  bool isExpired(const AddressMapEntry &entry) const;$/;"	p	class:AddressMap	access:private	signature:(const AddressMapEntry &entry) const
isGzipSupported	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::isGzipSupported()$/;"	f	class:ZlibByteArray	signature:()
isGzipSupported	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static bool isGzipSupported();$/;"	p	class:ZlibByteArray	access:public	signature:()
isInstalled	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isInstalled()$/;"	f	class:TorService	signature:()
isInstalled	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool isInstalled();$/;"	p	class:TorService	access:public	signature:()
isKeyword	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::isKeyword(const QString &contents, int pos)$/;"	f	class:TorrcParser	signature:(const QString &contents, int pos)
isKeyword	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isKeyword(const QString &contents, int pos);$/;"	p	class:TorrcParser	access:private	signature:(const QString &contents, int pos)
isMapped	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::isMapped(const QString &addr) const$/;"	f	class:AddressMap	signature:(const QString &addr) const
isMapped	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  bool isMapped(const QString &addr) const;$/;"	p	class:AddressMap	access:public	signature:(const QString &addr) const
isMultilined	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultilined()$/;"	f	class:TorOpt	access:public	signature:()
isMultilined	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultilined()$/;"	f	class:TorrcLine	access:public	signature:()
isMultivalued	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isMultivalued()$/;"	f	class:TorOpt	access:public	signature:()
isNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isNonExitEnabled()$/;"	f	class:ServerSettings	signature:()
isNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isNonExitEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
isNull	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  bool isNull() const$/;"	f	class:TorOpt	access:public	signature:() const
isOpen	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool isOpen() { return _logFile.isOpen() && _logFile.isWritable(); }$/;"	f	class:Log	access:public	signature:()
isOpen	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::isOpen()$/;"	f	class:LogFile	signature:()
isOpen	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool isOpen();$/;"	p	class:LogFile	access:public	signature:()
isOpen	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::isOpen() const$/;"	f	class:GeoIpDatabase	signature:() const
isOpen	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  bool isOpen() const;$/;"	p	class:GeoIpDatabase	access:public	signature:() const
isPersistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::isPersistent()$/;"	f	class:PluginWrapper	signature:()
isPersistent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    bool isPersistent();$/;"	p	class:PluginWrapper	access:public	signature:()
isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool isRunning() const { return (flags() & Running); }$/;"	f	class:RouterStatus	access:public	signature:() const
isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isRunning()$/;"	f	class:TorControl	signature:()
isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isRunning();$/;"	p	class:TorControl	access:public	signature:()
isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isRunning()$/;"	f	class:TorService	signature:()
isRunning	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool isRunning();$/;"	p	class:TorService	access:public	signature:()
isRunning	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::isRunning() const$/;"	f	class:UpdateProcess	signature:() const
isRunning	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  bool isRunning() const;$/;"	p	class:UpdateProcess	access:public	signature:() const
isRunning	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isRunning();$/;"	p	class:TorControlPrototype	access:public	signature:()
isServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isServerEnabled()$/;"	f	class:ServerSettings	signature:()
isServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isServerEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
isSupported	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::isSupported()$/;"	f	class:TorService	signature:()
isSupported	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static bool isSupported();$/;"	p	class:TorService	access:public	signature:()
isTorKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::isTorKilled() const$/;"	f	class:BootstrapTestTorKiller	signature:() const
isTorKilled	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool isTorKilled() const;$/;"	p	class:BootstrapTestTorKiller	access:public	signature:() const
isTorStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::isTorStopped() const$/;"	f	class:MainWindow	signature:() const
isTorStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool isTorStopped() const;$/;"	p	class:MainWindow	access:public	signature:() const
isUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::isUpnpEnabled()$/;"	f	class:ServerSettings	signature:()
isUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool isUpnpEnabled();$/;"	p	class:ServerSettings	access:public	signature:()
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::isValid() const$/;"	f	class:BootstrapStatus	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  bool isValid() const;$/;"	p	class:BootstrapStatus	access:public	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  bool isValid() const { return _isValid; }$/;"	f	class:Circuit	access:public	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  bool isValid() const { return _valid; }$/;"	f	class:RouterStatus	access:public	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::isValid() const$/;"	f	class:Stream	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  bool isValid() const;$/;"	p	class:Stream	access:public	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::isValid() const$/;"	f	class:PackageInfo	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  bool isValid() const;$/;"	p	class:PackageInfo	access:public	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::isValid(const QString &key, const QString &value)$/;"	f	class:Torrc	signature:(const QString &key, const QString &value)
isValid	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool isValid(const QString &key, const QString &value);$/;"	p	class:Torrc	access:public	signature:(const QString &key, const QString &value)
isValid	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::isValid() const$/;"	f	class:GeoIpRecord	signature:() const
isValid	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  bool isValid() const;$/;"	p	class:GeoIpRecord	access:public	signature:() const
isValidCircuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::isValidCircuitId(const CircuitId &circId)$/;"	f	class:Circuit	signature:(const CircuitId &circId)
isValidCircuitId	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  static bool isValidCircuitId(const CircuitId &circId);$/;"	p	class:Circuit	access:public	signature:(const CircuitId &circId)
isValidLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::isValidLanguageCode(const QString &languageCode)$/;"	f	class:LanguageSupport	signature:(const QString &languageCode)
isValidLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static bool isValidLanguageCode(const QString &languageCode);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageCode)
isValidStreamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::isValidStreamId(const StreamId &streamId)$/;"	f	class:Stream	signature:(const StreamId &streamId)
isValidStreamId	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^   static bool isValidStreamId(const StreamId &streamId);$/;"	p	class:Stream	access:public	signature:(const StreamId &streamId)
isValidTopicElement	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::isValidTopicElement(const QDomElement &topicElement)$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement)
isValidTopicElement	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool isValidTopicElement(const QDomElement &topicElement);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &topicElement)
isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::isVidaliaRunningTor()$/;"	f	class:TorControl	signature:()
isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool isVidaliaRunningTor();$/;"	p	class:TorControl	access:public	signature:()
isVidaliaRunningTor	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool isVidaliaRunningTor();$/;"	p	class:TorControlPrototype	access:public	signature:()
isZlibAvailable	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::isZlibAvailable()$/;"	f	class:ZlibByteArray	signature:()
isZlibAvailable	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static bool isZlibAvailable();$/;"	p	class:ZlibByteArray	access:public	signature:()
is_process_running	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^is_process_running(qint64 pid)$/;"	f	signature:(qint64 pid)
is_process_running	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^bool is_process_running(qint64 pid);$/;"	p	signature:(qint64 pid)
is_vidalia_running	/Users/chiiph/Code/vidalia/src/tests/testMain.cpp	/^is_vidalia_running(const QString &pidfile)$/;"	f	signature:(const QString &pidfile)
is_vidalia_running	/Users/chiiph/Code/vidalia/src/vidalia/main.cpp	/^is_vidalia_running(const QString &pidfile)$/;"	f	signature:(const QString &pidfile)
ist	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Ein anderer m&ouml;glicher Grund ist, dass bereits ein Tor-Prozess l&auml;uft.$/;"	v
it	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos Tor-ohjelma kuuntelee toista porttia kuin Vidalia kuvittelee, niin Vidalia ei pysty muodostamaan yhteytt√§ Tor-ohjelmaan. T√§t√§ asetusta harvoin tarvitsee muuttaa, mutta jos jokin muu tietokoneella oleva palvelu  tuottaa h√§iri√∂it√§, niin porttia voidaan joutua muuttamaan. Sen muuttaminen onnistuu Vidalian <a href="config.html#advanced">lis√§asetuksista<\/a>.$/;"	v
ja	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/netview.html	/^    Aika, kuinka kauan reititin on ollut p√§√§ll√§ ja, josta voi olla apua arvioidakseen reitittimen vakaus.$/;"	v
json_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/script_extension.py	/^    json_class = sys.argv[1]$/;"	v
k	/Users/chiiph/Code/vidalia/src/vidalia/res/icons/node-unresponsive.png	/^/;"	v
kautta	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/config.html	/^    Jos on rajoittavan palomuurin takana tai v√§lityspalvelin rajoittaa yhdistett√§vien porttien k√§ytt√∂√§, voi m√§√§ritt√§√§ Tor-ohjelman ottavan yhteyden sillaisiin reitittimiin jotka kuuntelevat niiss√§ porteissa joita palomuuri tai v√§lityspalvelin sallii. Laittaa vain listan niist√§ porteista, jotka ovat sallittuja palomuurin tai v√§lityspalvelimen kautta, eroteltuna pilkuilla. (<i>Esimerkiksi: 80,443,8080<\/i>)$/;"	v
kautta	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/netview.html	/^Kun halutaan kommunikoida tuntemattomasti Tor-verkon kautta (esim. internetsivulle), niin Tor-ohjelma luo yhteyden <i>(engl. circuit)<\/i> koostuen erillisist√§ suojatuista yhteyksist√§ reititinsarjojen l√§pi verkossa. Ohjelman liikenne kulkee datavirtoina <i>(engl. stream)<\/i> edell√§ mainitun yhteystyypin mukaisesti. Toiminnan tehostuksena yksitt√§isess√§ yhteydess√§ voi olla useaita datavirtoja.$/;"	p	file:	signature:(esim. internetsivulle)
keyPressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::keyPressEvent(QKeyEvent *event)$/;"	f	class:RouterListWidget	signature:(QKeyEvent *event)
keyPressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void keyPressEvent(QKeyEvent *event);$/;"	p	class:RouterListWidget	access:protected	signature:(QKeyEvent *event)
keypath	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      keypath;$/;"	m	struct:s_UserLocalData	file:	access:public
keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.cpp	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.h	/^  QStringList keys() const;$/;"	p	class:VidaliaExtension	access:public	signature:() const
keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  QStringList	keys() const;$/;"	p	class:VidaliaExtension	file:	access:public	signature:() const
keys	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensions.cpp~	/^QStringList VidaliaExtension::keys() const$/;"	f	class:VidaliaExtension	signature:() const
keyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString keyword() const { return _keyword; }$/;"	f	class:ControlCommand	access:public	signature:() const
kill	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::kill()$/;"	f	class:TorControl	signature:()
kill	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void kill();$/;"	p	class:TorControl	access:public	signature:()
klicken	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^        k&ouml;nnen Sie auf die Schaltfl&auml;che <i>Adresse<\/i> klicken,$/;"	v
konfigurieren	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    gestartet. Sie k&ouml;nnen Vidalia auch konfigurieren, dass es beim$/;"	v
konnte	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Ein h&auml;ufiger Grund, weshalb Vidalia Tor nicht starten konnte, ist die$/;"	v
konnte	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^konnte, ist dass Tor nach dem Start einen Fehler festgestellt hat und$/;"	v
kryptaamalla	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/config.html	/^    Jos ISP (Internet Palvelun Tarjoajasi engl. Internet Service Provider) torjuu yhteydet Tor-verkkoon, Tor-ohjelma voi v√§ltt√§√§ suodatuksen suojaamalla, tarkemmin ottaen kryptaamalla, sen yhteydet ja yhdist√§m√§ll√§ Tor-verkkoon <i>siltareittimen<\/i> kautta (vain Tor 0.2.0.3-alpha tai uudempi). Siltareitittimi√§ voi m√§√§ritt√§√§ joko osoitteella ja portilla tai niiden osoitteella, portilla ja tunnisteella.<br>$/;"	v
kysymyksist	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Alapuolella on lista yleisimmist√§ ongelmista ja kysymyksist√§, joita on Tor-ohjelman k√§ytt√§jill√§. Jos ohjeesta ei l√∂ydy ratkaisua ongelmaan, niin Vidalian internetsivulta <i>www.vidalia-project.net<\/i> on mahdollista saada lis√§√§ apua.$/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/application-exit.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/edit-copy.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/edit-delete.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/edit_redo.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/edit_select_all.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/edit_undo.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/editpaste.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/folder.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/go-down-search.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/go-up-search.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/help-about.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/list-add.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/list-remove.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/page-zoom.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/preferences-system.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/system-help.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-logo.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-off.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-on.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-starting.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/tor-stopping.png	/^/;"	v
l	/Users/chiiph/Code/vidalia/src/vidalia/res/22x22/utilities-system-monitor.png	/^/;"	v
labelWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::labelWidth(const QString &label)$/;"	f	class:GraphFrame	signature:(const QString &label)
labelWidth	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  int labelWidth(const QString &label);$/;"	p	class:GraphFrame	access:private	signature:(const QString &label)
lanaddr	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char lanaddr[16];	\/* our ip address on the LAN *\/$/;"	m	struct:__anon1	file:	access:public
lanaddr	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  char lanaddr[16];$/;"	m	class:UPNPControlThread	access:private
language	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString language() { return _language; }$/;"	f	class:Vidalia	access:public	signature:()
language	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::language()$/;"	f	class:HelpBrowser	signature:()
language	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  QString language();$/;"	p	class:HelpBrowser	access:private	signature:()
languageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageCode(const QString &languageName)$/;"	f	class:LanguageSupport	signature:(const QString &languageName)
languageCode	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString languageCode(const QString &languageName);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageName)
languageCodes	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageCodes()$/;"	f	class:LanguageSupport	signature:()
languageCodes	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QStringList languageCodes();$/;"	p	class:LanguageSupport	access:public	signature:()
languageName	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageName(const QString &languageCode)$/;"	f	class:LanguageSupport	signature:(const QString &languageCode)
languageName	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QString languageName(const QString &languageCode);$/;"	p	class:LanguageSupport	access:public	signature:(const QString &languageCode)
languageNames	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languageNames()$/;"	f	class:LanguageSupport	signature:()
languageNames	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QStringList languageNames();$/;"	p	class:LanguageSupport	access:public	signature:()
languages	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.cpp	/^LanguageSupport::languages()$/;"	f	class:LanguageSupport	signature:()
languages	/Users/chiiph/Code/vidalia/src/vidalia/LanguageSupport.h	/^  static QMap<QString, QString> languages();$/;"	p	class:LanguageSupport	access:public	signature:()
lastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::lastCheckedForUpdates() const$/;"	f	class:VidaliaSettings	signature:() const
lastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QDateTime lastCheckedForUpdates() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
lastResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::lastResult() const$/;"	f	class:BootstrapTestCase	signature:() const
lastResult	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  TestResult lastResult() const;$/;"	p	class:BootstrapTestCase	access:public	signature:() const
latitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float latitude() const { return _latitude; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
layoutText	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::layoutText(const QString &text,$/;"	f	class:StatusEventItemDelegate	signature:(const QString &text, const QFont &font, int maxLineWidth, int maxLines, int *textHeight)
layoutText	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  static QStringList layoutText(const QString &text,$/;"	p	class:StatusEventItemDelegate	access:protected	signature:(const QString &text, const QFont &fontMetrics, int maxLineWidth, int maxLines = -1, int *textHeight = 0)
length	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  uint length() const { return _ids.size(); }$/;"	f	class:Circuit	access:public	signature:() const
lerp	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::lerp(float input, float *table)$/;"	f	class:TorMapImageView	signature:(float input, float *table)
lerp	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  float lerp(float input, float *table);$/;"	p	class:TorMapImageView	access:private	signature:(float input, float *table)
level	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	int level;$/;"	m	struct:IGDdatas	access:public
lief	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls Tor bereits l&auml;nger als einige Sekunden lief, bevor es beendet wurde,$/;"	v
line	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  TorrcLine *line() const$/;"	f	class:TorOpt	access:public	signature:() const
linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::linkActivated(const QString &url)$/;"	f	class:ServerPage	signature:(const QString &url)
linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void linkActivated(const QString &url);$/;"	p	class:ServerPage	access:private	signature:(const QString &url)
linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::linkActivated(const QString &url)$/;"	f	class:NetViewer	signature:(const QString &url)
linkActivated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void linkActivated(const QString &url);$/;"	p	class:NetViewer	access:private	signature:(const QString &url)
load	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::load()$/;"	f	class:AdvancedPage	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void load();$/;"	p	class:AdvancedPage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::load()$/;"	f	class:AppearancePage	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  void load();$/;"	p	class:AppearancePage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void load() = 0;$/;"	p	class:ConfigPage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::load()$/;"	f	class:GeneralPage	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void load();$/;"	p	class:GeneralPage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::load()$/;"	f	class:NetworkPage	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void load();$/;"	p	class:NetworkPage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::load()$/;"	f	class:ServerPage	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void load();$/;"	p	class:ServerPage	access:public	signature:()
load	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::load(const QString &torrcPath, const QString &defaultsPath)$/;"	f	class:Torrc	signature:(const QString &torrcPath, const QString &defaultsPath)
load	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void load(const QString &torrcPath, const QString &defaultsPath = "");$/;"	p	class:Torrc	access:public	signature:(const QString &torrcPath, const QString &defaultsPath = ”)
loadAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadAddressMap()$/;"	f	class:NetViewer	signature:()
loadAddressMap	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadAddressMap();$/;"	p	class:NetViewer	access:private	signature:()
loadAllPlugins	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::loadAllPlugins()$/;"	f	class:PluginEngine	signature:()
loadAllPlugins	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void loadAllPlugins();$/;"	p	class:PluginEngine	access:public	signature:()
loadBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadBandwidthLimits()$/;"	f	class:ServerPage	signature:()
loadBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadBandwidthLimits();$/;"	p	class:ServerPage	access:private	signature:()
loadBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadBridgeIdentity()$/;"	f	class:ServerPage	signature:()
loadBridgeIdentity	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadBridgeIdentity();$/;"	p	class:ServerPage	access:private	signature:()
loadConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::loadConf(const QString &contents, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &contents, QString *errmsg)
loadConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool loadConf(const QString &contents, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(const QString &contents, QString *errmsg = 0)
loadConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadConnections()$/;"	f	class:NetViewer	signature:()
loadConnections	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadConnections();$/;"	p	class:NetViewer	access:public	signature:()
loadContents	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::loadContents(const QDomDocument *document, QString &errorString)$/;"	f	class:HelpBrowser	signature:(const QDomDocument *document, QString &errorString)
loadContents	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  bool loadContents(const QDomDocument *document, QString &errorString);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomDocument *document, QString &errorString)
loadContentsFromXml	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::loadContentsFromXml(QString xmlFile)$/;"	f	class:HelpBrowser	signature:(QString xmlFile)
loadContentsFromXml	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void loadContentsFromXml(QString xmlFile);$/;"	p	class:HelpBrowser	access:private	signature:(QString xmlFile)
loadControlCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::loadControlCookie(QString cookiePath)$/;"	f	class:MainWindow	signature:(QString cookiePath)
loadControlCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QByteArray loadControlCookie(QString cookiePath = QString());$/;"	p	class:MainWindow	access:private	signature:(QString cookiePath = QString())
loadExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::loadExitPolicies()$/;"	f	class:ServerPage	signature:()
loadExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void loadExitPolicies();$/;"	p	class:ServerPage	access:private	signature:()
loadHtml	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.cpp	/^LicenseDialog::loadHtml(const QString &source) const$/;"	f	class:LicenseDialog	signature:(const QString &source) const
loadHtml	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  virtual QString loadHtml(const QString &source) const;$/;"	p	class:LicenseDialog	access:protected	signature:(const QString &source) const
loadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::loadNetworkStatus()$/;"	f	class:NetViewer	signature:()
loadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void loadNetworkStatus();$/;"	p	class:NetViewer	access:private	signature:()
loadPackagesTable	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::loadPackagesTable(const PackageList &packageList)$/;"	f	class:UpdatesAvailableDialog	signature:(const PackageList &packageList)
loadPackagesTable	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  void loadPackagesTable(const PackageList &packageList);$/;"	p	class:UpdatesAvailableDialog	access:private	signature:(const PackageList &packageList)
loadResource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::loadResource(int type, const QUrl &name)$/;"	f	class:HelpTextBrowser	signature:(int type, const QUrl &name)
loadResource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  QVariant loadResource(int type, const QUrl &name);$/;"	p	class:HelpTextBrowser	access:public	signature:(int type, const QUrl &name)
loadServiceFunctions	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::loadServiceFunctions()$/;"	f	class:TorService	signature:()
loadServiceFunctions	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static bool loadServiceFunctions();$/;"	p	class:TorService	access:public	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::loadSettings()$/;"	f	class:BandwidthGraph	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void loadSettings();$/;"	p	class:BandwidthGraph	access:private	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::loadSettings()$/;"	f	class:ConfigDialog	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void loadSettings();$/;"	p	class:ConfigDialog	access:private	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::loadSettings()$/;"	f	class:MessageLog	signature:()
loadSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void loadSettings();$/;"	p	class:MessageLog	access:private	signature:()
loadToolBar	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::loadToolBar()$/;"	f	class:TorrcDialog	signature:()
loadToolBar	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void loadToolBar();$/;"	p	class:TorrcDialog	access:private	signature:()
loadTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::loadTorrc()$/;"	f	class:TorrcDialog	signature:()
loadTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void loadTorrc();$/;"	p	class:TorrcDialog	access:private	signature:()
loaded	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool loaded;$/;"	m	struct:ServiceFunctions	access:public
localGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::localGeoIpDatabase() const$/;"	f	class:VidaliaSettings	signature:() const
localGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString localGeoIpDatabase() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
localValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::localValue(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
localValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant localValue(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
location	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString location() const { return _location; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
location	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  GeoIpRecord location() const { return _location; }$/;"	f	class:RouterListItem	access:public	signature:() const
log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::log(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::log(LogLevel level, QString msg)$/;"	f	class:Log	signature:(LogLevel level, QString msg)
log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  LogMessage log(LogLevel level, QString message);$/;"	p	class:Log	access:public	signature:(LogLevel level, QString message)
log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage log(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
log	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void log(const QString &severity, const QString &message);$/;"	p	class:TorProcess	access:public	signature:(const QString &severity, const QString &message)
log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::log(Log::LogLevel level, QString msg)$/;"	f	class:Vidalia	signature:(Log::LogLevel level, QString msg)
log	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Log::LogMessage log(Log::LogLevel level, QString msg);$/;"	p	class:Vidalia	access:public	signature:(Log::LogLevel level, QString msg)
log	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::log(tc::Severity type, const QString &message)$/;"	f	class:LogTreeWidget	signature:(tc::Severity type, const QString &message)
log	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  LogTreeItem* log(tc::Severity severity, const QString &message);$/;"	p	class:LogTreeWidget	access:public	signature:(tc::Severity severity, const QString &message)
log	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::log(tc::Severity type, const QString &message)$/;"	f	class:MessageLog	signature:(tc::Severity type, const QString &message)
log	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void log(tc::Severity severity, const QString &msg);$/;"	p	class:MessageLog	access:private	signature:(tc::Severity severity, const QString &msg)
logLevelToString	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::logLevelToString(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
logLevelToString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static inline QString logLevelToString(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
logLevels	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::logLevels()$/;"	f	class:Log	signature:()
logLevels	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static QStringList logLevels();$/;"	p	class:Log	access:public	signature:()
logMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorControl	access:public	signature:(tc::Severity level, const QString &msg)
logMessage	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorEvents	access:public	signature:(tc::Severity level, const QString &msg)
logMessage	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void logMessage(tc::Severity level, const QString &msg);$/;"	p	class:TorControlPrototype	access:public	signature:(tc::Severity level, const QString &msg)
longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::longDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
longDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString longDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
longitude	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  float longitude() const { return _longitude; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
lt	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.ui	/^         <string>&lt;b&gt;WARNING&lt;\/b&gt;: If you hand pick the password it will be saved as plain text in Vidalia's configuration file. Using a random password is safer.<\/string>$/;"	v
lt	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.ui	/^         <string>&lt;b&gt;WARNING&lt;\/b&gt;: The panic button will erease the application if pressed<\/string>$/;"	v
lt	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.ui	/^           <string>&lt;a href=&quot;bridges.finding&quot;&gt;How can I find bridges?&lt;\/a&gt;<\/string>$/;"	v
lt	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeHelp&quot;&gt;What's this?&lt;\/a&gt;<\/string>$/;"	v
lt	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeUsage&quot;&gt;Who has used my bridge?&lt;\/a&gt;<\/string>$/;"	v
lt	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.ui	/^            <string>&lt;a href=&quot;server.offline&quot;&gt;Why is my relay offline?&lt;\/a&gt;<\/string>$/;"	v
m	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/network-workgroup.png	/^9µßvÌ⁄/;"	v
m	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cm.png	/^/;"	v
m	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/lk.png	/^¬ï3ˇ“jÃà/;"	v
main	/Users/chiiph/Code/vidalia/src/crashreporter/main.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tests/testMain.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	/Users/chiiph/Code/vidalia/src/vidalia/main.cpp	/^main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
map	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^In the middle of the dialog, below the network map, you will see a list of$/;"	v
map	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^In the middle of the dialog, below the network map, you will see a list of$/;"	v
map	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^In the middle of the dialog, below the network map, you will see a list of$/;"	v
mappedTo	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::mappedTo(const QString &addr) const$/;"	f	class:AddressMap	signature:(const QString &addr) const
mappedTo	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  QString mappedTo(const QString &addr) const;$/;"	p	class:AddressMap	access:public	signature:(const QString &addr) const
matches	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::matches(const Policy &policy) const$/;"	f	class:Policy	signature:(const Policy &policy) const
matches	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  bool matches(const Policy &policy) const;$/;"	p	class:Policy	access:public	signature:(const Policy &policy) const
maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::maximumItemCount() const$/;"	f	class:StatusEventWidget	signature:() const
maximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  int maximumItemCount() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
menuAction	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::menuAction()$/;"	f	class:PluginWrapper	signature:()
menuAction	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QAction *menuAction();$/;"	p	class:PluginWrapper	access:public	signature:()
message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::message() const$/;"	f	class:LogEvent	signature:() const
message	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  QString message() const;$/;"	p	class:LogEvent	access:public	signature:() const
message	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::message() const$/;"	f	class:LogTreeItem	signature:() const
message	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QString message() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
messageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::messageCount()$/;"	f	class:LogTreeWidget	signature:()
messageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  int messageCount();$/;"	p	class:LogTreeWidget	access:public	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::metaTypeId()$/;"	f	class:HelperProcessPrototype	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static int metaTypeId();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::metaTypeId() {$/;"	f	class:TorControlPrototype	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  static int metaTypeId();$/;"	p	class:TorControlPrototype	access:public	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::metaTypeId()$/;"	f	class:VidaliaTabPrototype	signature:()
metaTypeId	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static int metaTypeId();$/;"	p	class:VidaliaTabPrototype	access:public	signature:()
methodBits	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::methodBits(CompressionMethod method)$/;"	f	class:ZlibByteArray	signature:(CompressionMethod method)
methodBits	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static int methodBits(CompressionMethod method);$/;"	p	class:ZlibByteArray	access:private	signature:(CompressionMethod method)
methodString	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::methodString(CompressionMethod method)$/;"	f	class:ZlibByteArray	signature:(CompressionMethod method)
methodString	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QString methodString(CompressionMethod method);$/;"	p	class:ZlibByteArray	access:private	signature:(CompressionMethod method)
minidump_callback	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^minidump_callback(const _char_t *path,    \/\/ Path to the minidump file$/;"	f	namespace:CrashReporter	signature:(const _char_t *path, const _char_t *id, void *context, EXCEPTION_POINTERS *exInfo, MDRawAssertionInfo *assertionInfo, bool succeeded)
minimumSizeHint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::minimumSizeHint() const$/;"	f	class:TorMapImageView	signature:() const
minimumSizeHint	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QSize minimumSizeHint() const;$/;"	p	class:TorMapImageView	access:public	signature:() const
minissdpdsocket	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char * minissdpdsocket;$/;"	m	struct:__anon1	file:	access:public
miniupnpc_methods	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^static PyMethodDef miniupnpc_methods[] = {$/;"	v	file:
miniwget	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^void * miniwget(const char * url, int * size)$/;"	f	signature:(const char * url, int * size)
miniwget	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.h	/^LIBSPEC void * miniwget(const char *, int *);$/;"	p	signature:(const char *, int *)
miniwget2	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^miniwget2(const char * url, const char * host,$/;"	f	file:	signature:(const char * url, const char * host, unsigned short port, const char * path, int * size, char * addr_str, int addr_str_len)
miniwget_getaddr	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^void * miniwget_getaddr(const char * url, int * size, char * addr, int addrlen)$/;"	f	signature:(const char * url, int * size, char * addr, int addrlen)
miniwget_getaddr	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.h	/^LIBSPEC void * miniwget_getaddr(const char *, int *, char *, int);$/;"	p	signature:(const char *, int *, char *, int)
mirror	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^example, if your relay acts as a directory mirror, you may be sending more$/;"	v
mirror	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^example, if your relay acts as a directory mirror, you may be sending more$/;"	v
modification	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^modification, are permitted provided that the following conditions are$/;"	v
modification	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^modification, are permitted provided that the following conditions$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/bridges.po	/^No part of Vidalia, including this file, may be copied, modified, propagated, or$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/config.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/index.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/links.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/log.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/netview.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/running.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/server.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/services.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
modified	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/troubleshooting.po	/^No part of Vidalia, including this file, may be copied, modified,$/;"	v
mouseDoubleClickEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseDoubleClickEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
mouseDoubleClickEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseDoubleClickEvent(QMouseEvent *e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent *e)
mouseMoveEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseMoveEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
mouseMoveEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseMoveEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
mousePressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mousePressEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
mousePressEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mousePressEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
mouseReleaseEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::mouseReleaseEvent(QMouseEvent *e)$/;"	f	class:ZImageView	signature:(QMouseEvent *e)
mouseReleaseEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void mouseReleaseEvent(QMouseEvent* e);$/;"	p	class:ZImageView	access:protected	signature:(QMouseEvent* e)
multicastif	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	char * multicastif;$/;"	m	struct:__anon1	file:	access:public
my_atoui	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpcommands.c	/^my_atoui(const char * s)$/;"	f	file:	signature:(const char * s)
name	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char name[64];$/;"	m	struct:NameValue	access:public
name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString name() const { return _name; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QString name() const { return _name; }$/;"	f	class:RouterStatus	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::name() const$/;"	f	class:PackageInfo	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString name() const;$/;"	p	class:PackageInfo	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString name() const$/;"	f	class:TorOpt	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  QString name() const { return _rd->name(); }$/;"	f	class:RouterListItem	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::name() const$/;"	f	class:PluginWrapper	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString name() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::name()$/;"	f	class:HelperProcessPrototype	signature:()
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    static QString name();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::name() {$/;"	f	class:TorControlPrototype	signature:()
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  static QString name();$/;"	p	class:TorControlPrototype	access:public	signature:()
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::name()$/;"	f	class:VidaliaTabPrototype	signature:()
name	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    static QString name();$/;"	p	class:VidaliaTabPrototype	access:public	signature:()
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/links.html	/^  <td>Ÿànbsp;Ÿànbsp;Ÿànbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/bms/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fa/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/log.html	/^    <b>Erreur<\/b>&nbsp;: Ces messages apparaissent lors des erreurs fatales,$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/log.html	/^afficher, vous devez suivre cette proc√©dure&nbsp;:$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/it/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/my/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/nl/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ru/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/tr/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
nbsp	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/links.html	/^  <td>&nbsp;&nbsp;&nbsp;<\/td>$/;"	v
net_test_connect	/Users/chiiph/Code/vidalia/src/common/net.cpp	/^net_test_connect(QHostAddress host, quint16 port, int timeout)$/;"	f	signature:(QHostAddress host, quint16 port, int timeout)
net_test_connect	/Users/chiiph/Code/vidalia/src/common/net.h	/^bool net_test_connect(QHostAddress host, quint16 port, int timeout = 250);$/;"	p	signature:(QHostAddress host, quint16 port, int timeout = 250)
network	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/bridges.html	/^data to and from the Tor network, so it shouldn't expose the operator to any$/;"	v
network	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/config.html	/^    network, Tor can attempt to avoid being filtered by encrypting its$/;"	v
network	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/bridges.html	/^data to and from the Tor network, so it shouldn't expose the operator to any$/;"	v
network	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/config.html	/^    network, Tor can attempt to avoid being filtered by encrypting its$/;"	v
newConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void newConsensus();$/;"	p	class:TorControl	access:public	signature:()
newConsensus	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void newConsensus();$/;"	p	class:TorEvents	access:public	signature:()
newDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorControl	access:public	signature:(const QStringList &ids)
newDescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorEvents	access:public	signature:(const QStringList &ids)
newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::newDescriptors(const QStringList &ids)$/;"	f	class:NetViewer	signature:(const QStringList &ids)
newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:NetViewer	access:public	signature:(const QStringList &ids)
newDescriptors	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void newDescriptors(const QStringList &ids);$/;"	p	class:TorControlPrototype	access:public	signature:(const QStringList &ids)
newIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::newIdentity()$/;"	f	class:MainWindow	signature:()
newIdentity	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void newIdentity();$/;"	p	class:MainWindow	access:private	signature:()
new_context_element	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^new_context_element(QDomDocument *ts, const QString &contextName)$/;"	f	signature:(QDomDocument *ts, const QString &contextName)
new_message_element	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^new_message_element(QDomDocument *ts,$/;"	f	signature:(QDomDocument *ts, const QString &msgid, const QString &msgstr)
new_message_element	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^new_message_element(QDomDocument *wxl, const QString &strid,$/;"	f	signature:(QDomDocument *wxl, const QString &strid, const QString &msgid, const QString &msgstr)
new_ts_document	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^new_ts_document()$/;"	f	signature:()
new_wxl_document	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^new_wxl_document(const QString &culture)$/;"	f	signature:(const QString &culture)
newcomps	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QStringList  newcomps;$/;"	m	struct:s_UserLocalData	file:	access:public
newprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newprop;$/;"	m	struct:s_AddData	file:	access:public
newprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newprop;$/;"	m	struct:s_ReplaceData	file:	access:public
newpropval	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newpropval;$/;"	m	struct:s_AddData	file:	access:public
newpropval	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newpropval;$/;"	m	struct:s_ReplaceData	file:	access:public
newtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newtag;$/;"	m	struct:s_AddData	file:	access:public
newtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newtag;$/;"	m	struct:s_ReplaceData	file:	access:public
nextCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::nextCheckForUpdates(const QDateTime &lastCheckedAt)$/;"	f	class:UpdateProcess	signature:(const QDateTime &lastCheckedAt)
nextCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QDateTime nextCheckForUpdates(const QDateTime &lastCheckedAt);$/;"	p	class:UpdateProcess	access:public	signature:(const QDateTime &lastCheckedAt)
notice	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^  <li>Redistributions must retain the above copyright notice, this list of$/;"	v
notice	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^  notice, this list of conditions and the following disclaimer.<\/li>$/;"	v
nsh2po	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^nsh2po(QTextStream *nsh, const QString &charset,$/;"	f	signature:(QTextStream *nsh, const QString &charset, const QHash<QString,QString> &pot, QString *po, QString *errmsg)
nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::nspace() const$/;"	f	class:PluginWrapper	signature:() const
nspace	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    QString nspace() const;$/;"	p	class:PluginWrapper	access:public	signature:() const
null	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  static TorOpt null()$/;"	f	class:TorOpt	access:public	signature:()
number	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/config.html	/^    their address, port number, and fingerprint.<br\/>$/;"	v
number	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/config.html	/^    their address, port number, and fingerprint.<br>$/;"	v
o	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/no.png	/^7o;q6YÉ>`â¨ªŒI~*UÖ?fëJsüYÉ∞fç∑níπ`{ôÇú∏Üù∂'Yç:jù8_àL{¨Ox£YÖ≥\\~übá©qï∂dÑ°há•oé´Ç•ƒuí¨ë≤—Ö£ætç•ó∑’í±Œò≤…ß¬€™¬Ÿ≥ ﬂó∂–ÕÉ}Ò∆¬ŒºªÕ<8ÃXUŒ[WÃ`[ıìê∆xu˛†ù‘äà˜•¢Ã/;"	v
observedBandwidth	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 observedBandwidth() const { return _observedBandwidth; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
offline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool offline() const { return _status == Offline; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
onAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onAuthenticated()$/;"	f	class:TorControl	signature:()
onAuthenticated	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onAuthenticated();$/;"	p	class:TorControl	access:private	signature:()
onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::onAuthenticated()$/;"	f	class:ServerPage	signature:()
onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void onAuthenticated();$/;"	p	class:ServerPage	access:private	signature:()
onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onAuthenticated()$/;"	f	class:NetViewer	signature:()
onAuthenticated	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onAuthenticated();$/;"	p	class:NetViewer	access:private	signature:()
onCancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::onCancel()$/;"	f	class:UpdateProgressDialog	signature:()
onCancel	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void onCancel();$/;"	p	class:UpdateProgressDialog	access:private	signature:()
onCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::onCheckForUpdates()$/;"	f	class:ConfigDialog	signature:()
onCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void onCheckForUpdates();$/;"	p	class:ConfigDialog	access:private	signature:()
onConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onConnected()$/;"	f	class:ControlConnection	signature:()
onConnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onConnected();$/;"	p	class:ControlConnection	access:private	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onDisconnected()$/;"	f	class:ControlConnection	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onDisconnected();$/;"	p	class:ControlConnection	access:private	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onDisconnected()$/;"	f	class:TorControl	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onDisconnected();$/;"	p	class:TorControl	access:private	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::onDisconnected()$/;"	f	class:ServerPage	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void onDisconnected();$/;"	p	class:ServerPage	access:private	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onDisconnected()$/;"	f	class:NetViewer	signature:()
onDisconnected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onDisconnected();$/;"	p	class:NetViewer	access:private	signature:()
onError	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::onError(QAbstractSocket::SocketError error)$/;"	f	class:TorSocket	signature:(QAbstractSocket::SocketError error)
onError	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void onError(QAbstractSocket::SocketError error);$/;"	p	class:TorSocket	access:private	signature:(QAbstractSocket::SocketError error)
onError	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onError(QAbstractSocket::SocketError error)$/;"	f	class:ControlConnection	signature:(QAbstractSocket::SocketError error)
onError	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onError(QAbstractSocket::SocketError error);$/;"	p	class:ControlConnection	access:private	signature:(QAbstractSocket::SocketError error)
onError	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::onError(QProcess::ProcessError error)$/;"	f	class:TorProcess	signature:(QProcess::ProcessError error)
onError	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:TorProcess	access:private	signature:(QProcess::ProcessError error)
onError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onError(QProcess::ProcessError error)$/;"	f	class:HelperProcess	signature:(QProcess::ProcessError error)
onError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:HelperProcess	access:private	signature:(QProcess::ProcessError error)
onError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::onError(QProcess::ProcessError error)$/;"	f	class:UpdateProcess	signature:(QProcess::ProcessError error)
onError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void onError(QProcess::ProcessError error);$/;"	p	class:UpdateProcess	access:protected	signature:(QProcess::ProcessError error)
onEventLoopStarted	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::onEventLoopStarted()$/;"	f	class:Vidalia	signature:()
onEventLoopStarted	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void onEventLoopStarted();$/;"	p	class:Vidalia	access:private	signature:()
onFinished	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::onFinished(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:UpdateProcess	signature:(int exitCode, QProcess::ExitStatus exitStatus)
onFinished	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void onFinished(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:UpdateProcess	access:protected	signature:(int exitCode, QProcess::ExitStatus exitStatus)
onHandshakeResponse	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::onHandshakeResponse()$/;"	f	class:TorSocket	signature:()
onHandshakeResponse	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void onHandshakeResponse();$/;"	p	class:TorSocket	access:private	signature:()
onHide	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::onHide()$/;"	f	class:UpdateProgressDialog	signature:()
onHide	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void onHide();$/;"	p	class:UpdateProgressDialog	access:private	signature:()
onLinkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::onLinkActivated(const QString &url)$/;"	f	class:NetworkPage	signature:(const QString &url)
onLinkActivated	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void onLinkActivated(const QString &url);$/;"	p	class:NetworkPage	access:private	signature:(const QString &url)
onLogStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onLogStdout(const QString &severity, const QString &message)$/;"	f	class:TorControl	signature:(const QString &severity, const QString &message)
onLogStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onLogStdout(const QString &severity, const QString &message);$/;"	p	class:TorControl	access:private	signature:(const QString &severity, const QString &message)
onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::onReadyRead()$/;"	f	class:ControlConnection	signature:()
onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void onReadyRead();$/;"	p	class:ControlConnection	access:private	signature:()
onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::onReadyRead()$/;"	f	class:TorProcess	signature:()
onReadyRead	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void onReadyRead();$/;"	p	class:TorProcess	access:private	signature:()
onReadyReadStandardError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onReadyReadStandardError()$/;"	f	class:HelperProcess	signature:()
onReadyReadStandardError	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onReadyReadStandardError();$/;"	p	class:HelperProcess	access:private	signature:()
onReadyReadStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::onReadyReadStandardOutput()$/;"	f	class:HelperProcess	signature:()
onReadyReadStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void onReadyReadStandardOutput();$/;"	p	class:HelperProcess	access:private	signature:()
onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::onRouterSearch()$/;"	f	class:NetViewer	signature:()
onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void onRouterSearch();$/;"	p	class:NetViewer	access:private	signature:()
onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::onRouterSearch(const QString routerNickname)$/;"	f	class:RouterListWidget	signature:(const QString routerNickname)
onRouterSearch	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void onRouterSearch(const QString routerNickname);$/;"	p	class:RouterListWidget	access:public	signature:(const QString routerNickname)
onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::onSelectionChanged(QTreeWidgetItem *cur,$/;"	f	class:CircuitListWidget	signature:(QTreeWidgetItem *cur, QTreeWidgetItem *prev)
onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void onSelectionChanged(QTreeWidgetItem *cur, QTreeWidgetItem *prev);$/;"	p	class:CircuitListWidget	access:private	signature:(QTreeWidgetItem *cur, QTreeWidgetItem *prev)
onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::onSelectionChanged()$/;"	f	class:RouterListWidget	signature:()
onSelectionChanged	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void onSelectionChanged();$/;"	p	class:RouterListWidget	access:private	signature:()
onStopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::onStopped(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:TorControl	signature:(int exitCode, QProcess::ExitStatus exitStatus)
onStopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void onStopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControl	access:private	signature:(int exitCode, QProcess::ExitStatus exitStatus)
onionKey	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString onionKey() const { return _onionKey; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
online	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  bool online() const { return _status == Online; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
online	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^    The relay is <i>hibernating<\/i>, meaning it is online, but has used up as$/;"	v
online	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^    The relay is <i>hibernating<\/i>, meaning it is online, but has used up as$/;"	v
online	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^    The relay is <i>hibernating<\/i>, meaning it is online, but has used up as$/;"	v
open	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::open(FILE *file)$/;"	f	class:Log	signature:(FILE *file)
open	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::open(QString file)$/;"	f	class:Log	signature:(QString file)
open	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool open(FILE *file);$/;"	p	class:Log	access:public	signature:(FILE *file)
open	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  bool open(QString file);$/;"	p	class:Log	access:public	signature:(QString file)
open	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::open(QString filename, QString *errmsg)$/;"	f	class:LogFile	signature:(QString filename, QString *errmsg)
open	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  bool open(QString filename, QString *errmsg = 0);$/;"	p	class:LogFile	access:public	signature:(QString filename, QString *errmsg = 0)
open	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::open(const QString &fname)$/;"	f	class:GeoIpDatabase	signature:(const QString &fname)
open	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  bool open(const QString &fname);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QString &fname)
openSCM	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::openSCM()$/;"	f	class:TorService	signature:()
openSCM	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  static SC_HANDLE openSCM();$/;"	p	class:TorService	access:private	signature:()
openService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::openService()$/;"	f	class:TorService	signature:()
openService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  SC_HANDLE openService();$/;"	p	class:TorService	access:private	signature:()
openStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::openStdout()$/;"	f	class:TorProcess	signature:()
openStdout	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void openStdout();$/;"	p	class:TorProcess	access:public	signature:()
operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:LogTreeItem	signature:(const QTreeWidgetItem &other) const
operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:LogTreeItem	access:public	signature:(const QTreeWidgetItem &other) const
operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:StatusEventItem	signature:(const QTreeWidgetItem &other) const
operator <	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:StatusEventItem	access:public	signature:(const QTreeWidgetItem &other) const
operator <	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::operator<(const QTreeWidgetItem &other) const$/;"	f	class:RouterListItem	signature:(const QTreeWidgetItem &other) const
operator <	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  virtual bool operator<(const QTreeWidgetItem &other) const;$/;"	p	class:RouterListItem	access:public	signature:(const QTreeWidgetItem &other) const
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QHostAddress &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QHostAddress &a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QString &t)$/;"	f	class:Log::LogMessage	access:public	signature:(const QString &t)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(const QStringList &a)$/;"	f	class:Log::LogMessage	access:public	signature:(const QStringList &a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(int a)$/;"	f	class:Log::LogMessage	access:public	signature:(int a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(long a)$/;"	f	class:Log::LogMessage	access:public	signature:(long a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(qlonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qlonglong a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(qulonglong a)$/;"	f	class:Log::LogMessage	access:public	signature:(qulonglong a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(short a)$/;"	f	class:Log::LogMessage	access:public	signature:(short a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(uint a)$/;"	f	class:Log::LogMessage	access:public	signature:(uint a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(ulong a)$/;"	f	class:Log::LogMessage	access:public	signature:(ulong a)
operator <<	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline LogMessage &operator<<(ushort a)$/;"	f	class:Log::LogMessage	access:public	signature:(ushort a)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^operator<<(QDebug dbg, TorrcLine *line) {$/;"	f	signature:(QDebug dbg, TorrcLine *line)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^operator<<(QDebug dbg, const TorOpt &opt) {$/;"	f	signature:(QDebug dbg, const TorOpt &opt)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^QDebug operator<<(QDebug dbg, TorrcLine *line);$/;"	p	signature:(QDebug dbg, TorrcLine *line)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^QDebug operator<<(QDebug dbg, const TorOpt &opt);$/;"	p	signature:(QDebug dbg, const TorOpt &opt)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::operator<<(const QString &s)$/;"	f	class:LogFile	signature:(const QString &s)
operator <<	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  LogFile& operator<<(const QString &s);$/;"	p	class:LogFile	access:public	signature:(const QString &s)
operator ==	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::operator==(const Policy &policy) const$/;"	f	class:Policy	signature:(const Policy &policy) const
operator ==	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  bool operator==(const Policy &policy) const;$/;"	p	class:Policy	access:public	signature:(const Policy &policy) const
operator is willing to allow for a given time period. </td> </tr> <tr> <td><img src=”/></td> <td valign=”> The relay is online, but has shown only minimal throughput. </td> </tr> <tr> <td><img src=”/></td> <td valign=”> The relay is online and has shown a throughput &gt	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^    much bandwidth as the operator is willing to allow for a given time$/;"	v
operator is willing to allow for a given time period. </td> </tr> <tr> <td><img src=”/></td> <td valign=”> The relay is online, but has shown only minimal throughput. </td> </tr> <tr> <td><img src=”/></td> <td valign=”> The relay is online and has shown a throughput &gt	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^    much bandwidth as the operator is willing to allow for a given time$/;"	v
operator is willing to allow for a given time period. </td> </tr> <tr> <td><img src=”/></td> <td valign=”> ‰∏≠ÁªßÂú®Á∫øÔºå‰ΩÜÊòæÁ§∫‰∫ÜÂæàÂ∞èÁöÑÊï∞ÊçÆÊµÅÈáè„ÄÇ </td> </tr> <tr> <td><img src=”/></td> <td valign=”> ‰∏≠ÁªßÂú®Á∫øÂπ∂‰∏îÊòæÁ§∫ÊµÅÈáè&gt	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^much bandwidth as the operator is willing to allow for a given time period.$/;"	v
orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint16 orPort() const { return _orPort; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
orPort	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  quint16 orPort() const { return _orPort; }$/;"	f	class:RouterStatus	access:public	signature:() const
orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::orPortReachabilityFinished(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, bool reachable)
orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, bool reachable)
orPortReachabilityFinished	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void orPortReachabilityFinished(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, bool reachable)
ou	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^    restart Tor for you, you can still fix the problem manually. Simply$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Versionen von Tor installiert haben, k&ouml;nnen Sie durch Klicken auf$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^Vidalia erm&ouml;glicht es Ihnen die am gebr&auml;chlisten Einstellungen$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^von Vidalia und Tor vorzunehmen. Au&szlig;erdem k&ouml;nnen Sie mit Vidalia$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^        k&ouml;nnen Sie auf die Schaltfl&auml;che <i>Adresse<\/i> klicken,$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^k&ouml;nnen Sie die folgenden Schritte als Startpunkt befolgen:$/;"	v
ouml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^k&ouml;nnen Sie nach <i>tor.exe<\/i> im Taskmanager suchen und diesen Prozess beenden.$/;"	v
out	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    QIODevice *out;$/;"	m	struct:Log::LogMessage::Stream	access:public
out	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/server.html	/^grayed out, since bridge relays do not allow exit connections. Bridges are$/;"	v
out	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/server.html	/^grayed out, since bridge relays do not allow exit connections. Bridges are$/;"	v
outputBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::outputBuffer;$/;"	m	class:DebugDialog	file:
outputBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList outputBuffer;$/;"	m	class:DebugDialog	access:private
outputDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::outputDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
outputDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void outputDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
p	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^p(QString str)$/;"	f	signature:(QString str)
p	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString p(QString str);$/;"	p	signature:(QString str)
pNext	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	struct UPNPDev * pNext;$/;"	m	struct:UPNPDev	typeref:struct:UPNPDev::UPNPDev	access:public
packageInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::packageInfo(const QString &package)$/;"	f	class:UpdateProcess	signature:(const QString &package)
packageInfo	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static PackageInfo packageInfo(const QString &package);$/;"	p	class:UpdateProcess	access:protected	signature:(const QString &package)
packageInfoFromXml	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::packageInfoFromXml(const QByteArray &xml)$/;"	f	class:UpdateProcess	signature:(const QByteArray &xml)
packageInfoFromXml	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static PackageInfo packageInfoFromXml(const QByteArray &xml);$/;"	p	class:UpdateProcess	access:protected	signature:(const QByteArray &xml)
pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::pages() const$/;"	f	class:ConfigPageStack	signature:() const
pages	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  QList<ConfigPage *> pages() const;$/;"	p	class:ConfigPageStack	access:public	signature:() const
paint	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.cpp	/^LogMessageColumnDelegate::paint(QPainter *painter,$/;"	f	class:LogMessageColumnDelegate	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
paint	/Users/chiiph/Code/vidalia/src/vidalia/log/LogMessageColumnDelegate.h	/^  virtual void paint(QPainter *painter,$/;"	p	class:LogMessageColumnDelegate	access:public	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
paint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::paint(QPainter *painter,$/;"	f	class:StatusEventItemDelegate	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
paint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  virtual void paint(QPainter *painter,$/;"	p	class:StatusEventItemDelegate	access:public	signature:(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
paintData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintData()$/;"	f	class:GraphFrame	signature:()
paintData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintData();$/;"	p	class:GraphFrame	access:private	signature:()
paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintEvent(QPaintEvent *event)$/;"	f	class:GraphFrame	signature:(QPaintEvent *event)
paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintEvent(QPaintEvent *event);$/;"	p	class:GraphFrame	access:protected	signature:(QPaintEvent *event)
paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::paintEvent(QPaintEvent*)$/;"	f	class:ZImageView	signature:(QPaintEvent*)
paintEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void paintEvent(QPaintEvent*);$/;"	p	class:ZImageView	access:protected	signature:(QPaintEvent*)
paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::paintImage(QPainter *painter)$/;"	f	class:TorMapImageView	signature:(QPainter *painter)
paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  virtual void paintImage(QPainter *painter);$/;"	p	class:TorMapImageView	access:protected	signature:(QPainter *painter)
paintImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void paintImage(QPainter *painter) { Q_UNUSED(painter); }$/;"	f	class:ZImageView	access:protected	signature:(QPainter *painter)
paintIntegral	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintIntegral(QVector<QPointF> points, QColor color, qreal alpha)$/;"	f	class:GraphFrame	signature:(QVector<QPointF> points, QColor color, qreal alpha)
paintIntegral	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintIntegral(QVector<QPointF> points, QColor color, qreal alpha = 1.0);$/;"	p	class:GraphFrame	access:private	signature:(QVector<QPointF> points, QColor color, qreal alpha = 1.0)
paintLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintLine(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle)$/;"	f	class:GraphFrame	signature:(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle)
paintLine	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintLine(QVector<QPointF> points, QColor color,$/;"	p	class:GraphFrame	access:private	signature:(QVector<QPointF> points, QColor color, Qt::PenStyle lineStyle = Qt::SolidLine)
paintScale	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintScale()$/;"	f	class:GraphFrame	signature:()
paintScale	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintScale();$/;"	p	class:GraphFrame	access:private	signature:()
paintTotals	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::paintTotals()$/;"	f	class:GraphFrame	signature:()
paintTotals	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void paintTotals();$/;"	p	class:GraphFrame	access:private	signature:()
panic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::panic()$/;"	f	class:MainWindow	signature:()
panic	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void panic();$/;"	p	class:MainWindow	access:private	signature:()
panicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::panicPath() const$/;"	f	class:VidaliaSettings	signature:() const
panicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString panicPath() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
parse	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::parse(const QString &path,$/;"	f	class:TorrcParser	signature:(const QString &path, QMap<QString, QPair<QString, TorOpt> > &map)
parse	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> parse(const QString &path,$/;"	p	class:TorrcParser	access:public	signature:(const QString &path, QMap<QString, QPair<QString, TorOpt> > &map)
parseAndSet	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::parseAndSet(QString *errmsg)$/;"	f	class:TorrcDialog	signature:(QString *errmsg)
parseAndSet	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  bool parseAndSet(QString *errmsg = 0);$/;"	p	class:TorrcDialog	access:private	signature:(QString *errmsg = 0)
parseArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::parseArguments(QStringList args)$/;"	f	class:Vidalia	signature:(QStringList args)
parseArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void parseArguments(QStringList args);$/;"	p	class:Vidalia	access:private	signature:(QStringList args)
parseDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::parseDescriptor(QStringList descriptor)$/;"	f	class:RouterDescriptor	signature:(QStringList descriptor)
parseDescriptor	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void parseDescriptor(QStringList descriptor);$/;"	p	class:RouterDescriptor	access:private	signature:(QStringList descriptor)
parseEventType	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::parseEventType(const ReplyLine &line)$/;"	f	class:TorEvents	signature:(const ReplyLine &line)
parseEventType	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static Event parseEventType(const ReplyLine &line);$/;"	p	class:TorEvents	access:private	signature:(const ReplyLine &line)
parseHelpTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::parseHelpTopic(const QDomElement &topicElement,$/;"	f	class:HelpBrowser	signature:(const QDomElement &topicElement, QTreeWidgetItem *parent)
parseHelpTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void parseHelpTopic(const QDomElement &element, QTreeWidgetItem *parent);$/;"	p	class:HelpBrowser	access:private	signature:(const QDomElement &element, QTreeWidgetItem *parent)
parseMSEARCHReply	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^parseMSEARCHReply(const char * reply, int size,$/;"	f	file:	signature:(const char * reply, int size, const char * * location, int * locationsize, const char * * st, int * stsize)
parseString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::parseString(const QString& input)$/;"	f	class:LogFilterSearchTerm	signature:(const QString& input)
parseString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  void parseString(const QString& input);$/;"	p	class:LogFilterSearchTerm	access:private	signature:(const QString& input)
parseURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^int parseURL(const char * url, char * hostname, unsigned short * port, char * * path)$/;"	f	signature:(const char * url, char * hostname, unsigned short * port, char * * path)
parseURL	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.h	/^int parseURL(const char *, char *, unsigned short *, char * *);$/;"	p	signature:(const char *, char *, unsigned short *, char * *)
parse_filename	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^parse_filename(const QString &filePath)$/;"	f	signature:(const QString &filePath)
parse_message_context	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^parse_message_context(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^parse_message_context(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^parse_message_context(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^parse_message_context(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context_lame	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^parse_message_context_lame(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context_lame	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^parse_message_context_lame(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context_lame	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^parse_message_context_lame(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_context_lame	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^parse_message_context_lame(const QString &str)$/;"	f	signature:(const QString &str)
parse_message_string	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^parse_message_string(const QString &msg)$/;"	f	signature:(const QString &msg)
parse_message_string	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^parse_message_string(const QString &msg)$/;"	f	signature:(const QString &msg)
parse_message_string	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^parse_message_string(const QString &msg)$/;"	f	signature:(const QString &msg)
parse_message_string	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^parse_message_string(const QString &msg)$/;"	f	signature:(const QString &msg)
parse_nsh_langstring	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^parse_nsh_langstring(const QString &msg)$/;"	f	signature:(const QString &msg)
parse_po_template	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^parse_po_template(QTextStream *pot, QHash<QString,QString> *out,$/;"	f	signature:(QTextStream *pot, QHash<QString,QString> *out, QString *errmsg)
parseatt	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.c	/^static int parseatt(struct xmlparser * p)$/;"	f	file:	signature:(struct xmlparser * p)
parseelt	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.c	/^static void parseelt(struct xmlparser * p)$/;"	f	file:	signature:(struct xmlparser * p)
parserootdesc	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^LIBSPEC void parserootdesc(const char * buffer, int bufsize, struct IGDdatas * data)$/;"	f	signature:(const char * buffer, int bufsize, struct IGDdatas * data)
parserootdesc	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC void parserootdesc(const char *, int, struct IGDdatas *);$/;"	p	signature:(const char *, int, struct IGDdatas *)
parsexml	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.c	/^void parsexml(struct xmlparser * parser)$/;"	f	signature:(struct xmlparser * parser)
parsexml	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^void parsexml(struct xmlparser *);$/;"	p	signature:(struct xmlparser *)
particulier	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/troubleshooting.html	/^particulier, consultez notre site web sur <i>www.vidalia-project.net<\/i>$/;"	v
passante	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/server.html	/^forte pour votre bande passante, vous devrez penser √† d√©cocher la case$/;"	v
password	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^    password. After you restart Vidalia, it generates a new random password,$/;"	v
pdfe	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^static float  pdfe[] = {$/;"	v	file:
percentComplete	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  int percentComplete() const { return _percentComplete; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
pid	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::pid()$/;"	f	class:TorProcess	signature:()
pid	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  quint64 pid();$/;"	p	class:TorProcess	access:public	signature:()
pidFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::pidFile()$/;"	f	class:Vidalia	signature:()
pidFile	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString pidFile();$/;"	p	class:Vidalia	access:public	signature:()
pinTab	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::pinTab(int position)$/;"	f	class:VTabWidget	signature:(int position)
pinTab	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void pinTab(int position);$/;"	p	class:VTabWidget	access:public	signature:(int position)
platform	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString platform() const { return _platform; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
plen	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^static float  plen[] = {$/;"	v	file:
pluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::pluginPath() const$/;"	f	class:VidaliaSettings	signature:() const
pluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString pluginPath() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
pluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void pluginTab(VidaliaTab *);$/;"	p	class:PluginEngine	access:public	signature:(VidaliaTab *)
pluginTab	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void pluginTab(VidaliaTab *);$/;"	p	class:PluginWrapper	access:public	signature:(VidaliaTab *)
po2nsh	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^po2nsh(QTextStream *po, QString *nsh, const QString &language,$/;"	f	signature:(QTextStream *po, QString *nsh, const QString &language, QString *errorMessage)
po2ts	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^po2ts(QTextStream *po, QDomDocument *ts, QString *errorMessage)$/;"	f	signature:(QTextStream *po, QDomDocument *ts, QString *errorMessage)
po2wxl	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^po2wxl(const QString& culture, QTextStream *po, QDomDocument *wxl,$/;"	f	signature:(const QString& culture, QTextStream *po, QDomDocument *wxl, QString *errorMessage)
pointsFromData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::pointsFromData(QList<qreal>* list)$/;"	f	class:GraphFrame	signature:(QList<qreal>* list)
pointsFromData	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QVector<QPointF> pointsFromData(QList<qreal>* list);$/;"	p	class:GraphFrame	access:private	signature:(QList<qreal>* list)
policyList	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QList<Policy> policyList() { return  _exitPolicy; }$/;"	f	class:ExitPolicy	access:public	signature:()
port	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^control port, you will need to specify a different port. You can change this$/;"	v
port	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/troubleshooting.html	/^d√©j√† le port de contr√¥le de port, vous aurez besoin d'indiquer un autre$/;"	v
port	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/troubleshooting.html	/^control port, you will need to specify a different port. You can change this$/;"	v
ports	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::ports() const$/;"	f	class:Policy	signature:() const
ports	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString ports() const;$/;"	p	class:Policy	access:public	signature:() const
preLoadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::preLoadNetworkStatus()$/;"	f	class:NetViewer	signature:()
preLoadNetworkStatus	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void preLoadNetworkStatus();$/;"	p	class:NetViewer	access:private	signature:()
printIGD	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.c	/^void printIGD(struct IGDdatas * d)$/;"	f	signature:(struct IGDdatas * d)
printIGD	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^void printIGD(struct IGDdatas *);$/;"	p	signature:(struct IGDdatas *)
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^print_usage_and_exit()$/;"	f	signature:()
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^print_usage_and_exit()$/;"	f	signature:()
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^print_usage_and_exit()$/;"	f	signature:()
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^print_usage_and_exit()$/;"	f	signature:()
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^print_usage_and_exit()$/;"	f	signature:()
print_usage_and_exit	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^print_usage_and_exit()$/;"	f	signature:()
processInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::processInfo(const QString &path)$/;"	f	class:PluginWrapper	signature:(const QString &path)
processInfo	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void processInfo(const QString &path);$/;"	p	class:PluginWrapper	access:protected	signature:(const QString &path)
process_kill	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^process_kill(qint64 pid)$/;"	f	signature:(qint64 pid)
process_kill	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^bool process_kill(qint64 pid);$/;"	p	signature:(qint64 pid)
process_list	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^process_list(quint16 port)$/;"	f	signature:(quint16 port)
process_list	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^QHash<qint64, QString> process_list(quint16 port = 0);$/;"	p	signature:(quint16 port = 0)
propagated	/Users/chiiph/Code/vidalia/src/vidalia/help/content/po/en/bridges.po	/^No part of Vidalia, including this file, may be copied, modified, propagated, or$/;"	v
protocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::protocolInfo(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
protocolInfo	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ProtocolInfo protocolInfo(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
provide	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::provide(const QString &name, QObject *obj)$/;"	f	class:PluginEngine	signature:(const QString &name, QObject *obj)
provide	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void provide(const QString &name, QObject *obj);$/;"	p	class:PluginEngine	access:public	signature:(const QString &name, QObject *obj)
proxyTypeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::proxyTypeChanged(int selection)$/;"	f	class:NetworkPage	signature:(int selection)
proxyTypeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void proxyTypeChanged(int selection);$/;"	p	class:NetworkPage	access:private	signature:(int selection)
proxyTypeFromString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::proxyTypeFromString(const QString &type)$/;"	f	class:NetworkSettings	signature:(const QString &type)
proxyTypeFromString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  ProxyType proxyTypeFromString(const QString &type);$/;"	p	class:NetworkSettings	access:private	signature:(const QString &type)
proxyTypeToString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::proxyTypeToString(ProxyType type)$/;"	f	class:NetworkSettings	signature:(ProxyType type)
proxyTypeToString	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  QString proxyTypeToString(ProxyType type);$/;"	p	class:NetworkSettings	access:private	signature:(ProxyType type)
publishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::publishServerDescriptor()$/;"	f	class:ServerSettings	signature:()
publishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  bool publishServerDescriptor();$/;"	p	class:ServerSettings	access:public	signature:()
published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QDateTime published() const { return _published; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
published	/Users/chiiph/Code/vidalia/src/torcontrol/RouterStatus.h	/^  QDateTime published() const { return _published; }$/;"	f	class:RouterStatus	access:public	signature:() const
puentes	/Users/chiiph/Code/vidalia/src/vidalia/help/content/es/bridges.html	/^hacker aprender muchas direcciones de puentes, debes mandarnos √©ste pedida$/;"	v
purpose	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose purpose() const { return _purpose; }$/;"	f	class:Circuit	access:public	signature:() const
purposeValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::purposeValue(const QString &purpose) const$/;"	f	class:Circuit	signature:(const QString &purpose) const
purposeValue	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Purpose purposeValue(const QString &purpose) const;$/;"	p	class:Circuit	access:private	signature:(const QString &purpose) const
q	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/window-close.png	/^àNÉ˜é¿y/;"	v
qlist_cast	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::qlist_cast(QList<QTreeWidgetItem *> inlist) const$/;"	f	class:LogTreeWidget	signature:(QList<QTreeWidgetItem *> inlist) const
qlist_cast	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> qlist_cast(QList<QTreeWidgetItem *> inlist) const;$/;"	p	class:LogTreeWidget	access:private	signature:(QList<QTreeWidgetItem *> inlist) const
qlist_sort	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::qlist_sort(QList<LogTreeItem *> inlist) const$/;"	f	class:LogTreeWidget	signature:(QList<LogTreeItem *> inlist) const
qlist_sort	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QList<LogTreeItem *> qlist_sort(QList<LogTreeItem *> inlist) const;$/;"	p	class:LogTreeWidget	access:private	signature:(QList<LogTreeItem *> inlist) const
qpq	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ge.png	/^/;"	v
qt_mac_set_dock_menu	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^void qt_mac_set_dock_menu(QMenu *menu);$/;"	p	file:	signature:(QMenu *menu)
qt_metatype_id	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^    static int qt_metatype_id() \\$/;"	f	struct:QMetaTypeId	access:public	signature:()
qt_msg_handler	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::qt_msg_handler(QtMsgType type, const char *s)$/;"	f	class:Vidalia	signature:(QtMsgType type, const char *s)
qt_msg_handler	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void qt_msg_handler(QtMsgType type, const char *msg);$/;"	p	class:Vidalia	access:private	signature:(QtMsgType type, const char *msg)
qtscript_AddressMap_AddressMapType_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static void qtscript_AddressMap_AddressMapType_fromScriptValue(const QScriptValue &value, AddressMap::AddressMapType &out)$/;"	f	file:	signature:(const QScriptValue &value, AddressMap::AddressMapType &out)
qtscript_AddressMap_AddressMapType_keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static const char * const qtscript_AddressMap_AddressMapType_keys[] = {$/;"	v	file:
qtscript_AddressMap_AddressMapType_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_AddressMapType_toScriptValue(QScriptEngine *engine, const AddressMap::AddressMapType &value)$/;"	f	file:	signature:(QScriptEngine *engine, const AddressMap::AddressMapType &value)
qtscript_AddressMap_AddressMapType_toString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_AddressMapType_toString(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_AddressMap_AddressMapType_toStringHelper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QString qtscript_AddressMap_AddressMapType_toStringHelper(AddressMap::AddressMapType value)$/;"	f	file:	signature:(AddressMap::AddressMapType value)
qtscript_AddressMap_AddressMapType_valueOf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_AddressMapType_valueOf(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_AddressMap_AddressMapType_values	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static const AddressMap::AddressMapType qtscript_AddressMap_AddressMapType_values[] = {$/;"	v	file:
qtscript_AddressMap_function_lengths	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static const int qtscript_AddressMap_function_lengths[] = {$/;"	v	file:
qtscript_AddressMap_function_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static const char * const qtscript_AddressMap_function_names[] = {$/;"	v	file:
qtscript_AddressMap_function_signatures	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static const char * const qtscript_AddressMap_function_signatures[] = {$/;"	v	file:
qtscript_AddressMap_prototype_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_AddressMap_static_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_AddressMap_throw_ambiguity_error_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_AddressMap_throw_ambiguity_error_helper($/;"	f	file:	signature:( QScriptContext *context, const char *functionName, const char *signatures)
qtscript_BootstrapStatus_Recommendation_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static void qtscript_BootstrapStatus_Recommendation_fromScriptValue(const QScriptValue &value, BootstrapStatus::Recommendation &out)$/;"	f	file:	signature:(const QScriptValue &value, BootstrapStatus::Recommendation &out)
qtscript_BootstrapStatus_Recommendation_keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const char * const qtscript_BootstrapStatus_Recommendation_keys[] = {$/;"	v	file:
qtscript_BootstrapStatus_Recommendation_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Recommendation_toScriptValue(QScriptEngine *engine, const BootstrapStatus::Recommendation &value)$/;"	f	file:	signature:(QScriptEngine *engine, const BootstrapStatus::Recommendation &value)
qtscript_BootstrapStatus_Recommendation_toString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Recommendation_toString(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_BootstrapStatus_Recommendation_toStringHelper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QString qtscript_BootstrapStatus_Recommendation_toStringHelper(BootstrapStatus::Recommendation value)$/;"	f	file:	signature:(BootstrapStatus::Recommendation value)
qtscript_BootstrapStatus_Recommendation_valueOf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Recommendation_valueOf(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_BootstrapStatus_Recommendation_values	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const BootstrapStatus::Recommendation qtscript_BootstrapStatus_Recommendation_values[] = {$/;"	v	file:
qtscript_BootstrapStatus_Status_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static void qtscript_BootstrapStatus_Status_fromScriptValue(const QScriptValue &value, BootstrapStatus::Status &out)$/;"	f	file:	signature:(const QScriptValue &value, BootstrapStatus::Status &out)
qtscript_BootstrapStatus_Status_keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const char * const qtscript_BootstrapStatus_Status_keys[] = {$/;"	v	file:
qtscript_BootstrapStatus_Status_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Status_toScriptValue(QScriptEngine *engine, const BootstrapStatus::Status &value)$/;"	f	file:	signature:(QScriptEngine *engine, const BootstrapStatus::Status &value)
qtscript_BootstrapStatus_Status_toString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Status_toString(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_BootstrapStatus_Status_toStringHelper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QString qtscript_BootstrapStatus_Status_toStringHelper(BootstrapStatus::Status value)$/;"	f	file:	signature:(BootstrapStatus::Status value)
qtscript_BootstrapStatus_Status_valueOf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_Status_valueOf(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_BootstrapStatus_Status_values	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const BootstrapStatus::Status qtscript_BootstrapStatus_Status_values[] = {$/;"	v	file:
qtscript_BootstrapStatus_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static void qtscript_BootstrapStatus_fromScriptValue(const QScriptValue &value, BootstrapStatus* &out)$/;"	f	file:	signature:(const QScriptValue &value, BootstrapStatus* &out)
qtscript_BootstrapStatus_function_lengths	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const int qtscript_BootstrapStatus_function_lengths[] = {$/;"	v	file:
qtscript_BootstrapStatus_function_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const char * const qtscript_BootstrapStatus_function_names[] = {$/;"	v	file:
qtscript_BootstrapStatus_function_signatures	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static const char * const qtscript_BootstrapStatus_function_signatures[] = {$/;"	v	file:
qtscript_BootstrapStatus_prototype_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_BootstrapStatus_static_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_BootstrapStatus_throw_ambiguity_error_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_throw_ambiguity_error_helper($/;"	f	file:	signature:( QScriptContext *context, const char *functionName, const char *signatures)
qtscript_BootstrapStatus_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_BootstrapStatus_toScriptValue(QScriptEngine *engine, BootstrapStatus* const &in)$/;"	f	file:	signature:(QScriptEngine *engine, BootstrapStatus* const &in)
qtscript_RouterDescriptor_RouterStatusEnum_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static void qtscript_RouterDescriptor_RouterStatusEnum_fromScriptValue(const QScriptValue &value, RouterDescriptor::RouterStatusEnum &out)$/;"	f	file:	signature:(const QScriptValue &value, RouterDescriptor::RouterStatusEnum &out)
qtscript_RouterDescriptor_RouterStatusEnum_keys	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static const char * const qtscript_RouterDescriptor_RouterStatusEnum_keys[] = {$/;"	v	file:
qtscript_RouterDescriptor_RouterStatusEnum_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_RouterStatusEnum_toScriptValue(QScriptEngine *engine, const RouterDescriptor::RouterStatusEnum &value)$/;"	f	file:	signature:(QScriptEngine *engine, const RouterDescriptor::RouterStatusEnum &value)
qtscript_RouterDescriptor_RouterStatusEnum_toString	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_RouterStatusEnum_toString(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_RouterDescriptor_RouterStatusEnum_toStringHelper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QString qtscript_RouterDescriptor_RouterStatusEnum_toStringHelper(RouterDescriptor::RouterStatusEnum value)$/;"	f	file:	signature:(RouterDescriptor::RouterStatusEnum value)
qtscript_RouterDescriptor_RouterStatusEnum_valueOf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_RouterStatusEnum_valueOf(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_RouterDescriptor_RouterStatusEnum_values	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static const RouterDescriptor::RouterStatusEnum qtscript_RouterDescriptor_RouterStatusEnum_values[] = {$/;"	v	file:
qtscript_RouterDescriptor_function_lengths	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static const int qtscript_RouterDescriptor_function_lengths[] = {$/;"	v	file:
qtscript_RouterDescriptor_function_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static const char * const qtscript_RouterDescriptor_function_names[] = {$/;"	v	file:
qtscript_RouterDescriptor_function_signatures	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static const char * const qtscript_RouterDescriptor_function_signatures[] = {$/;"	v	file:
qtscript_RouterDescriptor_prototype_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_RouterDescriptor_static_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_RouterDescriptor_throw_ambiguity_error_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_RouterDescriptor_throw_ambiguity_error_helper($/;"	f	file:	signature:( QScriptContext *context, const char *functionName, const char *signatures)
qtscript_TorControl_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static void qtscript_TorControl_fromScriptValue(const QScriptValue &value, TorControl* &out)$/;"	f	file:	signature:(const QScriptValue &value, TorControl* &out)
qtscript_TorControl_function_lengths	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static const int qtscript_TorControl_function_lengths[] = {$/;"	v	file:
qtscript_TorControl_function_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static const char * const qtscript_TorControl_function_names[] = {$/;"	v	file:
qtscript_TorControl_function_signatures	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static const char * const qtscript_TorControl_function_signatures[] = {$/;"	v	file:
qtscript_TorControl_prototype_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static QScriptValue qtscript_TorControl_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_TorControl_static_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static QScriptValue qtscript_TorControl_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
qtscript_TorControl_throw_ambiguity_error_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static QScriptValue qtscript_TorControl_throw_ambiguity_error_helper($/;"	f	file:	signature:( QScriptContext *context, const char *functionName, const char *signatures)
qtscript_TorControl_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^static QScriptValue qtscript_TorControl_toScriptValue(QScriptEngine *engine, TorControl* const &in)$/;"	f	file:	signature:(QScriptEngine *engine, TorControl* const &in)
qtscript_com_vidalia_torcontrol_class_functions	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.h~	/^static const QtBindingCreator qtscript_com_vidalia_torcontrol_class_functions[] = {$/;"	v	file:
qtscript_com_vidalia_torcontrol_class_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.h~	/^static const char * const qtscript_com_vidalia_torcontrol_class_names[] = {$/;"	v	file:
qtscript_construct_AddressMap_AddressMapType	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_construct_AddressMap_AddressMapType(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_construct_BootstrapStatus_Recommendation	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_construct_BootstrapStatus_Recommendation(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_construct_BootstrapStatus_Status	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_construct_BootstrapStatus_Status(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_construct_RouterDescriptor_RouterStatusEnum	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_construct_RouterDescriptor_RouterStatusEnum(QScriptContext *context, QScriptEngine *engine)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *engine)
qtscript_create_AddressMap_AddressMapType_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_create_AddressMap_AddressMapType_class(QScriptEngine *engine, QScriptValue &clazz)$/;"	f	file:	signature:(QScriptEngine *engine, QScriptValue &clazz)
qtscript_create_AddressMap_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^QScriptValue qtscript_create_AddressMap_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
qtscript_create_BootstrapStatus_Recommendation_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_create_BootstrapStatus_Recommendation_class(QScriptEngine *engine, QScriptValue &clazz)$/;"	f	file:	signature:(QScriptEngine *engine, QScriptValue &clazz)
qtscript_create_BootstrapStatus_Status_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_create_BootstrapStatus_Status_class(QScriptEngine *engine, QScriptValue &clazz)$/;"	f	file:	signature:(QScriptEngine *engine, QScriptValue &clazz)
qtscript_create_BootstrapStatus_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^QScriptValue qtscript_create_BootstrapStatus_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
qtscript_create_RouterDescriptor_RouterStatusEnum_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_create_RouterDescriptor_RouterStatusEnum_class(QScriptEngine *engine, QScriptValue &clazz)$/;"	f	file:	signature:(QScriptEngine *engine, QScriptValue &clazz)
qtscript_create_RouterDescriptor_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^QScriptValue qtscript_create_RouterDescriptor_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
qtscript_create_TorControl_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_TorControl.cpp~	/^QScriptValue qtscript_create_TorControl_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
qtscript_create_enum_class_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_AddressMap.cpp~	/^static QScriptValue qtscript_create_enum_class_helper($/;"	f	file:	signature:( QScriptEngine *engine, QScriptEngine::FunctionSignature construct, QScriptEngine::FunctionSignature valueOf, QScriptEngine::FunctionSignature toString)
qtscript_create_enum_class_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_BootstrapStatus.cpp~	/^static QScriptValue qtscript_create_enum_class_helper($/;"	f	file:	signature:( QScriptEngine *engine, QScriptEngine::FunctionSignature construct, QScriptEngine::FunctionSignature valueOf, QScriptEngine::FunctionSignature toString)
qtscript_create_enum_class_helper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscript_RouterDescriptor.cpp~	/^static QScriptValue qtscript_create_enum_class_helper($/;"	f	file:	signature:( QScriptEngine *engine, QScriptEngine::FunctionSignature construct, QScriptEngine::FunctionSignature valueOf, QScriptEngine::FunctionSignature toString)
qtscript_initialize_com_vidalia_torcontrol_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.h~	/^void qtscript_initialize_com_vidalia_torcontrol_bindings(QScriptValue &extensionObject)$/;"	f	signature:(QScriptValue &extensionObject)
quelquetemps	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/troubleshooting.html	/^Si Tor a fonctionn√© correctement depuis quelquetemps (plus que quelques$/;"	p	file:	signature:(plus que quelques secondes)
question	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::question(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2, QString remember, VSettings *settings, QString key)
question	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int question(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton, QString remember = QString(), VSettings *settings = 0, QString key = QString())
quitWindowCallback	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^quitWindowCallback(HWND hwnd, LPARAM targetPID)$/;"	f	signature:(HWND hwnd, LPARAM targetPID)
quot	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeHelp&quot;&gt;What's this?&lt;\/a&gt;<\/string>$/;"	v
quot	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.ui	/^        <string>&lt;a href=&quot;#bridgeUsage&quot;&gt;Who has used my bridge?&lt;\/a&gt;<\/string>$/;"	v
r	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/hr.png	/^/;"	v
r	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/sb.png	/^ VAï*@yPmπrÑ≤Üë≠,Ü+Ñ	0É8ä1g)Kò:Wö:UèHh∞'8]Hf©Ni£WtµD[årå∆bw•Rbá|ì∆ä†–}ëΩ•≤Œ∏≈‚,Ä.}21|4Ä7Ç?â+Lê2Y8Yù%;gDe¶Hf•Zw¥cÄΩgÖ¡iÖømâ¡d{®°≥Ÿ?z=[çLfé5Qq@VdSe_n~h0~/;"	v
randomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::randomPassword()$/;"	f	class:TorSettings	signature:()
randomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  static QString randomPassword();$/;"	p	class:TorSettings	access:public	signature:()
rateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::rateChanged(int index)$/;"	f	class:ServerPage	signature:(int index)
rateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void rateChanged(int rate);$/;"	p	class:ServerPage	access:private	signature:(int rate)
readLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readLine(QString &line, QString *errmsg)$/;"	f	class:ControlSocket	signature:(QString &line, QString *errmsg)
readLine	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readLine(QString &line, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:protected	signature:(QString &line, QString *errmsg = 0)
readLineData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readLineData(QString &line, QString *errmsg)$/;"	f	class:ControlSocket	signature:(QString &line, QString *errmsg)
readLineData	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readLineData(QString &line, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:protected	signature:(QString &line, QString *errmsg = 0)
readPasswordFromStdin	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::readPasswordFromStdin()$/;"	f	class:Vidalia	signature:()
readPasswordFromStdin	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool readPasswordFromStdin();$/;"	p	class:Vidalia	access:public	signature:()
readReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::readReply(ControlReply &reply, QString *errmsg)$/;"	f	class:ControlSocket	signature:(ControlReply &reply, QString *errmsg)
readReply	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool readReply(ControlReply &reply, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:public	signature:(ControlReply &reply, QString *errmsg = 0)
readStandardError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::readStandardError()$/;"	f	class:UpdateProcess	signature:()
readStandardError	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void readStandardError();$/;"	p	class:UpdateProcess	access:protected	signature:()
readStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::readStandardOutput()$/;"	f	class:UpdateProcess	signature:()
readStandardOutput	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void readStandardOutput();$/;"	p	class:UpdateProcess	access:protected	signature:()
read_annotations_file	/Users/chiiph/Code/vidalia/src/crashreporter/main.cpp	/^read_annotations_file(const QString &fileName, QString &errorMessage)$/;"	f	signature:(const QString &fileName, QString &errorMessage)
read_next_line	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^read_next_line(QTextStream *stream)$/;"	f	signature:(QTextStream *stream)
read_next_line	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^read_next_line(QTextStream *stream)$/;"	f	signature:(QTextStream *stream)
read_next_line	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^read_next_line(QTextStream *stream)$/;"	f	signature:(QTextStream *stream)
read_next_line	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^read_next_line(QTextStream *stream)$/;"	f	signature:(QTextStream *stream)
read_pidfile	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^read_pidfile(const QString &pidFileName, QString *errmsg)$/;"	f	signature:(const QString &pidFileName, QString *errmsg)
read_pidfile	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^qint64 read_pidfile(const QString &pidfile, QString *errmsg = 0);$/;"	p	signature:(const QString &pidfile, QString *errmsg = 0)
readyRead	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  void readyRead();$/;"	p	class:ControlSocket	access:public	signature:()
reason	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::ConnectionStatusReason reason() const { return _reason; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
recommendedAction	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Recommendation recommendedAction() const { return _action; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
recordByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::recordByAddr(const QHostAddress &ip)$/;"	f	class:GeoIpDatabase	signature:(const QHostAddress &ip)
recordByAddr	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpRecord recordByAddr(const QHostAddress &ip);$/;"	p	class:GeoIpDatabase	access:public	signature:(const QHostAddress &ip)
ref	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    int ref;$/;"	m	struct:Log::LogMessage::Stream	access:public
ref	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      int ref;        \/**< Reference counter. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
refresh	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::refresh()$/;"	f	class:NetViewer	signature:()
refresh	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void refresh();$/;"	p	class:NetViewer	access:private	signature:()
region	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString region() const { return _region; }$/;"	f	class:GeoIpRecord	access:public	signature:() const
registerLogEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::registerLogEvents()$/;"	f	class:MessageLog	signature:()
registerLogEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void registerLogEvents();$/;"	p	class:MessageLog	access:private	signature:()
rejectsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::rejectsPorts(QStringList portList)$/;"	f	class:ExitPolicy	signature:(QStringList portList)
rejectsPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  bool rejectsPorts(QStringList portList);$/;"	p	class:ExitPolicy	access:public	signature:(QStringList portList)
relaySelected	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.cpp	/^TorMapWidgetPopupMenu::relaySelected(QAction *action)$/;"	f	class:TorMapWidgetPopupMenu	signature:(QAction *action)
relaySelected	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidgetPopupMenu.h	/^  void relaySelected(QAction *action);$/;"	p	class:TorMapWidgetPopupMenu	access:private	signature:(QAction *action)
relays	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/bridges.html	/^them, even if your ISP is filtering connections to all the known Tor relays,$/;"	v
relays	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/bridges.html	/^them, even if your ISP is filtering connections to all the known Tor relays,$/;"	v
reloadAll	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  void reloadAll();$/;"	p	class:ConfigPage	access:public	signature:()
rememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::rememberShutdown()$/;"	f	class:VidaliaSettings	signature:()
rememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool rememberShutdown();$/;"	p	class:VidaliaSettings	access:public	signature:()
remove	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::remove()$/;"	f	class:TorService	signature:()
remove	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool remove();$/;"	p	class:TorService	access:public	signature:()
removeAllTranslators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::removeAllTranslators()$/;"	f	class:Vidalia	signature:()
removeAllTranslators	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void removeAllTranslators();$/;"	p	class:Vidalia	access:protected	signature:()
removeBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::removeBridge()$/;"	f	class:NetworkPage	signature:()
removeBridge	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void removeBridge();$/;"	p	class:NetworkPage	access:private	signature:()
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeCircuit()$/;"	f	class:CircuitListWidget	signature:()
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeCircuit(CircuitItem *circuit)$/;"	f	class:CircuitListWidget	signature:(CircuitItem *circuit)
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeCircuit();$/;"	p	class:CircuitListWidget	access:private	signature:()
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeCircuit(CircuitItem *circuit);$/;"	p	class:CircuitListWidget	access:private	signature:(CircuitItem *circuit)
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::removeCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void removeCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::removeCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
removeCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void removeCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
removePolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::removePolicy(Policy policy)$/;"	f	class:ExitPolicy	signature:(Policy policy)
removePolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  void removePolicy(Policy policy);$/;"	p	class:ExitPolicy	access:public	signature:(Policy policy)
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::removeStream(StreamItem *stream)$/;"	f	class:CircuitItem	signature:(StreamItem *stream)
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void removeStream(StreamItem *stream);$/;"	p	class:CircuitItem	access:public	signature:(StreamItem *stream)
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeStream()$/;"	f	class:CircuitListWidget	signature:()
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::removeStream(StreamItem *stream)$/;"	f	class:CircuitListWidget	signature:(StreamItem *stream)
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeStream();$/;"	p	class:CircuitListWidget	access:private	signature:()
removeStream	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void removeStream(StreamItem *stream);$/;"	p	class:CircuitListWidget	access:private	signature:(StreamItem *stream)
remove_dir	/Users/chiiph/Code/vidalia/src/common/file.cpp	/^remove_dir(const QString &path)$/;"	f	signature:(const QString &path)
remove_dir	/Users/chiiph/Code/vidalia/src/common/file.h	/^bool remove_dir(const QString &dir);$/;"	p	signature:(const QString &dir)
remove_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^remove_exception_handler(void)$/;"	f	namespace:CrashReporter	signature:(void)
remove_exception_handler	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  void remove_exception_handler(void);$/;"	p	namespace:CrashReporter	signature:(void)
replacefunc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^replacefunc(void *cbdata,$/;"	f	signature:(void *cbdata, QDomElement e)
reset	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::reset()$/;"	f	class:BandwidthGraph	signature:()
reset	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void reset();$/;"	p	class:BandwidthGraph	access:private	signature:()
reset	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::reset()$/;"	f	class:VSettings	signature:()
reset	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static void reset();$/;"	p	class:VSettings	access:public	signature:()
resetColumnWidths	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.cpp	/^LogHeaderView::resetColumnWidths()$/;"	f	class:LogHeaderView	signature:()
resetColumnWidths	/Users/chiiph/Code/vidalia/src/vidalia/log/LogHeaderView.h	/^  void resetColumnWidths();$/;"	p	class:LogHeaderView	access:public	signature:()
resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::resetConf(QString key, QString *errmsg)$/;"	f	class:TorControl	signature:(QString key, QString *errmsg)
resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::resetConf(QStringList keys, QString *errmsg)$/;"	f	class:TorControl	signature:(QStringList keys, QString *errmsg)
resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool resetConf(QString key, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString *errmsg = 0)
resetConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool resetConf(QStringList keys, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QStringList keys, QString *errmsg = 0)
resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.cpp	/^TorControlPrototype::resetConf(QStringList keys, QString *errmsg)$/;"	f	class:TorControlPrototype	signature:(QStringList keys, QString *errmsg)
resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant resetConf(QString key);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key)
resetConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE bool resetConf(QStringList keys, QString *errmsg = 0);$/;"	p	class:TorControlPrototype	access:public	signature:(QStringList keys, QString *errmsg = 0)
resetGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::resetGraph()$/;"	f	class:GraphFrame	signature:()
resetGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void resetGraph();$/;"	p	class:GraphFrame	access:public	signature:()
resetZoomPoint	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::resetZoomPoint()$/;"	f	class:ZImageView	signature:()
resetZoomPoint	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void resetZoomPoint();$/;"	p	class:ZImageView	access:public	signature:()
resizeEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::resizeEvent(QResizeEvent *ev)$/;"	f	class:GraphFrame	signature:(QResizeEvent *ev)
resizeEvent	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void resizeEvent(QResizeEvent *ev);$/;"	p	class:GraphFrame	access:private	signature:(QResizeEvent *ev)
resolve	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolve(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
resolve	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolve(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:public	signature:(const QHostAddress &ip)
resolveUsingLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolveUsingLocalDatabase(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
resolveUsingLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolveUsingLocalDatabase(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:protected	signature:(const QHostAddress &ip)
resolveUsingTor	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::resolveUsingTor(const QHostAddress &ip)$/;"	f	class:GeoIpResolver	signature:(const QHostAddress &ip)
resolveUsingTor	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  GeoIpRecord resolveUsingTor(const QHostAddress &ip);$/;"	p	class:GeoIpResolver	access:protected	signature:(const QHostAddress &ip)
restart	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::restart()$/;"	f	class:MainWindow	signature:()
restart	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void restart();$/;"	p	class:MainWindow	access:private	signature:()
restartExecutable	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char restartExecutable[MAX_CMD_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
restartExecutableArgs	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static char restartExecutableArgs[MAX_CMD_LEN + 1] = "";$/;"	m	namespace:CrashReporter	file:
restartTor	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void restartTor();$/;"	p	class:AdvancedPage	access:public	signature:()
restartTor	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void restartTor();$/;"	p	class:ConfigDialog	access:public	signature:()
restoreWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::restoreWindowState()$/;"	f	class:VidaliaWindow	signature:()
restoreWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void restoreWindowState();$/;"	p	class:VidaliaWindow	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::retranslateUi()$/;"	f	class:MainWindow	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  virtual void retranslateUi();$/;"	p	class:MainWindow	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::retranslateUi()$/;"	f	class:StatusTab	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void retranslateUi();$/;"	p	class:StatusTab	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::retranslateUi()$/;"	f	class:VTabWidget	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void retranslateUi();$/;"	p	class:VTabWidget	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::retranslateUi(const QString &languageCode)$/;"	f	class:Vidalia	signature:(const QString &languageCode)
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool retranslateUi(const QString &languageCode);$/;"	p	class:Vidalia	access:public	signature:(const QString &languageCode)
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::retranslateUi()$/;"	f	class:VidaliaTab	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  virtual void retranslateUi();$/;"	p	class:VidaliaTab	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::retranslateUi()$/;"	f	class:VidaliaWindow	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void retranslateUi();$/;"	p	class:VidaliaWindow	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::retranslateUi()$/;"	f	class:BandwidthGraph	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  virtual void retranslateUi();$/;"	p	class:BandwidthGraph	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::retranslateUi()$/;"	f	class:AdvancedPage	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  virtual void retranslateUi();$/;"	p	class:AdvancedPage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::retranslateUi()$/;"	f	class:AppearancePage	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  virtual void retranslateUi();$/;"	p	class:AppearancePage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::retranslateUi()$/;"	f	class:ConfigDialog	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  virtual void retranslateUi();$/;"	p	class:ConfigDialog	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void retranslateUi() {}$/;"	f	class:ConfigPage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::retranslateUi()$/;"	f	class:GeneralPage	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  virtual void retranslateUi();$/;"	p	class:GeneralPage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::retranslateUi()$/;"	f	class:NetworkPage	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  virtual void retranslateUi();$/;"	p	class:NetworkPage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::retranslateUi()$/;"	f	class:ServerPage	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  virtual void retranslateUi();$/;"	p	class:ServerPage	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::retranslateUi()$/;"	f	class:HelpBrowser	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  virtual void retranslateUi();$/;"	p	class:HelpBrowser	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::retranslateUi()$/;"	f	class:MessageLog	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  virtual void retranslateUi();$/;"	p	class:MessageLog	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::retranslateUi()$/;"	f	class:StatusEventWidget	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  virtual void retranslateUi();$/;"	p	class:StatusEventWidget	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::retranslateUi()$/;"	f	class:CircuitListWidget	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void retranslateUi();$/;"	p	class:CircuitListWidget	access:public	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::retranslateUi()$/;"	f	class:NetViewer	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void retranslateUi();$/;"	p	class:NetViewer	access:protected	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::retranslateUi()$/;"	f	class:RouterListWidget	signature:()
retranslateUi	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void retranslateUi();$/;"	p	class:RouterListWidget	access:public	signature:()
reverse	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.cpp	/^AddressMap::reverse() const$/;"	f	class:AddressMap	signature:() const
reverse	/Users/chiiph/Code/vidalia/src/torcontrol/AddressMap.h	/^  AddressMap reverse() const;$/;"	p	class:AddressMap	access:public	signature:() const
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::revert()$/;"	f	class:AbstractTorSettings	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void revert();$/;"	p	class:AbstractTorSettings	access:public	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::revert()$/;"	f	class:AdvancedPage	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void revert();$/;"	p	class:AdvancedPage	access:public	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual void revert() {}$/;"	f	class:ConfigPage	access:public	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::revert()$/;"	f	class:NetworkPage	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  void revert();$/;"	p	class:NetworkPage	access:public	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::revert()$/;"	f	class:ServerPage	signature:()
revert	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void revert();$/;"	p	class:ServerPage	access:public	signature:()
rotateLogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::rotateLogFile(const QString &filename)$/;"	f	class:MessageLog	signature:(const QString &filename)
rotateLogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool rotateLogFile(const QString &filename);$/;"	p	class:MessageLog	access:private	signature:(const QString &filename)
routerIDs	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList routerIDs() const { return _ids; }$/;"	f	class:Circuit	access:public	signature:() const
routerNames	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QStringList routerNames() const { return _names; }$/;"	f	class:Circuit	access:public	signature:() const
routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::routerSelected(const QList<RouterDescriptor> &routers)$/;"	f	class:NetViewer	signature:(const QList<RouterDescriptor> &routers)
routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void routerSelected(const QList<RouterDescriptor> &routers);$/;"	p	class:NetViewer	access:private	signature:(const QList<RouterDescriptor> &routers)
routerSelected	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void routerSelected(QList<RouterDescriptor> rd);$/;"	p	class:RouterListWidget	access:public	signature:(QList<RouterDescriptor> rd)
run	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::run()$/;"	f	class:ControlConnection	signature:()
run	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void run();$/;"	p	class:ControlConnection	access:private	signature:()
run	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::run()$/;"	f	class:Vidalia	signature:()
run	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static int run();$/;"	p	class:Vidalia	access:public	signature:()
run	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::run()$/;"	f	class:UPNPControlThread	signature:()
run	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void run();$/;"	p	class:UPNPControlThread	access:protected	signature:()
runTest	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^runTest(BootstrapStatus::Status phaseToTest)$/;"	f	class:BootstrapTestCase	signature:(BootstrapStatus::Status phaseToTest)
runTest	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void runTest(BootstrapStatus::Status phaseToTest);$/;"	p	class:BootstrapTestCase	access:public	signature:(BootstrapStatus::Status phaseToTest)
runTest	/Users/chiiph/Code/vidalia/src/tests/testMain.cpp	/^void runTest(){$/;"	f	signature:()
runTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::runTorAtStart()$/;"	f	class:VidaliaSettings	signature:()
runTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool runTorAtStart();$/;"	p	class:VidaliaSettings	access:public	signature:()
runVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::runVidaliaOnBoot()$/;"	f	class:VidaliaSettings	signature:()
runVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool runVidaliaOnBoot();$/;"	p	class:VidaliaSettings	access:public	signature:()
running	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::running()$/;"	f	class:MainWindow	signature:()
running	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void running();$/;"	p	class:MainWindow	access:private	signature:()
running	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  void running();$/;"	p	class:Vidalia	access:public	signature:()
running	/Users/chiiph/Code/vidalia/src/vidalia/help/content/ar/troubleshooting.html	/^Is Tor already running?$/;"	v
s_AddData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^typedef struct s_AddData {$/;"	s	file:
s_AddData::did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  did;$/;"	m	struct:s_AddData	file:	access:public
s_AddData::dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dtag;$/;"	m	struct:s_AddData	file:	access:public
s_AddData::newprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newprop;$/;"	m	struct:s_AddData	file:	access:public
s_AddData::newpropval	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newpropval;$/;"	m	struct:s_AddData	file:	access:public
s_AddData::newtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newtag;$/;"	m	struct:s_AddData	file:	access:public
s_ReplaceData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^typedef struct s_ReplaceData {$/;"	s	file:
s_ReplaceData::did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  did;$/;"	m	struct:s_ReplaceData	file:	access:public
s_ReplaceData::dprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dprop;$/;"	m	struct:s_ReplaceData	file:	access:public
s_ReplaceData::dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  dtag;$/;"	m	struct:s_ReplaceData	file:	access:public
s_ReplaceData::newprop	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newprop;$/;"	m	struct:s_ReplaceData	file:	access:public
s_ReplaceData::newpropval	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newpropval;$/;"	m	struct:s_ReplaceData	file:	access:public
s_ReplaceData::newtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString  newtag;$/;"	m	struct:s_ReplaceData	file:	access:public
s_SpliceData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^typedef struct s_SpliceData {$/;"	s	file:
s_SpliceData::did	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      did;$/;"	m	struct:s_SpliceData	file:	access:public
s_SpliceData::dtag	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      dtag;$/;"	m	struct:s_SpliceData	file:	access:public
s_SpliceData::splice	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QDomElement  splice;$/;"	m	struct:s_SpliceData	file:	access:public
s_UserLocalData	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^typedef struct s_UserLocalData {$/;"	s	file:
s_UserLocalData::featureid	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      featureid;$/;"	m	struct:s_UserLocalData	file:	access:public
s_UserLocalData::keypath	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QString      keypath;$/;"	m	struct:s_UserLocalData	file:	access:public
s_UserLocalData::newcomps	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QStringList  newcomps;$/;"	m	struct:s_UserLocalData	file:	access:public
save	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::save(QString &errmsg)$/;"	f	class:AdvancedPage	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  bool save(QString &errmsg);$/;"	p	class:AdvancedPage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::save(QString &errmsg)$/;"	f	class:AppearancePage	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  bool save(QString &errmsg);$/;"	p	class:AppearancePage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  virtual bool save(QString &errmsg) = 0;$/;"	p	class:ConfigPage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::save(QString &errmsg)$/;"	f	class:GeneralPage	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  bool save(QString &errmsg);$/;"	p	class:GeneralPage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::save(QString &errmsg)$/;"	f	class:NetworkPage	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  bool save(QString &errmsg);$/;"	p	class:NetworkPage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::save(QString &errmsg)$/;"	f	class:ServerPage	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  bool save(QString &errmsg);$/;"	p	class:ServerPage	access:public	signature:(QString &errmsg)
save	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::save(const QStringList &messages)$/;"	f	class:MessageLog	signature:(const QStringList &messages)
save	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void save(const QStringList &messages);$/;"	p	class:MessageLog	access:private	signature:(const QStringList &messages)
saveAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveAll()$/;"	f	class:MessageLog	signature:()
saveAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveAll();$/;"	p	class:MessageLog	access:private	signature:()
saveBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::saveBandwidthLimits()$/;"	f	class:ServerPage	signature:()
saveBandwidthLimits	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void saveBandwidthLimits();$/;"	p	class:ServerPage	access:private	signature:()
saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::saveChanges()$/;"	f	class:BandwidthGraph	signature:()
saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void saveChanges();$/;"	p	class:BandwidthGraph	access:private	signature:()
saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::saveChanges()$/;"	f	class:ConfigDialog	signature:()
saveChanges	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void saveChanges();$/;"	p	class:ConfigDialog	access:private	signature:()
saveConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::saveConf(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
saveConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool saveConf(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
saveConf	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::saveConf()$/;"	f	class:ConfigDialog	signature:()
saveConf	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void saveConf();$/;"	p	class:ConfigDialog	access:private	signature:()
saveConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant saveConf();$/;"	p	class:TorControlPrototype	access:public	signature:()
saveExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::saveExitPolicies()$/;"	f	class:ServerPage	signature:()
saveExitPolicies	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void saveExitPolicies();$/;"	p	class:ServerPage	access:private	signature:()
saveSelected	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveSelected()$/;"	f	class:MessageLog	signature:()
saveSelected	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveSelected();$/;"	p	class:MessageLog	access:private	signature:()
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::saveSetting(QString prop, QVariant value)$/;"	f	class:VidaliaTab	signature:(QString prop, QVariant value)
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaTab	access:public	signature:(QString name, QVariant value)
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::saveSetting(QString prop, QVariant value)$/;"	f	class:VidaliaWindow	signature:(QString prop, QVariant value)
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaWindow	access:public	signature:(QString name, QVariant value)
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::saveSetting(QString name, QVariant value)$/;"	f	class:VidaliaTabPrototype	signature:(QString name, QVariant value)
saveSetting	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE void saveSetting(QString name, QVariant value);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QString name, QVariant value)
saveSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::saveSettings()$/;"	f	class:MessageLog	signature:()
saveSettings	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void saveSettings();$/;"	p	class:MessageLog	access:private	signature:()
saveTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::saveTorrc()$/;"	f	class:TorrcDialog	signature:()
saveTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  void saveTorrc();$/;"	p	class:TorrcDialog	access:private	signature:()
saveWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::saveWindowState()$/;"	f	class:VidaliaWindow	signature:()
saveWindowState	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void saveWindowState();$/;"	p	class:VidaliaWindow	access:public	signature:()
scheduleCircuitRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::scheduleCircuitRemoval(CircuitItem *circuit, int delay)$/;"	f	class:CircuitListWidget	signature:(CircuitItem *circuit, int delay)
scheduleCircuitRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void scheduleCircuitRemoval(CircuitItem *circuit, int delay);$/;"	p	class:CircuitListWidget	access:private	signature:(CircuitItem *circuit, int delay)
scheduleStreamRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.cpp	/^CircuitListWidget::scheduleStreamRemoval(StreamItem *stream, int delay)$/;"	f	class:CircuitListWidget	signature:(StreamItem *stream, int delay)
scheduleStreamRemoval	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void scheduleStreamRemoval(StreamItem *stream, int delay);$/;"	p	class:CircuitListWidget	access:private	signature:(StreamItem *stream, int delay)
schwerwiegendsten	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^der am wenigsten schwerwiegendsten, sind:$/;"	v
scpdurl	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char scpdurl[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
scrub_email_addr	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^scrub_email_addr(const QString &email)$/;"	f	signature:(const QString &email)
scrub_email_addr	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString scrub_email_addr(const QString &email);$/;"	p	signature:(const QString &email)
search	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::search()$/;"	f	class:HelpBrowser	signature:()
search	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void search();$/;"	p	class:HelpBrowser	access:private	signature:()
searchItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::searchItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev)$/;"	f	class:HelpBrowser	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
searchItemChanged	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void searchItemChanged(QTreeWidgetItem *current, QTreeWidgetItem *prev);$/;"	p	class:HelpBrowser	access:private	signature:(QTreeWidgetItem *current, QTreeWidgetItem *prev)
searchNextRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::searchNextRouter(const QString routerNickname)$/;"	f	class:RouterListWidget	signature:(const QString routerNickname)
searchNextRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void searchNextRouter(const QString routerNickname);$/;"	p	class:RouterListWidget	access:public	signature:(const QString routerNickname)
seau	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/netview.html	/^La moiti√© inf√©rieure de la fen√™tre, sous la carte du r√©seau, pr√©sente la$/;"	v
second	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service second;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
selectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::selectAll()$/;"	f	class:MessageLog	signature:()
selectAll	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void selectAll();$/;"	p	class:MessageLog	access:private	signature:()
selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::selectCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void selectCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::selectCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
selectCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void selectCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
selectRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::selectRouter(const QString &id)$/;"	f	class:TorMapImageView	signature:(const QString &id)
selectRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void selectRouter(const QString &id);$/;"	p	class:TorMapImageView	access:public	signature:(const QString &id)
selected	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::selected(int ret, int button0, int button1, int button2)$/;"	f	class:VMessageBox	signature:(int ret, int button0, int button1, int button2)
selected	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int selected(int ret, int button0, int button1, int button2);$/;"	p	class:VMessageBox	access:private	signature:(int ret, int button0, int button1, int button2)
selectedEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::selectedEvents() const$/;"	f	class:StatusEventWidget	signature:() const
selectedEvents	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  QStringList selectedEvents() const;$/;"	p	class:StatusEventWidget	access:public	signature:() const
selectedIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  int selectedIndex();$/;"	p	class:ServerPage	access:private	signature:()
selectedMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::selectedMessages() const$/;"	f	class:LogTreeWidget	signature:() const
selectedMessages	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  QStringList selectedMessages() const;$/;"	p	class:LogTreeWidget	access:public	signature:() const
sen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^Vidalialla voi ohjata omaa Tor-ohjelmaa; k√§ynnist√§√§ ja pys√§ytt√§√§ sen, n√§hd√§ sen tilan ja huomata jos se pys√§htyy yll√§tt√§en.$/;"	v
send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::send(const ControlCommand &cmd, QString *errmsg)$/;"	f	class:ControlConnection	signature:(const ControlCommand &cmd, QString *errmsg)
send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::send(const ControlCommand &cmd,$/;"	f	class:ControlConnection	signature:(const ControlCommand &cmd, ControlReply &reply, QString *errmsg)
send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool send(const ControlCommand &cmd, ControlReply &reply, QString *errmsg = 0);$/;"	p	class:ControlConnection	access:public	signature:(const ControlCommand &cmd, ControlReply &reply, QString *errmsg = 0)
send	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  bool send(const ControlCommand &cmd, QString *errmsg = 0);$/;"	p	class:ControlConnection	access:public	signature:(const ControlCommand &cmd, QString *errmsg = 0)
send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::send(ControlCommand cmd, ControlReply &reply, QString *errmsg)$/;"	f	class:TorControl	signature:(ControlCommand cmd, ControlReply &reply, QString *errmsg)
send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::send(ControlCommand cmd, QString *errmsg)$/;"	f	class:TorControl	signature:(ControlCommand cmd, QString *errmsg)
send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool send(ControlCommand cmd, ControlReply &reply, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(ControlCommand cmd, ControlReply &reply, QString *errmsg = 0)
send	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool send(ControlCommand cmd, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(ControlCommand cmd, QString *errmsg = 0)
sendCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::sendCommand(ControlCommand cmd, QString *errmsg)$/;"	f	class:ControlSocket	signature:(ControlCommand cmd, QString *errmsg)
sendCommand	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  bool sendCommand(ControlCommand cmd, QString *errmsg = 0);$/;"	p	class:ControlSocket	access:public	signature:(ControlCommand cmd, QString *errmsg = 0)
sendSocksHandshake	/Users/chiiph/Code/vidalia/src/common/TorSocket.cpp	/^TorSocket::sendSocksHandshake(const QString &remoteHost, quint16 remotePort)$/;"	f	class:TorSocket	signature:(const QString &remoteHost, quint16 remotePort)
sendSocksHandshake	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void sendSocksHandshake(const QString &remoteHost, quint16 remotePort);$/;"	p	class:TorSocket	access:private	signature:(const QString &remoteHost, quint16 remotePort)
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorControl	access:public	signature:()
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port)
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorEvents	access:public	signature:()
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port)
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::serverDescriptorAccepted(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port)
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port)
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorAccepted();$/;"	p	class:TorControlPrototype	access:public	signature:()
serverDescriptorAccepted	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorAccepted(const QHostAddress &ip, quint16 port);$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port)
serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControl	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorEvents	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::serverDescriptorRejected(const QHostAddress &ip,$/;"	f	class:StatusEventWidget	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:StatusEventWidget	access:private	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
serverDescriptorRejected	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void serverDescriptorRejected(const QHostAddress &ip, quint16 port,$/;"	p	class:TorControlPrototype	access:public	signature:(const QHostAddress &ip, quint16 port, const QString &reason)
serverModeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::serverModeChanged(bool enabled)$/;"	f	class:ServerPage	signature:(bool enabled)
serverModeChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void serverModeChanged(bool enabled);$/;"	p	class:ServerPage	access:private	signature:(bool enabled)
servicetype	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char servicetype[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas_service	access:public
setAccountingMax	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setAccountingMax(int amount, const QString &unit)$/;"	f	class:ServerSettings	signature:(int amount, const QString &unit)
setAccountingMax	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setAccountingMax(int amount, const QString &unit);$/;"	p	class:ServerSettings	access:public	signature:(int amount, const QString &unit)
setAccountingStart	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setAccountingStart(const QString &dwm,$/;"	f	class:ServerSettings	signature:(const QString &dwm, int day, const QString &time)
setAccountingStart	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setAccountingStart(const QString &dwm, int day, const QString &time);$/;"	p	class:ServerSettings	access:public	signature:(const QString &dwm, int day, const QString &time)
setAllowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setAllowPanic(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
setAllowPanic	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setAllowPanic(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
setAuthMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.cpp	/^ProtocolInfo::setAuthMethods(const QString authMethods)$/;"	f	class:ProtocolInfo	signature:(const QString authMethods)
setAuthMethods	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setAuthMethods(const QString methods);$/;"	p	class:ProtocolInfo	access:public	signature:(const QString methods)
setAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setAuthenticationMethod(AuthenticationMethod method)$/;"	f	class:TorSettings	signature:(AuthenticationMethod method)
setAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setAuthenticationMethod(AuthenticationMethod method);$/;"	p	class:TorSettings	access:public	signature:(AuthenticationMethod method)
setAutoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setAutoControlPort(const bool autoControl)$/;"	f	class:TorSettings	signature:(const bool autoControl)
setAutoControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setAutoControlPort(const bool auto);$/;"	p	class:TorSettings	access:public	signature:(const bool auto)
setAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setAutoUpdateEnabled(bool enabled)$/;"	f	class:VidaliaSettings	signature:(bool enabled)
setAutoUpdateEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setAutoUpdateEnabled(bool enabled);$/;"	p	class:VidaliaSettings	access:public	signature:(bool enabled)
setBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBandwidthAvgRate(quint32 rate)$/;"	f	class:ServerSettings	signature:(quint32 rate)
setBandwidthAvgRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBandwidthAvgRate(quint32 rate);$/;"	p	class:ServerSettings	access:public	signature:(quint32 rate)
setBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBandwidthBurstRate(quint32 rate)$/;"	f	class:ServerSettings	signature:(quint32 rate)
setBandwidthBurstRate	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBandwidthBurstRate(quint32 rate);$/;"	p	class:ServerSettings	access:public	signature:(quint32 rate)
setBootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setBootstrap(bool enabled)$/;"	f	class:TorSettings	signature:(bool enabled)
setBootstrap	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setBootstrap(bool enabled);$/;"	p	class:TorSettings	access:public	signature:(bool enabled)
setBootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setBootstrapFrom(const QString &from)$/;"	f	class:TorSettings	signature:(const QString &from)
setBootstrapFrom	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setBootstrapFrom(const QString &from);$/;"	p	class:TorSettings	access:public	signature:(const QString &from)
setBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setBridgeEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
setBridgeEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setBridgeEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
setBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setBridgeList(const QStringList &bridgeList)$/;"	f	class:NetworkSettings	signature:(const QStringList &bridgeList)
setBridgeList	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setBridgeList(const QStringList &bridgeList);$/;"	p	class:NetworkSettings	access:public	signature:(const QStringList &bridgeList)
setBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setBrowserDirectory(const QString &browserDirectory)$/;"	f	class:VidaliaSettings	signature:(const QString &browserDirectory)
setBrowserDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setBrowserDirectory(const QString &browserDirectory);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &browserDirectory)
setBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setBrowserExecutable(const QString &browserExecutable)$/;"	f	class:VidaliaSettings	signature:(const QString &browserExecutable)
setBrowserExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setBrowserExecutable(const QString &browserExecutable);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &browserExecutable)
setChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setChanged(bool changed)$/;"	f	class:AbstractTorSettings	signature:(bool changed)
setChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  void setChanged(bool changed);$/;"	p	class:AbstractTorSettings	access:public	signature:(bool changed)
setComment	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setComment(const QString &comment)$/;"	f	class:TorrcLine	access:public	signature:(const QString &comment)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QHash<QString,QString> map, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QHash<QString,QString> map, QString *errmsg, ControlReply *reply)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QString key, QString value, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QString key, QString value, QString *errmsg, ControlReply *reply)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setConf(QString keyAndValue, QString *errmsg, ControlReply *reply)$/;"	f	class:TorControl	signature:(QString keyAndValue, QString *errmsg, ControlReply *reply)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QHash<QString,QString> map, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QHash<QString,QString> map, QString *errmsg = 0, ControlReply *reply = 0)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QString key, QString value, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QString key, QString value, QString *errmsg = 0, ControlReply *reply = 0)
setConf	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setConf(QString keyAndValue, QString *errmsg = 0, ControlReply *reply = 0);$/;"	p	class:TorControl	access:public	signature:(QString keyAndValue, QString *errmsg = 0, ControlReply *reply = 0)
setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QHash<QString,QString> map);$/;"	p	class:TorControlPrototype	access:public	signature:(QHash<QString,QString> map)
setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QString key, QString value);$/;"	p	class:TorControlPrototype	access:public	signature:(QString key, QString value)
setConf	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setConf(QString keyAndValue);$/;"	p	class:TorControlPrototype	access:public	signature:(QString keyAndValue)
setContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setContactInfo(QString contact)$/;"	f	class:ServerSettings	signature:(QString contact)
setContactInfo	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setContactInfo(QString info);$/;"	p	class:ServerSettings	access:public	signature:(QString info)
setContent	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setContent(const QString &content)$/;"	f	class:TorrcLine	access:public	signature:(const QString &content)
setControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlAddress(const QHostAddress &addr)$/;"	f	class:TorSettings	signature:(const QHostAddress &addr)
setControlAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlAddress(const QHostAddress &addr);$/;"	p	class:TorSettings	access:public	signature:(const QHostAddress &addr)
setControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlMethod(ControlMethod::Method method)$/;"	f	class:TorSettings	signature:(ControlMethod::Method method)
setControlMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlMethod(ControlMethod::Method method);$/;"	p	class:TorSettings	access:public	signature:(ControlMethod::Method method)
setControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlPassword(const QString &password)$/;"	f	class:TorSettings	signature:(const QString &password)
setControlPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlPassword(const QString &password);$/;"	p	class:TorSettings	access:public	signature:(const QString &password)
setControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setControlPort(quint16 port)$/;"	f	class:TorSettings	signature:(quint16 port)
setControlPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setControlPort(quint16 port);$/;"	p	class:TorSettings	access:public	signature:(quint16 port)
setCookieAuthFile	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setCookieAuthFile(const QString cookieAuthFile)$/;"	f	class:ProtocolInfo	access:public	signature:(const QString cookieAuthFile)
setCrashAnnotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::setCrashAnnotations(const QHash<QString,QString> &annotations)$/;"	f	class:CrashReportDialog	signature:(const QHash<QString,QString> &annotations)
setCrashAnnotations	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  void setCrashAnnotations(const QHash<QString,QString> &annotations);$/;"	p	class:CrashReportDialog	access:public	signature:(const QHash<QString,QString> &annotations)
setCurrentIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::setCurrentIndex(int index)$/;"	f	class:ConfigPageStack	signature:(int index)
setCurrentIndex	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void setCurrentIndex(int index);$/;"	p	class:ConfigPageStack	access:public	signature:(int index)
setCurrentPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::setCurrentPage(ConfigPage *page)$/;"	f	class:ConfigPageStack	signature:(ConfigPage *page)
setCurrentPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void setCurrentPage(ConfigPage *page);$/;"	p	class:ConfigPageStack	access:public	signature:(ConfigPage *page)
setDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDataDirectory(const QString &dataDirectory)$/;"	f	class:TorSettings	signature:(const QString &dataDirectory)
setDataDirectory	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDataDirectory(const QString &dataDir);$/;"	p	class:TorSettings	access:public	signature:(const QString &dataDir)
setDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setDefault(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
setDefault	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  void setDefault(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &val)
setDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDefaultsTorrc(const QString &torrc)$/;"	f	class:TorSettings	signature:(const QString &torrc)
setDefaultsTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDefaultsTorrc(const QString &torrc);$/;"	p	class:TorSettings	access:public	signature:(const QString &torrc)
setDescription	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setDescription(const QString &description)$/;"	f	class:StatusEventItem	signature:(const QString &description)
setDescription	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setDescription(const QString &description);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &description)
setDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setDesiredState(quint16 desiredDirPort, quint16 desiredOrPort)$/;"	f	class:UPNPControl	signature:(quint16 desiredDirPort, quint16 desiredOrPort)
setDesiredState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setDesiredState(quint16 desiredDirPort, quint16 desiredOrPort);$/;"	p	class:UPNPControl	access:public	signature:(quint16 desiredDirPort, quint16 desiredOrPort)
setDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setDirPort(quint16 dirPort)$/;"	f	class:ServerSettings	signature:(quint16 dirPort)
setDirPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setDirPort(quint16 dirPort);$/;"	p	class:ServerSettings	access:public	signature:(quint16 dirPort)
setDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setDirectoryMirror(bool mirror)$/;"	f	class:ServerSettings	signature:(bool mirror)
setDirectoryMirror	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setDirectoryMirror(bool mirror);$/;"	p	class:ServerSettings	access:public	signature:(bool mirror)
setDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setDisableNetwork(bool val)$/;"	f	class:TorSettings	signature:(bool val)
setDisableNetwork	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setDisableNetwork(bool val);$/;"	p	class:TorSettings	access:public	signature:(bool val)
setDownloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::setDownloadProgress(const QString &url,$/;"	f	class:UpdateProgressDialog	signature:(const QString &url, int bytesReceived, int bytesTotal)
setDownloadProgress	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void setDownloadProgress(const QString &url,$/;"	p	class:UpdateProgressDialog	access:public	signature:(const QString &url, int bytesReceived, int bytesTotal)
setEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::setEnvironment(const QStringList &env)$/;"	f	class:HelperProcessPrototype	signature:(const QStringList &env)
setEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void setEnvironment(const QStringList &env);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QStringList &env)
setError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setError(UPNPError upnpError)$/;"	f	class:UPNPControl	signature:(UPNPError upnpError)
setError	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setError(UPNPError error);$/;"	p	class:UPNPControl	access:protected	signature:(UPNPError error)
setEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setEvent(TorEvents::Event e, bool add, bool set, QString *errmsg)$/;"	f	class:TorControl	signature:(TorEvents::Event e, bool add, bool set, QString *errmsg)
setEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setEvent(TorEvents::Event e, bool add = true, bool set = true,$/;"	p	class:TorControl	access:public	signature:(TorEvents::Event e, bool add = true, bool set = true, QString *errmsg = 0)
setEvent	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setEvent(TorEvents::Event e, bool add = true, bool set = true);$/;"	p	class:TorControlPrototype	access:public	signature:(TorEvents::Event e, bool add = true, bool set = true)
setEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::setEvents(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
setEvents	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool setEvents(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
setEvents	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant setEvents();$/;"	p	class:TorControlPrototype	access:public	signature:()
setExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setExecutable(const QString &torExecutable)$/;"	f	class:TorSettings	signature:(const QString &torExecutable)
setExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setExecutable(const QString &torExecutable);$/;"	p	class:TorSettings	access:public	signature:(const QString &torExecutable)
setExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setExitPolicy(ExitPolicy &exitPolicy)$/;"	f	class:ServerSettings	signature:(ExitPolicy &exitPolicy)
setExitPolicy	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setExitPolicy(ExitPolicy &policy);$/;"	p	class:ServerSettings	access:public	signature:(ExitPolicy &policy)
setFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setFascistFirewall(bool fascistFirewall)$/;"	f	class:NetworkSettings	signature:(bool fascistFirewall)
setFascistFirewall	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setFascistFirewall(bool fascistFirewall);$/;"	p	class:NetworkSettings	access:public	signature:(bool fascistFirewall)
setFirstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setFirstRun(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
setFirstRun	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setFirstRun(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
setGraphStyle	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void setGraphStyle(GraphStyle style) { _graphStyle = style; }$/;"	f	class:GraphFrame	access:public	signature:(GraphStyle style)
setHelpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setHelpUrl(const QString &url)$/;"	f	class:StatusEventItem	signature:(const QString &url)
setHelpUrl	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setHelpUrl(const QString &url);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &url)
setIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setIMExecutable(const QString &IMExecutable)$/;"	f	class:VidaliaSettings	signature:(const QString &IMExecutable)
setIMExecutable	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setIMExecutable(const QString &IMExecutable);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &IMExecutable)
setIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setIcon(const QPixmap &pixmap)$/;"	f	class:StatusEventItem	signature:(const QPixmap &pixmap)
setIcon	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setIcon(const QPixmap &pixmap);$/;"	p	class:StatusEventItem	access:public	signature:(const QPixmap &pixmap)
setIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setIconPref(const IconPosition iconPref)$/;"	f	class:VidaliaSettings	signature:(const IconPosition iconPref)
setIconPref	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setIconPref(const IconPosition iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(const IconPosition iconPref)
setImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::setImage(QImage& img)$/;"	f	class:ZImageView	signature:(QImage& img)
setImage	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void setImage(QImage& pixmap);$/;"	p	class:ZImageView	access:public	signature:(QImage& pixmap)
setInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setInterfaceStyle(QString styleKey)$/;"	f	class:VidaliaSettings	signature:(QString styleKey)
setInterfaceStyle	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setInterfaceStyle(QString styleKey);$/;"	p	class:VidaliaSettings	access:public	signature:(QString styleKey)
setKeyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::setKeyword(const QString &keyword)$/;"	f	class:ControlCommand	signature:(const QString &keyword)
setKeyword	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  void setKeyword(const QString &keyword);$/;"	p	class:ControlCommand	access:public	signature:(const QString &keyword)
setLanguage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::setLanguage(QString languageCode)$/;"	f	class:Vidalia	signature:(QString languageCode)
setLanguage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool setLanguage(QString languageCode = QString());$/;"	p	class:Vidalia	access:public	signature:(QString languageCode = QString())
setLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLanguageCode(QString languageCode)$/;"	f	class:VidaliaSettings	signature:(QString languageCode)
setLanguageCode	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLanguageCode(QString languageCode);$/;"	p	class:VidaliaSettings	access:public	signature:(QString languageCode)
setLastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLastCheckedForUpdates(const QDateTime &checkedAt)$/;"	f	class:VidaliaSettings	signature:(const QDateTime &checkedAt)
setLastCheckedForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLastCheckedForUpdates(const QDateTime &checkedAt);$/;"	p	class:VidaliaSettings	access:public	signature:(const QDateTime &checkedAt)
setLayout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.cpp	/^VidaliaTabPrototype::setLayout(QLayout *layout)$/;"	f	class:VidaliaTabPrototype	signature:(QLayout *layout)
setLayout	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaTabPrototype.h	/^    Q_INVOKABLE void setLayout(QLayout *layout);$/;"	p	class:VidaliaTabPrototype	access:public	signature:(QLayout *layout)
setLine	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  void setLine(TorrcLine *line)$/;"	f	class:TorOpt	access:public	signature:(TorrcLine *line)
setLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::setLocalDatabase(const QString &databaseFile)$/;"	f	class:GeoIpResolver	signature:(const QString &databaseFile)
setLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  bool setLocalDatabase(const QString &databaseFile);$/;"	p	class:GeoIpResolver	access:public	signature:(const QString &databaseFile)
setLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setLocalGeoIpDatabase(const QString &databaseFile)$/;"	f	class:VidaliaSettings	signature:(const QString &databaseFile)
setLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setLocalGeoIpDatabase(const QString &databaseFile);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &databaseFile)
setLocation	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void setLocation(QString location) { _location = location; }$/;"	f	class:RouterDescriptor	access:public	signature:(QString location)
setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::setLocation(const QString &location)$/;"	f	class:RouterInfoDialog	signature:(const QString &location)
setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  void setLocation(const QString &location);$/;"	p	class:RouterInfoDialog	access:public	signature:(const QString &location)
setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::setLocation(const GeoIpRecord &geoip)$/;"	f	class:RouterListItem	signature:(const GeoIpRecord &geoip)
setLocation	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  void setLocation(const GeoIpRecord &geoip);$/;"	p	class:RouterListItem	access:public	signature:(const GeoIpRecord &geoip)
setLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::setLogLevel(LogLevel level)$/;"	f	class:Log	signature:(LogLevel level)
setLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  void setLogLevel(LogLevel level);$/;"	p	class:Log	access:public	signature:(LogLevel level)
setLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setLongDescription(const QString &lang, const QString &desc)$/;"	f	class:PackageInfo	signature:(const QString &lang, const QString &desc)
setLongDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setLongDescription(const QString &lang, const QString &desc);$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang, const QString &desc)
setMaximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::setMaximumItemCount(int maximumItemCount)$/;"	f	class:StatusEventWidget	signature:(int maximumItemCount)
setMaximumItemCount	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void setMaximumItemCount(int maximumItemCount);$/;"	p	class:StatusEventWidget	access:public	signature:(int maximumItemCount)
setMaximumMessageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::setMaximumMessageCount(int max)$/;"	f	class:LogTreeWidget	signature:(int max)
setMaximumMessageCount	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void setMaximumMessageCount(int max);$/;"	p	class:LogTreeWidget	access:public	signature:(int max)
setMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::setMessage(const QString &msg)$/;"	f	class:ReplyLine	signature:(const QString &msg)
setMessage	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void setMessage(const QString &msg);$/;"	p	class:ReplyLine	access:public	signature:(const QString &msg)
setMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setMessage(const QString &message)$/;"	f	class:LogTreeItem	signature:(const QString &message)
setMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setMessage(const QString &message);$/;"	p	class:LogTreeItem	access:public	signature:(const QString &message)
setMinidumpFiles	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.cpp	/^CrashReportDialog::setMinidumpFiles(const QString &minidump, const QString &annotations)$/;"	f	class:CrashReportDialog	signature:(const QString &minidump, const QString &annotations)
setMinidumpFiles	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  void setMinidumpFiles(const QString &minidump, const QString &annotations);$/;"	p	class:CrashReportDialog	access:public	signature:(const QString &minidump, const QString &annotations)
setName	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setName(const QString &name)$/;"	f	class:PackageInfo	signature:(const QString &name)
setName	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setName(const QString &name);$/;"	p	class:PackageInfo	access:public	signature:(const QString &name)
setNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setNickname(QString nickname)$/;"	f	class:ServerSettings	signature:(QString nickname)
setNickname	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setNickname(QString nickname);$/;"	p	class:ServerSettings	access:public	signature:(QString nickname)
setNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setNonExitEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
setNonExitEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setNonExitEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
setORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setORPort(quint16 orPort)$/;"	f	class:ServerSettings	signature:(quint16 orPort)
setORPort	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setORPort(quint16 orPort);$/;"	p	class:ServerSettings	access:public	signature:(quint16 orPort)
setOffline	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  void setOffline(bool offline) { _status = (offline ? Offline : Online); }$/;"	f	class:RouterDescriptor	access:public	signature:(bool offline)
setOnTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::setOnTop(bool top)$/;"	f	class:VidaliaTab	signature:(bool top)
setOnTop	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setOnTop(bool top);$/;"	p	class:VidaliaTab	access:public	signature:(bool top)
setOpacity	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::setOpacity(int value)$/;"	f	class:BandwidthGraph	signature:(int value)
setOpacity	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void setOpacity(int value);$/;"	p	class:BandwidthGraph	access:private	signature:(int value)
setPanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setPanicPath(const QString &path)$/;"	f	class:VidaliaSettings	signature:(const QString &path)
setPanicPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setPanicPath(const QString &path);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &path)
setPluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setPluginPath(const QString &path)$/;"	f	class:VidaliaSettings	signature:(const QString &path)
setPluginPath	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setPluginPath(const QString &path);$/;"	p	class:VidaliaSettings	access:public	signature:(const QString &path)
setProgress	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setProgress(int progress, const QString &description)$/;"	f	class:StatusTab	signature:(int progress, const QString &description)
setProgress	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setProgress(int progress, const QString &description);$/;"	p	class:StatusTab	access:public	signature:(int progress, const QString &description)
setProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setProgressVisible(bool visible)$/;"	f	class:StatusTab	signature:(bool visible)
setProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setProgressVisible(bool visible);$/;"	p	class:StatusTab	access:public	signature:(bool visible)
setProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyAddress(const QString &addr)$/;"	f	class:NetworkSettings	signature:(const QString &addr)
setProxyAddress	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyAddress(const QString &addr);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &addr)
setProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyPassword(const QString &pass)$/;"	f	class:NetworkSettings	signature:(const QString &pass)
setProxyPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyPassword(const QString &pass);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &pass)
setProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyType(ProxyType type)$/;"	f	class:NetworkSettings	signature:(ProxyType type)
setProxyType	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyType(ProxyType type);$/;"	p	class:NetworkSettings	access:public	signature:(ProxyType type)
setProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setProxyUsername(const QString &user)$/;"	f	class:NetworkSettings	signature:(const QString &user)
setProxyUsername	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setProxyUsername(const QString &user);$/;"	p	class:NetworkSettings	access:public	signature:(const QString &user)
setPublishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setPublishServerDescriptor(bool publish)$/;"	f	class:ServerSettings	signature:(bool publish)
setPublishServerDescriptor	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setPublishServerDescriptor(bool publish);$/;"	p	class:ServerSettings	access:public	signature:(bool publish)
setRawContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::setRawContents(const QString &contents, QString *errmsg, TorControl *tc)$/;"	f	class:Torrc	signature:(const QString &contents, QString *errmsg, TorControl *tc)
setRawContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  bool setRawContents(const QString &contents, QString *errmsg, TorControl *tc = 0);$/;"	p	class:Torrc	access:public	signature:(const QString &contents, QString *errmsg, TorControl *tc = 0)
setReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setReachablePorts(const QList<quint16> &reachablePorts)$/;"	f	class:NetworkSettings	signature:(const QList<quint16> &reachablePorts)
setReachablePorts	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setReachablePorts(const QList<quint16> &reachablePorts);$/;"	p	class:NetworkSettings	access:public	signature:(const QList<quint16> &reachablePorts)
setRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setRejectPlaintextPorts(const QList<quint16> &ports)$/;"	f	class:TorSettings	signature:(const QList<quint16> &ports)
setRejectPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setRejectPlaintextPorts(const QList<quint16> &ports);$/;"	p	class:TorSettings	access:public	signature:(const QList<quint16> &ports)
setRememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRememberShutdown(bool val)$/;"	f	class:VidaliaSettings	signature:(bool val)
setRememberShutdown	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRememberShutdown(bool val);$/;"	p	class:VidaliaSettings	access:public	signature:(bool val)
setResetEnabled	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::setResetEnabled(bool enabled)$/;"	f	class:ControlPasswordInputDialog	signature:(bool enabled)
setResetEnabled	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  void setResetEnabled(bool enabled);$/;"	p	class:ControlPasswordInputDialog	access:public	signature:(bool enabled)
setResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::ReceiveWaiter::setResult(bool success,$/;"	f	class:ControlConnection::ReceiveWaiter	signature:(bool success, const ControlReply &reply, const QString &errmsg)
setResult	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^      void setResult(bool success, const ControlReply &reply,$/;"	p	class:ControlConnection::ReceiveWaiter	access:public	signature:(bool success, const ControlReply &reply, const QString &errmsg = QString())
setResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::setResult(bool success, const QString &errmsg)$/;"	f	class:SendCommandEvent::SendWaiter	signature:(bool success, const QString &errmsg)
setResult	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    void setResult(bool success, const QString &errmsg = QString());$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:(bool success, const QString &errmsg = QString())
setRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.cpp	/^RouterInfoDialog::setRouterInfo(const QStringList &desc,$/;"	f	class:RouterInfoDialog	signature:(const QStringList &desc, const RouterStatus &status)
setRouterInfo	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  void setRouterInfo(const QStringList &desc, const RouterStatus &status);$/;"	p	class:RouterInfoDialog	access:public	signature:(const QStringList &desc, const RouterStatus &status)
setRunTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRunTorAtStart(bool run)$/;"	f	class:VidaliaSettings	signature:(bool run)
setRunTorAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRunTorAtStart(bool run);$/;"	p	class:VidaliaSettings	access:public	signature:(bool run)
setRunVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setRunVidaliaOnBoot(bool run)$/;"	f	class:VidaliaSettings	signature:(bool run)
setRunVidaliaOnBoot	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setRunVidaliaOnBoot(bool run);$/;"	p	class:VidaliaSettings	access:public	signature:(bool run)
setServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setServerEnabled(bool enable)$/;"	f	class:ServerSettings	signature:(bool enable)
setServerEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setServerEnabled(bool enable);$/;"	p	class:ServerSettings	access:public	signature:(bool enable)
setSeverity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setSeverity(tc::Severity type)$/;"	f	class:LogTreeItem	signature:(tc::Severity type)
setSeverity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setSeverity(tc::Severity type);$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity type)
setShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setShortDescription(const QString &lang, const QString &desc)$/;"	f	class:PackageInfo	signature:(const QString &lang, const QString &desc)
setShortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setShortDescription(const QString &lang, const QString &desc);$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang, const QString &desc)
setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::setShortcut(const QString &shortcut, const char *slot)$/;"	f	class:VidaliaTab	signature:(const QString &shortcut, const char *slot)
setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setShortcut(const QString &shortcut, const char *slot);$/;"	p	class:VidaliaTab	access:public	signature:(const QString &shortcut, const char *slot)
setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::setShortcut(const QString &shortcut, const char *slot)$/;"	f	class:VidaliaWindow	signature:(const QString &shortcut, const char *slot)
setShortcut	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  void setShortcut(const QString &shortcut, const char *slot);$/;"	p	class:VidaliaWindow	access:public	signature:(const QString &shortcut, const char *slot)
setShowCounters	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::setShowCounters(bool showRecv, bool showSend)$/;"	f	class:GraphFrame	signature:(bool showRecv, bool showSend)
setShowCounters	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  void setShowCounters(bool showRecv, bool showSend);$/;"	p	class:GraphFrame	access:public	signature:(bool showRecv, bool showSend)
setShowMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setShowMainWindowAtStart(bool show)$/;"	f	class:VidaliaSettings	signature:(bool show)
setShowMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setShowMainWindowAtStart(bool show);$/;"	p	class:VidaliaSettings	access:public	signature:(bool show)
setSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setSocketPath(const QString &path)$/;"	f	class:TorSettings	signature:(const QString &path)
setSocketPath	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setSocketPath(const QString &path);$/;"	p	class:TorSettings	access:public	signature:(const QString &path)
setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::setSocksPort(quint16 port)$/;"	f	class:UpdateProcess	signature:(quint16 port)
setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void setSocksPort(quint16 port);$/;"	p	class:UpdateProcess	access:public	signature:(quint16 port)
setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setSocksPort(quint16 port)$/;"	f	class:TorSettings	signature:(quint16 port)
setSocksPort	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setSocksPort(quint16 port);$/;"	p	class:TorSettings	access:public	signature:(quint16 port)
setSource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.cpp	/^HelpTextBrowser::setSource(const QUrl &url)$/;"	f	class:HelpTextBrowser	signature:(const QUrl &url)
setSource	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpTextBrowser.h	/^  virtual void setSource(const QUrl &url);$/;"	p	class:HelpTextBrowser	access:public	signature:(const QUrl &url)
setStartupProgress	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setStartupProgress(int progressValue,$/;"	f	class:MainWindow	signature:(int progressValue, const QString &description)
setStartupProgress	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setStartupProgress(int percentComplete, const QString &description);$/;"	p	class:MainWindow	access:private	signature:(int percentComplete, const QString &description)
setStartupProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setStartupProgressVisible(bool visible)$/;"	f	class:MainWindow	signature:(bool visible)
setStartupProgressVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setStartupProgressVisible(bool visible);$/;"	p	class:MainWindow	access:private	signature:(bool visible)
setState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::setState(UPNPState state)$/;"	f	class:UPNPControl	signature:(UPNPState state)
setState	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void setState(UPNPState state);$/;"	p	class:UPNPControl	access:protected	signature:(UPNPState state)
setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::setStatus(Status status)$/;"	f	class:ControlConnection	signature:(Status status)
setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  void setStatus(Status status);$/;"	p	class:ControlConnection	access:private	signature:(Status status)
setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::setStatus(const QString &status)$/;"	f	class:ReplyLine	signature:(const QString &status)
setStatus	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  void setStatus(const QString &status);$/;"	p	class:ReplyLine	access:public	signature:(const QString &status)
setStatus	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.cpp	/^UpdateProgressDialog::setStatus(UpdateProgressDialog::Status status)$/;"	f	class:UpdateProgressDialog	signature:(UpdateProgressDialog::Status status)
setStatus	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  void setStatus(UpdateProgressDialog::Status status);$/;"	p	class:UpdateProgressDialog	access:public	signature:(UpdateProgressDialog::Status status)
setStyle	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::setStyle(QString styleKey)$/;"	f	class:Vidalia	signature:(QString styleKey)
setStyle	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool setStyle(QString styleKey = QString());$/;"	p	class:Vidalia	access:public	signature:(QString styleKey = QString())
setTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::setTab(VidaliaTab *tab)$/;"	f	class:VAttachButton	signature:(VidaliaTab *tab)
setTab	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void setTab(VidaliaTab *tab);$/;"	p	class:VAttachButton	access:public	signature:(VidaliaTab *tab)
setTabButton	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::setTabButton(int pos, QTabBar::ButtonPosition butpos, QWidget *w)$/;"	f	class:VTabWidget	signature:(int pos, QTabBar::ButtonPosition butpos, QWidget *w)
setTabButton	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void setTabButton(int pos, QTabBar::ButtonPosition butpos, QWidget *w);$/;"	p	class:VTabWidget	access:public	signature:(int pos, QTabBar::ButtonPosition butpos, QWidget *w)
setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::setTimestamp(const QDateTime &timestamp)$/;"	f	class:LogTreeItem	signature:(const QDateTime &timestamp)
setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  void setTimestamp(const QDateTime &timestamp);$/;"	p	class:LogTreeItem	access:public	signature:(const QDateTime &timestamp)
setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setTimestamp(const QDateTime &timestamp)$/;"	f	class:StatusEventItem	signature:(const QDateTime &timestamp)
setTimestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setTimestamp(const QDateTime &timestamp);$/;"	p	class:StatusEventItem	access:public	signature:(const QDateTime &timestamp)
setTitle	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  void setTitle(const QString &title) { _title = title; }$/;"	f	class:VidaliaTab	access:public	signature:(const QString &title)
setTitle	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setTitle(const QString &title)$/;"	f	class:StatusEventItem	signature:(const QString &title)
setTitle	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setTitle(const QString &title);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &title)
setToolTip	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::setToolTip(const QString &toolTip)$/;"	f	class:StatusEventItem	signature:(const QString &toolTip)
setToolTip	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  void setToolTip(const QString &toolTip);$/;"	p	class:StatusEventItem	access:public	signature:(const QString &toolTip)
setToolTips	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::setToolTips()$/;"	f	class:MessageLog	signature:()
setToolTips	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  void setToolTips();$/;"	p	class:MessageLog	access:private	signature:()
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QPixmap &icon)$/;"	f	class:StatusTab	signature:(const QPixmap &icon)
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QPixmap &icon, const QString &text)$/;"	f	class:StatusTab	signature:(const QPixmap &icon, const QString &text)
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatus(const QString &text)$/;"	f	class:StatusTab	signature:(const QString &text)
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QPixmap &icon);$/;"	p	class:StatusTab	access:public	signature:(const QPixmap &icon)
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QPixmap &icon, const QString &text);$/;"	p	class:StatusTab	access:public	signature:(const QPixmap &icon, const QString &text)
setTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatus(const QString &text);$/;"	p	class:StatusTab	access:public	signature:(const QString &text)
setTorStatusVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::setTorStatusVisible(bool visible)$/;"	f	class:StatusTab	signature:(bool visible)
setTorStatusVisible	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void setTorStatusVisible(bool visible);$/;"	p	class:StatusTab	access:public	signature:(bool visible)
setTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  void setTorVersion(const QString torVersion) { _torVersion = torVersion; }$/;"	f	class:ProtocolInfo	access:public	signature:(const QString torVersion)
setTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setTorrc(const QString &torrc)$/;"	f	class:TorSettings	signature:(const QString &torrc)
setTorrc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setTorrc(const QString &torrc);$/;"	p	class:TorSettings	access:public	signature:(const QString &torrc)
setTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setTrayIcon(const QString &iconFile)$/;"	f	class:MainWindow	signature:(const QString &iconFile)
setTrayIcon	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void setTrayIcon(const QString &iconFile);$/;"	p	class:MainWindow	access:private	signature:(const QString &iconFile)
setUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::setUpnpEnabled(bool enabled)$/;"	f	class:ServerSettings	signature:(bool enabled)
setUpnpEnabled	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  void setUpnpEnabled(bool enabled);$/;"	p	class:ServerSettings	access:public	signature:(bool enabled)
setUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.cpp	/^NetworkSettings::setUseBridges(bool useBridges)$/;"	f	class:NetworkSettings	signature:(bool useBridges)
setUseBridges	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkSettings.h	/^  void setUseBridges(bool useBridges);$/;"	p	class:NetworkSettings	access:public	signature:(bool useBridges)
setUseLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.cpp	/^GeoIpResolver::setUseLocalDatabase(bool useLocalDatabase)$/;"	f	class:GeoIpResolver	signature:(bool useLocalDatabase)
setUseLocalDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpResolver.h	/^  void setUseLocalDatabase(bool useLocalDatabase);$/;"	p	class:GeoIpResolver	access:public	signature:(bool useLocalDatabase)
setUseLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::setUseLocalGeoIpDatabase(bool enabled)$/;"	f	class:VidaliaSettings	signature:(bool enabled)
setUseLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  void setUseLocalGeoIpDatabase(bool enabled);$/;"	p	class:VidaliaSettings	access:public	signature:(bool enabled)
setUseRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setUseRandomPassword(bool useRandomPassword)$/;"	f	class:TorSettings	signature:(bool useRandomPassword)
setUseRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setUseRandomPassword(bool useRandomPassword);$/;"	p	class:TorSettings	access:public	signature:(bool useRandomPassword)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setValue(const QString &key, const QVariant &value)$/;"	f	class:AbstractTorSettings	signature:(const QString &key, const QVariant &value)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void setValue(const QString &key, const QVariant &value);$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key, const QVariant &value)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setValue(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual void setValue(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:public	signature:(const QString &key, const QVariant &val)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::setValue(const QString &key, const QString &value, const QString &comment)$/;"	f	class:Torrc	signature:(const QString &key, const QString &value, const QString &comment)
setValue	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  void setValue(const QString &key, const QString &value, const QString &comment = "");$/;"	p	class:Torrc	access:public	signature:(const QString &key, const QString &value, const QString &comment = ”)
setVersion	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::setVersion(const QString &version)$/;"	f	class:PackageInfo	signature:(const QString &version)
setVersion	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  void setVersion(const QString &version);$/;"	p	class:PackageInfo	access:public	signature:(const QString &version)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.cpp	/^ControlPasswordInputDialog::setVisible(bool visible)$/;"	f	class:ControlPasswordInputDialog	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^  virtual void setVisible(bool visible);$/;"	p	class:ControlPasswordInputDialog	access:protected	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::setVisible(bool visible)$/;"	f	class:MainWindow	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  virtual void setVisible(bool visible);$/;"	p	class:MainWindow	access:public	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::setVisible(bool visible)$/;"	f	class:VidaliaWindow	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void setVisible(bool visible);$/;"	p	class:VidaliaWindow	access:public	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::setVisible(bool visible)$/;"	f	class:UPNPTestDialog	signature:(bool visible)
setVisible	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void setVisible(bool visible);$/;"	p	class:UPNPTestDialog	access:protected	signature:(bool visible)
setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::setVolatileValue(const QString &key, const QVariant &value)$/;"	f	class:AbstractTorSettings	signature:(const QString &key, const QVariant &value)
setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual void setVolatileValue(const QString &key, const QVariant &value);$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key, const QVariant &value)
setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::setVolatileValue(const QString &key, const QVariant &val)$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &val)
setVolatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual void setVolatileValue(const QString &key, const QVariant &val);$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &val)
setWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::setWarnPlaintextPorts(const QList<quint16> &ports)$/;"	f	class:TorSettings	signature:(const QList<quint16> &ports)
setWarnPlaintextPorts	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  void setWarnPlaintextPorts(const QList<quint16> &ports);$/;"	p	class:TorSettings	access:public	signature:(const QList<quint16> &ports)
set_build_version	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_build_version(const QString &version)$/;"	f	namespace:CrashReporter	signature:(const QString &version)
set_build_version	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_build_version(const QString &version);$/;"	p	namespace:CrashReporter	signature:(const QString &version)
set_crash_reporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_crash_reporter(const QString &crashReporter)$/;"	f	namespace:CrashReporter	signature:(const QString &crashReporter)
set_crash_reporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_crash_reporter(const QString &crashReporter);$/;"	p	namespace:CrashReporter	signature:(const QString &crashReporter)
set_restart_options	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^set_restart_options(const QString &executable, const QStringList &arguments)$/;"	f	namespace:CrashReporter	signature:(const QString &executable, const QStringList &arguments)
set_restart_options	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.h	/^  bool set_restart_options(const QString &executable,$/;"	p	namespace:CrashReporter	signature:(const QString &executable, const QStringList &arguments)
settingsFile	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::settingsFile()$/;"	f	class:VSettings	signature:()
settingsFile	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static QString settingsFile();$/;"	p	class:VSettings	access:public	signature:()
settingsFileExists	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::settingsFileExists()$/;"	f	class:VSettings	signature:()
settingsFileExists	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  static bool settingsFileExists();$/;"	p	class:VSettings	access:public	signature:()
setupGeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::setupGeoIpResolver()$/;"	f	class:NetViewer	signature:()
setupGeoIpResolver	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void setupGeoIpResolver();$/;"	p	class:NetViewer	access:private	signature:()
setup_crash_reporter	/Users/chiiph/Code/vidalia/src/vidalia/main.cpp	/^setup_crash_reporter()$/;"	f	signature:()
severe	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/log.html	/^The possible message severities, from most severe to least severe, are:$/;"	v
severe	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/log.html	/^The possible message severities, from most severe to least severe, are:$/;"	v
severity	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  tc::Severity severity() const { return _severity; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::severity() const$/;"	f	class:LogEvent	signature:() const
severity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  Severity severity() const;$/;"	p	class:LogEvent	access:public	signature:() const
severity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::severity() const$/;"	f	class:LogTreeItem	signature:() const
severity	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  tc::Severity severity() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
severityFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^severityFromString(const QString &str)$/;"	f	namespace:tc	signature:(const QString &str)
severityFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  Severity severityFromString(const QString &str);$/;"	p	namespace:tc	signature:(const QString &str)
severityToString	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::severityToString(Severity s)$/;"	f	class:LogEvent	signature:(Severity s)
severityToString	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  static QString severityToString(Severity severity);$/;"	p	class:LogEvent	access:public	signature:(Severity severity)
severityToString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::severityToString(tc::Severity severity)$/;"	f	class:LogTreeItem	signature:(tc::Severity severity)
severityToString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  static QString severityToString(tc::Severity severity);$/;"	p	class:LogTreeItem	access:public	signature:(tc::Severity severity)
shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::shortDescription(const QString &lang) const$/;"	f	class:PackageInfo	signature:(const QString &lang) const
shortDescription	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString shortDescription(const QString &lang) const;$/;"	p	class:PackageInfo	access:public	signature:(const QString &lang) const
shouldCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::shouldCheckForUpdates(const QDateTime &lastCheckedAt)$/;"	f	class:UpdateProcess	signature:(const QDateTime &lastCheckedAt)
shouldCheckForUpdates	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static bool shouldCheckForUpdates(const QDateTime &lastCheckedAt);$/;"	p	class:UpdateProcess	access:public	signature:(const QDateTime &lastCheckedAt)
shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::shouldContinue(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
shouldContinue	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool shouldContinue(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
showAboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showAboutDialog()$/;"	f	class:MainWindow	signature:()
showAboutDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showAboutDialog();$/;"	p	class:MainWindow	access:private	signature:()
showBandwidthTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showBandwidthTab()$/;"	f	class:MainWindow	signature:()
showBandwidthTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showBandwidthTab();$/;"	p	class:MainWindow	access:private	signature:()
showConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showConfigDialog(ConfigDialog::Page page)$/;"	f	class:MainWindow	signature:(ConfigDialog::Page page)
showConfigDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showConfigDialog(ConfigDialog::Page page = ConfigDialog::General);$/;"	p	class:MainWindow	access:private	signature:(ConfigDialog::Page page = ConfigDialog::General)
showCrashReporter	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static bool showCrashReporter = false;$/;"	m	namespace:CrashReporter	file:
showDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showDebugDialog()$/;"	f	class:MainWindow	signature:()
showDebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showDebugDialog();$/;"	p	class:MainWindow	access:private	signature:()
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.cpp	/^UpdatesAvailableDialog::showEvent(QShowEvent *e)$/;"	f	class:UpdatesAvailableDialog	signature:(QShowEvent *e)
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  virtual void showEvent(QShowEvent *e);$/;"	p	class:UpdatesAvailableDialog	access:protected	signature:(QShowEvent *e)
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::showEvent(QShowEvent *e)$/;"	f	class:BridgeUsageDialog	signature:(QShowEvent *e)
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  void showEvent(QShowEvent *e);$/;"	p	class:BridgeUsageDialog	access:protected	signature:(QShowEvent *e)
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::showEvent(QShowEvent *event)$/;"	f	class:LogTreeWidget	signature:(QShowEvent *event)
showEvent	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void showEvent(QShowEvent *event);$/;"	p	class:LogTreeWidget	access:protected	signature:(QShowEvent *event)
showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showHelpDialog()$/;"	f	class:MainWindow	signature:()
showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showHelpDialog(const QString &topic)$/;"	f	class:MainWindow	signature:(const QString &topic)
showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showHelpDialog();$/;"	p	class:MainWindow	access:private	signature:()
showHelpDialog	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showHelpDialog(const QString &topic);$/;"	p	class:MainWindow	access:private	signature:(const QString &topic)
showMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::showMainWindowAtStart()$/;"	f	class:VidaliaSettings	signature:()
showMainWindowAtStart	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool showMainWindowAtStart();$/;"	p	class:VidaliaSettings	access:public	signature:()
showMessageLogTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showMessageLogTab()$/;"	f	class:MainWindow	signature:()
showMessageLogTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showMessageLogTab();$/;"	p	class:MainWindow	access:private	signature:()
showNetViewerTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showNetViewerTab()$/;"	f	class:MainWindow	signature:()
showNetViewerTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showNetViewerTab();$/;"	p	class:MainWindow	access:private	signature:()
showPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.cpp	/^ConfigPageStack::showPage(QAction *pageAction)$/;"	f	class:ConfigPageStack	signature:(QAction *pageAction)
showPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPageStack.h	/^  void showPage(QAction *pageAction);$/;"	p	class:ConfigPageStack	access:public	signature:(QAction *pageAction)
showSettingsFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::showSettingsFrame(bool show)$/;"	f	class:BandwidthGraph	signature:(bool show)
showSettingsFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void showSettingsFrame(bool show);$/;"	p	class:BandwidthGraph	access:private	signature:(bool show)
showStatusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::showStatusTab()$/;"	f	class:MainWindow	signature:()
showStatusTab	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void showStatusTab();$/;"	p	class:MainWindow	access:private	signature:()
showTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::showTopic(QString topic)$/;"	f	class:HelpBrowser	signature:(QString topic)
showTopic	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void showTopic(QString topic);$/;"	p	class:HelpBrowser	access:private	signature:(QString topic)
showUsage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::showUsage()$/;"	f	class:Vidalia	signature:()
showUsage	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static bool showUsage();$/;"	p	class:Vidalia	access:public	signature:()
showUsageMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::showUsageMessageBox()$/;"	f	class:Vidalia	signature:()
showUsageMessageBox	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static void showUsageMessageBox();$/;"	p	class:Vidalia	access:public	signature:()
showWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  virtual void showWindow() { QMainWindow::show(); }$/;"	f	class:VidaliaWindow	access:public	signature:()
showWindow	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.cpp	/^ConfigDialog::showWindow(Page page)$/;"	f	class:ConfigDialog	signature:(Page page)
showWindow	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  void showWindow(Page page = General);$/;"	p	class:ConfigDialog	access:public	signature:(Page page = General)
showWindow	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.cpp	/^HelpBrowser::showWindow(QString topic)$/;"	f	class:HelpBrowser	signature:(QString topic)
showWindow	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  void showWindow(QString topic = QString());$/;"	p	class:HelpBrowser	access:public	signature:(QString topic = QString())
sighup	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::sighup()$/;"	f	class:MainWindow	signature:()
sighup	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void sighup();$/;"	p	class:MainWindow	access:private	signature:()
signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::signal(TorSignal::Signal sig, QString *errmsg)$/;"	f	class:TorControl	signature:(TorSignal::Signal sig, QString *errmsg)
signal	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool signal(TorSignal::Signal sig, QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(TorSignal::Signal sig, QString *errmsg = 0)
signal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant signal(TorSignal::Signal sig);$/;"	p	class:TorControlPrototype	access:public	signature:(TorSignal::Signal sig)
signal_handler	/Users/chiiph/Code/vidalia/src/tests/testMain.cpp	/^signal_handler(int signal)$/;"	f	signature:(int signal)
signal_handler	/Users/chiiph/Code/vidalia/src/vidalia/main.cpp	/^signal_handler(int signal)$/;"	f	signature:(int signal)
sijaintiin	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/log.html	/^    ja siirtym√§ll√§ sijaintiin, johon haluaa lokitiedoston.$/;"	v
simpleUPnPcommand	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^int simpleUPnPcommand(int s, const char * url, const char * service,$/;"	f	signature:(int s, const char * url, const char * service, const char * action, struct UPNParg * args, char * buffer, int * bufsize)
simpleUPnPcommand	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^int simpleUPnPcommand(int, const char *, const char *,$/;"	p	signature:(int, const char *, const char *, const char *, struct UPNParg *, char *, int *)
sipuliksi	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^    Vidalian teht√§v√§palkin kuvake muuttuu sipulista, jossa on punainen X vihre√§ksi sipuliksi, kun on k√§ynnistynyt Tor.$/;"	v
sipuliksi	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^Jos Tor pys√§htyy yll√§tt√§en, Vidalia muuttaa kuvakkeensa mustaksi sipuliksi, jossa on punainen X ja n√§ytt√§√§ virheilmoituksen ilmoittaakseen mik√§ meni pieleen. <a href="log.html">Tapahtumalokista <\/a>voi n√§hd√§ lis√§tietoja ongelmista, joita Tor-ohjelmalla oli ennen pys√§htymist√§.$/;"	v
sizeHint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.cpp	/^StatusEventItemDelegate::sizeHint(const QStyleOptionViewItem &option,$/;"	f	class:StatusEventItemDelegate	signature:(const QStyleOptionViewItem &option, const QModelIndex &index) const
sizeHint	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItemDelegate.h	/^  virtual QSize sizeHint(const QStyleOptionViewItem &option,$/;"	p	class:StatusEventItemDelegate	access:public	signature:(const QStyleOptionViewItem &option, const QModelIndex &index) const
skipVersionCheck	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::skipVersionCheck() const$/;"	f	class:VidaliaSettings	signature:() const
skipVersionCheck	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool skipVersionCheck() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
skip_po_header	/Users/chiiph/Code/vidalia/src/tools/po2nsh/po2nsh.cpp	/^skip_po_header(QTextStream *po)$/;"	f	signature:(QTextStream *po)
skip_po_header	/Users/chiiph/Code/vidalia/src/tools/po2ts/po2ts.cpp	/^skip_po_header(QTextStream *po)$/;"	f	signature:(QTextStream *po)
skip_po_header	/Users/chiiph/Code/vidalia/src/tools/po2wxl/po2wxl.cpp	/^skip_po_header(QTextStream *po)$/;"	f	signature:(QTextStream *po)
skip_pot_header	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^skip_pot_header(QTextStream *pot)$/;"	f	signature:(QTextStream *pot)
sleep	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::sleep(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
sleep	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue sleep(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
snprintf	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define snprintf /;"	d	file:
snprintf	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.c	/^#define snprintf /;"	d	file:
snprintf	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define snprintf /;"	d	file:
snprintf	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define snprintf /;"	d	file:
soapPostSubmit	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.c	/^int soapPostSubmit(int fd,$/;"	f	signature:(int fd, const char * url, const char * host, unsigned short port, const char * action, const char * body)
soapPostSubmit	/Users/chiiph/Code/vidalia/src/miniupnpc/minisoap.h	/^int soapPostSubmit(int, const char *, const char *, unsigned short,$/;"	p	signature:(int, const char *, const char *, unsigned short, const char *, const char *)
sockaddr_un	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^struct sockaddr_un {$/;"	s	file:
sockaddr_un::sun_family	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^  uint16_t sun_family;$/;"	m	struct:sockaddr_un	file:	access:public
sockaddr_un::sun_path	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^  char     sun_path[UNIX_PATH_LEN];$/;"	m	struct:sockaddr_un	file:	access:public
socket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  QIODevice * socket() const$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:() const
socketError	/Users/chiiph/Code/vidalia/src/common/TorSocket.h	/^  void socketError(QString errmsg);$/;"	p	class:TorSocket	access:public	signature:(QString errmsg)
socket_test_connect	/Users/chiiph/Code/vidalia/src/common/net.cpp	/^socket_test_connect(QString server, int timeout)$/;"	f	signature:(QString server, int timeout)
socket_test_connect	/Users/chiiph/Code/vidalia/src/common/net.h	/^bool socket_test_connect(QString server, int timeout = 250);$/;"	p	signature:(QString server, int timeout = 250)
socklen_t	/Users/chiiph/Code/vidalia/src/miniupnpc/connecthostport.c	/^#define socklen_t /;"	d	file:
socklen_t	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define socklen_t /;"	d	file:
socklen_t	/Users/chiiph/Code/vidalia/src/miniupnpc/miniwget.c	/^#define socklen_t /;"	d	file:
socksError	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:TorControl	access:public	signature:(tc::SocksError type, const QString &destination)
socksError	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void socksError(tc::SocksError error, const QString &destination);$/;"	p	class:TorEvents	access:public	signature:(tc::SocksError error, const QString &destination)
socksError	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.cpp	/^StatusEventWidget::socksError(tc::SocksError type, const QString &destination)$/;"	f	class:StatusEventWidget	signature:(tc::SocksError type, const QString &destination)
socksError	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventWidget.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:StatusEventWidget	access:private	signature:(tc::SocksError type, const QString &destination)
socksError	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void socksError(tc::SocksError type, const QString &destination);$/;"	p	class:TorControlPrototype	access:public	signature:(tc::SocksError type, const QString &destination)
software	/Users/chiiph/Code/vidalia/src/vidalia/res/license.html	/^This program is free software; you can redistribute it and\/or modify it$/;"	v
splice	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^  QDomElement  splice;$/;"	m	struct:s_SpliceData	file:	access:public
splicefunc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^splicefunc(void *cbdata,$/;"	f	signature:(void *cbdata, QDomElement e)
splitAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::splitAddress(const QString &address)$/;"	f	class:TorEvents	signature:(const QString &address)
splitAddress	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^   static QPair<QHostAddress,quint16> splitAddress(const QString &address);$/;"	p	class:TorEvents	access:private	signature:(const QString &address)
st	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^	char * st;$/;"	m	struct:UPNPDev	access:public
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::start(const QString &tor, const QStringList &args)$/;"	f	class:TorControl	signature:(const QString &tor, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void start(const QString &tor, const QStringList &args);$/;"	p	class:TorControl	access:public	signature:(const QString &tor, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::start(const QString &app, const QStringList &args)$/;"	f	class:TorProcess	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void start(const QString &app, const QStringList &args);$/;"	p	class:TorProcess	access:public	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::start()$/;"	f	class:TorService	signature:()
start	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void start();$/;"	p	class:TorService	access:public	signature:()
start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::start(const QString &app, const QString &args)$/;"	f	class:HelperProcess	signature:(const QString &app, const QString &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::start(const QString &app, const QStringList &args)$/;"	f	class:HelperProcess	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void start(const QString &app, const QString &args);$/;"	p	class:HelperProcess	access:public	signature:(const QString &app, const QString &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void start(const QString &app, const QStringList &args);$/;"	p	class:HelperProcess	access:public	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::start()$/;"	f	class:MainWindow	signature:()
start	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void start();$/;"	p	class:MainWindow	access:private	signature:()
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::start()$/;"	f	class:PluginWrapper	signature:()
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void start();$/;"	p	class:PluginWrapper	access:public	signature:()
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::start(const QString &app, const QString &args)$/;"	f	class:HelperProcessPrototype	signature:(const QString &app, const QString &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::start(const QString &app, const QStringList &args)$/;"	f	class:HelperProcessPrototype	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void start(const QString &app, const QString &args);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QString &app, const QString &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void start(const QString &app, const QStringList &args);$/;"	p	class:HelperProcessPrototype	access:public	signature:(const QString &app, const QStringList &args)
start	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE void start(const QString &tor, const QStringList &args);$/;"	p	class:TorControlPrototype	access:public	signature:(const QString &tor, const QStringList &args)
startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void startFailed(QString errmsg);$/;"	p	class:TorControl	access:public	signature:(QString errmsg)
startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  void startFailed(const QString &errorMessage);$/;"	p	class:TorProcess	access:public	signature:(const QString &errorMessage)
startFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void startFailed(QString error);$/;"	p	class:TorService	access:public	signature:(QString error)
startFailed	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void startFailed(const QString &errorMessage);$/;"	p	class:HelperProcess	access:public	signature:(const QString &errorMessage)
startFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::startFailed(QString errmsg)$/;"	f	class:MainWindow	signature:(QString errmsg)
startFailed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void startFailed(QString errmsg);$/;"	p	class:MainWindow	access:private	signature:(QString errmsg)
startFailed	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void startFailed(QString errmsg);$/;"	p	class:TorControlPrototype	access:public	signature:(QString errmsg)
startTest	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::startTest()$/;"	f	class:UPNPTestDialog	signature:()
startTest	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void startTest();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
started	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void started();$/;"	p	class:TorControl	access:public	signature:()
started	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  void started();$/;"	p	class:TorService	access:public	signature:()
started	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void started();$/;"	p	class:TorControlPrototype	access:public	signature:()
starteltfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*starteltfunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
startet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Dies ist die ausf&uuml;hrbare Tor-Datei, die Vidalia startet, wenn Sie$/;"	v
startupTime	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^static time_t startupTime = 0;$/;"	m	namespace:CrashReporter	file:
state	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::state()$/;"	f	class:HelperProcessPrototype	signature:()
state	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE QProcess::ProcessState state();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
stateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  void stateChanged(UPNPControl::UPNPState state);$/;"	p	class:UPNPControl	access:public	signature:(UPNPControl::UPNPState state)
status	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  Status status() const { return _status; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
status	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  Status status() const { return _status; }$/;"	f	class:Circuit	access:public	signature:() const
status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::status()$/;"	f	class:ControlConnection	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  Status status();$/;"	p	class:ControlConnection	access:public	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.cpp	/^RouterDescriptor::status()$/;"	f	class:RouterDescriptor	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  QString status();$/;"	p	class:RouterDescriptor	access:public	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.cpp	/^SendCommandEvent::SendWaiter::status()$/;"	f	class:SendCommandEvent::SendWaiter	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^    SenderStatus status();$/;"	p	class:SendCommandEvent::SendWaiter	access:public	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  Status status() const { return _status; }$/;"	f	class:Stream	access:public	signature:() const
status	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::status()$/;"	f	class:TorService	signature:()
status	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  DWORD status();$/;"	p	class:TorService	access:private	signature:()
statusFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.cpp	/^BootstrapStatus::statusFromString(const QString &str)$/;"	f	class:BootstrapStatus	signature:(const QString &str)
statusFromString	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  static Status statusFromString(const QString &tag);$/;"	p	class:BootstrapStatus	access:public	signature:(const QString &tag)
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::statusString() const$/;"	f	class:Circuit	signature:() const
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  QString statusString() const;$/;"	p	class:Circuit	access:public	signature:() const
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::statusString(Status status)$/;"	f	class:ControlConnection	signature:(Status status)
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  QString statusString(Status status);$/;"	p	class:ControlConnection	access:private	signature:(Status status)
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::statusString() const$/;"	f	class:Stream	signature:() const
statusString	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString statusString() const;$/;"	p	class:Stream	access:public	signature:() const
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::stop(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool stop(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::stop(QString *errmsg)$/;"	f	class:TorProcess	signature:(QString *errmsg)
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  bool stop(QString *errmsg = 0);$/;"	p	class:TorProcess	access:public	signature:(QString *errmsg = 0)
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::stop()$/;"	f	class:TorService	signature:()
stop	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  bool stop();$/;"	p	class:TorService	access:public	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::stop()$/;"	f	class:MainWindow	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool stop();$/;"	p	class:MainWindow	access:private	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::stop()$/;"	f	class:UPNPControlThread	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void stop();$/;"	p	class:UPNPControlThread	access:public	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::stop()$/;"	f	class:PluginWrapper	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    void stop();$/;"	p	class:PluginWrapper	access:public	signature:()
stop	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  Q_INVOKABLE QVariant stop();$/;"	p	class:TorControlPrototype	access:public	signature:()
stopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void stopped();$/;"	p	class:TorControl	access:public	signature:()
stopped	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void stopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControl	access:public	signature:(int exitCode, QProcess::ExitStatus exitStatus)
stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::stopped(int exitCode, QProcess::ExitStatus exitStatus)$/;"	f	class:MainWindow	signature:(int exitCode, QProcess::ExitStatus exitStatus)
stopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void stopped(int errorCode, QProcess::ExitStatus exitStatus);$/;"	p	class:MainWindow	access:private	signature:(int errorCode, QProcess::ExitStatus exitStatus)
stopped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void stopped();$/;"	p	class:TorControlPrototype	access:public	signature:()
stopped	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void stopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:TorControlPrototype	access:public	signature:(int exitCode, QProcess::ExitStatus exitStatus)
stream	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  } *stream;$/;"	m	class:Log::LogMessage	typeref:struct:Log::LogMessage::Stream	access:public
stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    } *stream;$/;"	m	class:tc::DebugMessage	typeref:struct:tc::DebugMessage::Stream	access:private
stream	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  Stream stream() const { return _stream; }$/;"	f	class:StreamItem	access:public	signature:() const
streamStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorControl	access:public	signature:(const Stream &stream)
streamStatusChanged	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorEvents	access:public	signature:(const Stream &stream)
streamStatusChanged	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/TorControlPrototype.h	/^  void streamStatusChanged(const Stream &stream);$/;"	p	class:TorControlPrototype	access:public	signature:(const Stream &stream)
streams	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::streams() const$/;"	f	class:CircuitItem	signature:() const
streams	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  QList<StreamItem *> streams() const;$/;"	p	class:CircuitItem	access:public	signature:() const
stringToLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::stringToLogLevel(QString str)$/;"	f	class:Log	signature:(QString str)
stringToLogLevel	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  static LogLevel stringToLogLevel(QString str);$/;"	p	class:Log	access:public	signature:(QString str)
string_escape	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_escape(const QString &str)$/;"	f	signature:(const QString &str)
string_escape	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_escape(const QString &str);$/;"	p	signature:(const QString &str)
string_format_arguments	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_format_arguments(const QStringList &args)$/;"	f	signature:(const QStringList &args)
string_format_arguments	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_format_arguments(const QStringList &args);$/;"	p	signature:(const QStringList &args)
string_format_bandwidth	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_format_bandwidth(quint64 bytes)$/;"	f	signature:(quint64 bytes)
string_format_bandwidth	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_format_bandwidth(quint64 bytes);$/;"	p	signature:(quint64 bytes)
string_format_datetime	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_format_datetime(const QDateTime &date)$/;"	f	signature:(const QDateTime &date)
string_format_datetime	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_format_datetime(const QDateTime &date);$/;"	p	signature:(const QDateTime &date)
string_format_uptime	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_format_uptime(quint64 seconds)$/;"	f	signature:(quint64 seconds)
string_format_uptime	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_format_uptime(quint64 seconds);$/;"	p	signature:(quint64 seconds)
string_is_hex	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_is_hex(const QString &str)$/;"	f	signature:(const QString &str)
string_is_hex	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^bool string_is_hex(const QString &str);$/;"	p	signature:(const QString &str)
string_parse_arguments	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_parse_arguments(const QString &str, bool *ok)$/;"	f	signature:(const QString &str, bool *ok)
string_parse_arguments	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QStringList string_parse_arguments(const QString &str, bool *ok = 0);$/;"	p	signature:(const QString &str, bool *ok = 0)
string_parse_keyvals	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_parse_keyvals(const QString &str, bool *ok)$/;"	f	signature:(const QString &str, bool *ok)
string_parse_keyvals	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QHash<QString,QString> string_parse_keyvals(const QString &str, bool *ok = 0);$/;"	p	signature:(const QString &str, bool *ok = 0)
string_unescape	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_unescape(const QString &str, bool *ok)$/;"	f	signature:(const QString &str, bool *ok)
string_unescape	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_unescape(const QString &str, bool *ok = 0);$/;"	p	signature:(const QString &str, bool *ok = 0)
string_wrap	/Users/chiiph/Code/vidalia/src/common/stringutil.cpp	/^string_wrap(const QString &str, int width,$/;"	f	signature:(const QString &str, int width, const QString &sep, const QString &le)
string_wrap	/Users/chiiph/Code/vidalia/src/common/stringutil.h	/^QString string_wrap(const QString &str, int width,$/;"	p	signature:(const QString &str, int width, const QString &sep = QString(”), const QString &le = QString(”))
stripContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::stripContents(QString contents)$/;"	f	class:TorrcParser	signature:(QString contents)
stripContents	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QString stripContents(QString contents);$/;"	p	class:TorrcParser	access:private	signature:(QString contents)
strncasecmp	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^#define strncasecmp /;"	d	file:
strupnperror	/Users/chiiph/Code/vidalia/src/miniupnpc/upnperrors.c	/^const char * strupnperror(int err)$/;"	f	signature:(int err)
strupnperror	/Users/chiiph/Code/vidalia/src/miniupnpc/upnperrors.h	/^LIBSPEC const char * strupnperror(int err);$/;"	p	signature:(int err)
style	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString style() { return _style; }$/;"	f	class:Vidalia	access:public	signature:()
sun_family	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^  uint16_t sun_family;$/;"	m	struct:sockaddr_un	file:	access:public
sun_path	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^  char     sun_path[UNIX_PATH_LEN];$/;"	m	struct:sockaddr_un	file:	access:public
syntaxBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^QStringList DebugDialog::syntaxBuffer;$/;"	m	class:DebugDialog	file:
syntaxBuffer	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static QStringList syntaxBuffer;$/;"	m	class:DebugDialog	access:private
syntaxDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::syntaxDebug(const QString &msg)$/;"	f	class:DebugDialog	signature:(const QString &msg)
syntaxDebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    static void syntaxDebug(const QString &msg);$/;"	p	class:DebugDialog	access:public	signature:(const QString &msg)
systemEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::systemEnvironment()$/;"	f	class:HelperProcessPrototype	signature:()
systemEnvironment	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE QStringList systemEnvironment();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
szlig	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    abzuschlie&szlig;en.$/;"	v
szlig	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^		  au&szlig;erdem Ihre PGP- oder GPG-Schl&uuml;ssel-ID sowie$/;"	v
t	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fr/services.html	/^fonctionnalit√©, ou plut√¥t, ne pas nous bl√¢mez pas si quelque chose ne va$/;"	v
t88s82b2	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/cm.png	/^SY>` _G'd'!P!*Y*8t88s82b2;k;HÅHPâPFwFWéW^ì^YäYdöddôdeôehõhjùj0k\/Az@fòexój=/;"	v
takeOwnership	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::takeOwnership(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
takeOwnership	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool takeOwnership(QString *errmsg);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg)
tapahtumaloki	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos Vidalia ei onnistu pys√§ytt√§m√§√§n Tor-ohjelmaa, niin kannattaa tarkistaa <a href="log.html">tapahtumaloki<\/a>, jos Tor-ohjelma on kirjannut lopettaessaan virhetietoja.$/;"	v
tapahtumaloki	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos tuosta ei ollut tarpeeksi apua, niin kannattaa tarkistaa <a href="log.html">tapahtumaloki<\/a>, sill√§ Tor-ohjelma on voinut kirjata tietoja k√§ynnistymisess√§ kohdatuista virheist√§√§n.$/;"	v
target	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString target() const { return (_address + ":" + QString::number(_port)); }$/;"	f	class:Stream	access:public	signature:() const
targetAddress	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  QString targetAddress() const { return _address; }$/;"	f	class:Stream	access:public	signature:() const
targetPort	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  quint16 targetPort() const { return _port; }$/;"	f	class:Stream	access:public	signature:() const
tc	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^namespace tc {$/;"	n	file:
tc	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^namespace tc {$/;"	n
tc	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  TorControl *tc;$/;"	m	class:TorrcDialog	access:private
tc::BadSocksHostnameError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    BadSocksHostnameError \/**< Application provided an invalid hostname. *\/$/;"	e	enum:tc::SocksError
tc::ConnectionDone	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionDone,$/;"	e	enum:tc::ConnectionStatusReason
tc::ConnectionIoError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionIoError,$/;"	e	enum:tc::ConnectionStatusReason
tc::ConnectionRefused	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionRefused,$/;"	e	enum:tc::ConnectionStatusReason
tc::ConnectionReset	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionReset,$/;"	e	enum:tc::ConnectionStatusReason
tc::ConnectionStatusReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum ConnectionStatusReason {$/;"	g	namespace:tc
tc::ConnectionTimeout	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ConnectionTimeout,$/;"	e	enum:tc::ConnectionStatusReason
tc::DangerousSocksTypeError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    DangerousSocksTypeError, \/**< The SOCKS type uses only IP addresses. *\/$/;"	e	enum:tc::SocksError
tc::DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  class DebugMessage {$/;"	c	namespace:tc
tc::DebugMessage::DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage(QtMsgType t, const QString &fmt)$/;"	f	class:tc::DebugMessage	access:public	signature:(QtMsgType t, const QString &fmt)
tc::DebugMessage::DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage(const DebugMessage &o)$/;"	f	class:tc::DebugMessage	access:public	signature:(const DebugMessage &o)
tc::DebugMessage::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    struct Stream {$/;"	s	class:tc::DebugMessage	access:private
tc::DebugMessage::Stream::Stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      Stream(QtMsgType t, const QString &fmt)$/;"	f	struct:tc::DebugMessage::Stream	access:public	signature:(QtMsgType t, const QString &fmt)
tc::DebugMessage::Stream::buf	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      QString buf;    \/**< Log message buffer. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
tc::DebugMessage::Stream::ref	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      int ref;        \/**< Reference counter. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
tc::DebugMessage::Stream::type	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      QtMsgType type; \/**< DebugMessage severity level. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
tc::DebugMessage::arg	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage arg(const QString &a)$/;"	f	class:tc::DebugMessage	access:public	signature:(const QString &a)
tc::DebugMessage::arg	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    inline DebugMessage arg(int a)$/;"	f	class:tc::DebugMessage	access:public	signature:(int a)
tc::DebugMessage::stream	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    } *stream;$/;"	m	class:tc::DebugMessage	typeref:struct:tc::DebugMessage::Stream	access:private
tc::DebugMessage::~DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    virtual ~DebugMessage() {$/;"	f	class:tc::DebugMessage	access:public	signature:()
tc::DebugSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    DebugSeverity  = (1u<<4), \/**< Hyper-verbose events used for debugging. *\/$/;"	e	enum:tc::Severity
tc::ErrorSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ErrorSeverity  = (1u<<0)  \/**< A critical event. *\/$/;"	e	enum:tc::Severity
tc::IdentityMismatch	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    IdentityMismatch,$/;"	e	enum:tc::ConnectionStatusReason
tc::InfoSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    InfoSeverity   = (1u<<3), \/**< Verbose events that can occur frequently. *\/$/;"	e	enum:tc::Severity
tc::MiscellaneousReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    MiscellaneousReason,$/;"	e	enum:tc::ConnectionStatusReason
tc::NewTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NewTorVersion$/;"	e	enum:tc::TorVersionStatus
tc::NoRouteToHost	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NoRouteToHost,$/;"	e	enum:tc::ConnectionStatusReason
tc::NoticeSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    NoticeSeverity = (1u<<2), \/**< A not-so-bad event. *\/$/;"	e	enum:tc::Severity
tc::ObsoleteTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ObsoleteTorVersion,$/;"	e	enum:tc::TorVersionStatus
tc::ResourceLimitReached	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    ResourceLimitReached$/;"	e	enum:tc::ConnectionStatusReason
tc::Severity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum Severity {$/;"	g	namespace:tc
tc::SocksError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum SocksError {$/;"	g	namespace:tc
tc::TorVersionStatus	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  enum TorVersionStatus {$/;"	g	namespace:tc
tc::UnknownSocksProtocolError	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnknownSocksProtocolError, \/**< Unknown SOCKS protocol type. *\/$/;"	e	enum:tc::SocksError
tc::UnrecognizedReason	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecognizedReason,$/;"	e	enum:tc::ConnectionStatusReason
tc::UnrecognizedSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecognizedSeverity = 0, \/**< An unrecognized severity value. *\/$/;"	e	enum:tc::Severity
tc::UnrecommendedTorVersion	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    UnrecommendedTorVersion,$/;"	e	enum:tc::TorVersionStatus
tc::WarnSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    WarnSeverity   = (1u<<1), \/**< An important, but non-fatal event. *\/$/;"	e	enum:tc::Severity
tc::connectionStatusReasonFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^connectionStatusReasonFromString(const QString &str)$/;"	f	namespace:tc	signature:(const QString &str)
tc::connectionStatusReasonFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  ConnectionStatusReason connectionStatusReasonFromString(const QString &str);$/;"	p	namespace:tc	signature:(const QString &str)
tc::debug	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^debug(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
tc::debug	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage debug(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
tc::error	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^error(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
tc::error	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage error(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
tc::fatal	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^fatal(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
tc::fatal	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage fatal(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
tc::severityFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^severityFromString(const QString &str)$/;"	f	namespace:tc	signature:(const QString &str)
tc::severityFromString	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  Severity severityFromString(const QString &str);$/;"	p	namespace:tc	signature:(const QString &str)
tc::warn	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^warn(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
tc::warn	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage warn(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
tcol	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^tcol(QString str)$/;"	f	signature:(QString str)
tcol	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString tcol(QString str);$/;"	p	signature:(QString str)
testBootstrapDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testBootstrapDone()$/;"	f	class:BootstrapTestSuite	signature:()
testBootstrapDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testBootstrapDone();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testConnectDirMirror	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testConnectDirMirror()$/;"	f	class:BootstrapTestSuite	signature:()
testConnectDirMirror	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testConnectDirMirror();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testConnectToEntryGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testConnectToEntryGuard()$/;"	f	class:BootstrapTestSuite	signature:()
testConnectToEntryGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testConnectToEntryGuard();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testCreateOneHopCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testCreateOneHopCircuit()$/;"	f	class:BootstrapTestSuite	signature:()
testCreateOneHopCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testCreateOneHopCircuit();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testDone	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testDone();$/;"	p	class:BootstrapTestCase	access:public	signature:()
testEstabilishCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testEstabilishCircuit()$/;"	f	class:BootstrapTestSuite	signature:()
testEstabilishCircuit	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testEstabilishCircuit();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::testFailed()$/;"	f	class:UPNPTestDialog	signature:()
testFailed	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void testFailed();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
testFinished	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::testFinished()$/;"	f	class:BootstrapTestCase	signature:()
testFinished	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testFinished();$/;"	p	class:BootstrapTestCase	access:private	signature:()
testHandshake	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testHandshake()$/;"	f	class:BootstrapTestSuite	signature:()
testHandshake	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testHandshake();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testHandshakeGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testHandshakeGuard()$/;"	f	class:BootstrapTestSuite	signature:()
testHandshakeGuard	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testHandshakeGuard();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testLoadingCerts	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingCerts()$/;"	f	class:BootstrapTestSuite	signature:()
testLoadingCerts	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingCerts();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testLoadingDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingDescriptors()$/;"	f	class:BootstrapTestSuite	signature:()
testLoadingDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingDescriptors();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testLoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testLoadingNetworkStatus()$/;"	f	class:BootstrapTestSuite	signature:()
testLoadingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testLoadingNetworkStatus();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::testMessage(tc::Severity severity, const QString &message) const$/;"	f	class:MessageLog	signature:(tc::Severity severity, const QString &message) const
testMessage	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  bool testMessage(tc::Severity severity, const QString& message) const;$/;"	p	class:MessageLog	access:private	signature:(tc::Severity severity, const QString& message) const
testRequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testRequestingNetworkStatus()$/;"	f	class:BootstrapTestSuite	signature:()
testRequestingNetworkStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testRequestingNetworkStatus();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testRequestringDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testRequestringDescriptors()$/;"	f	class:BootstrapTestSuite	signature:()
testRequestringDescriptors	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void testRequestringDescriptors();$/;"	p	class:BootstrapTestSuite	access:private	signature:()
testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestSuite::testStatus(BootstrapStatus::Status status)$/;"	f	class:BootstrapTestSuite	signature:(BootstrapStatus::Status status)
testStatus	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  bool testStatus(BootstrapStatus::Status status);$/;"	p	class:BootstrapTestSuite	access:private	signature:(BootstrapStatus::Status status)
testSuccessful	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::testSuccessful()$/;"	f	class:UPNPTestDialog	signature:()
testSuccessful	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void testSuccessful();$/;"	p	class:UPNPTestDialog	access:protected	signature:()
testUpnp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::testUpnp()$/;"	f	class:ServerPage	signature:()
testUpnp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void testUpnp();$/;"	p	class:ServerPage	access:private	signature:()
thead	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^thead(QString str)$/;"	f	signature:(QString str)
thead	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString thead(QString str);$/;"	p	signature:(QString str)
though	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/troubleshooting.html	/^happens in the background. There are three common situations, though, where$/;"	v
tietoa	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos Tor-ohjelma on ollut onnistuneesti k√§ynniss√§ hetken (pidemp√§√§n kuin hetken), niin <a href="log.html">tapahtumalokista<\/a> voi l√∂yty√§ tietoa, jos Tor-ohjelma on kirjannut tietoja kohdatuista virheist√§√§n ennen kuin lopetti yll√§tt√§en itsens√§. Sen kaltaiset virheet ovat korostettu joko punaisella tai keltaisella.$/;"	v
timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::timeout()$/;"	f	class:BootstrapTestCase	signature:()
timeout	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void timeout();$/;"	p	class:BootstrapTestCase	access:private	signature:()
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^void QtScriptShell_X::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QTimerEvent* arg__1)
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  void timerEvent(QTimerEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QTimerEvent* arg__1)
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^void QtScriptShell_X::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_X	signature:(QTimerEvent* arg__1)
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^void QtScriptShell_TorControl::timerEvent(QTimerEvent*  arg__1)$/;"	f	class:QtScriptShell_TorControl	signature:(QTimerEvent* arg__1)
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  void timerEvent(QTimerEvent* arg__1);$/;"	p	class:QtScriptShell_X	access:public	signature:(QTimerEvent* arg__1)
timerEvent	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    void timerEvent(QTimerEvent*  arg__1);$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:(QTimerEvent* arg__1)
timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::timestamp() const$/;"	f	class:LogTreeItem	signature:() const
timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QDateTime timestamp() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::timestamp() const$/;"	f	class:StatusEventItem	signature:() const
timestamp	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QDateTime timestamp() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
title	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigPage.h	/^  QString title() const { return _title; }$/;"	f	class:ConfigPage	access:public	signature:() const
title	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::title() const$/;"	f	class:StatusEventItem	signature:() const
title	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString title() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
tmp	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	struct IGDdatas_service tmp;$/;"	m	struct:IGDdatas	typeref:struct:IGDdatas::IGDdatas_service	access:public
toAction	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::toAction(QString action)$/;"	f	class:Policy	signature:(QString action)
toAction	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  static Action toAction(QString action);$/;"	p	class:Policy	access:public	signature:(QString action)
toAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::toAuthenticationMethod(const QString &authMethod) const$/;"	f	class:TorSettings	signature:(const QString &authMethod) const
toAuthenticationMethod	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  AuthenticationMethod toAuthenticationMethod(const QString &authMethod) const;$/;"	p	class:TorSettings	access:private	signature:(const QString &authMethod) const
toForeground	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.cpp	/^HelperProcess::toForeground()$/;"	f	class:HelperProcess	signature:()
toForeground	/Users/chiiph/Code/vidalia/src/vidalia/HelperProcess.h	/^  void toForeground();$/;"	p	class:HelperProcess	access:public	signature:()
toForeground	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.cpp	/^HelperProcessPrototype::toForeground()$/;"	f	class:HelperProcessPrototype	signature:()
toForeground	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/HelperProcessPrototype.h	/^    Q_INVOKABLE void toForeground();$/;"	p	class:HelperProcessPrototype	access:public	signature:()
toMapSpace	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::toMapSpace(float latitude, float longitude)$/;"	f	class:TorMapImageView	signature:(float latitude, float longitude)
toMapSpace	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  QPointF toMapSpace(float latitude, float longitude);$/;"	p	class:TorMapImageView	access:private	signature:(float latitude, float longitude)
toSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.cpp	/^LogEvent::toSeverity(QString strSeverity)$/;"	f	class:LogEvent	signature:(QString strSeverity)
toSeverity	/Users/chiiph/Code/vidalia/src/torcontrol/LogEvent.h	/^  static Severity toSeverity(QString strSeverity);$/;"	p	class:LogEvent	access:public	signature:(QString strSeverity)
toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.cpp	/^Circuit::toStatus(const QString &status)$/;"	f	class:Circuit	signature:(const QString &status)
toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Circuit.h	/^  static Status toStatus(const QString &strStatus);$/;"	p	class:Circuit	access:public	signature:(const QString &strStatus)
toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.cpp	/^Stream::toStatus(const QString &strStatus)$/;"	f	class:Stream	signature:(const QString &strStatus)
toStatus	/Users/chiiph/Code/vidalia/src/torcontrol/Stream.h	/^  static Status toStatus(const QString &strStatus);$/;"	p	class:Stream	access:public	signature:(const QString &strStatus)
toString	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::LogMessage::toString() const$/;"	f	class:Log::LogMessage	signature:() const
toString	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  inline QString toString() const;$/;"	p	class:Log::LogMessage	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.cpp	/^ControlCommand::toString() const$/;"	f	class:ControlCommand	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlCommand.h	/^  QString toString() const;$/;"	p	class:ControlCommand	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.cpp	/^ControlMethod::toString(ControlMethod::Method method)$/;"	f	class:ControlMethod	signature:(ControlMethod::Method method)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlMethod.h	/^    static QString toString(ControlMethod::Method method);$/;"	p	class:ControlMethod	access:public	signature:(ControlMethod::Method method)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.cpp	/^ControlReply::toString() const$/;"	f	class:ControlReply	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlReply.h	/^  QString toString() const;$/;"	p	class:ControlReply	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::toString(const QAbstractSocket::SocketError error)$/;"	f	class:ControlSocket	signature:(const QAbstractSocket::SocketError error)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  static QString toString(const QAbstractSocket::SocketError error);$/;"	p	class:ControlSocket	access:public	signature:(const QAbstractSocket::SocketError error)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::toString() const$/;"	f	class:ReplyLine	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  QString toString() const;$/;"	p	class:ReplyLine	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::toString(Event e)$/;"	f	class:TorEvents	signature:(Event e)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static QString toString(TorEvents::Event e);$/;"	p	class:TorEvents	access:public	signature:(TorEvents::Event e)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.cpp	/^TorSignal::toString(Signal signal)$/;"	f	class:TorSignal	signature:(Signal signal)
toString	/Users/chiiph/Code/vidalia/src/torcontrol/TorSignal.h	/^  static QString toString(Signal signal);$/;"	p	class:TorSignal	access:public	signature:(Signal signal)
toString	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::toString(TorStatus status)$/;"	f	class:MainWindow	signature:(TorStatus status)
toString	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  QString toString(TorStatus status);$/;"	p	class:MainWindow	access:private	signature:(TorStatus status)
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.cpp	/^ExitPolicy::toString()$/;"	f	class:ExitPolicy	signature:()
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/ExitPolicy.h	/^  QString toString();$/;"	p	class:ExitPolicy	access:public	signature:()
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.cpp	/^Policy::toString() const$/;"	f	class:Policy	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/Policy.h	/^  QString toString() const;$/;"	p	class:Policy	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::toString(AuthenticationMethod method) const$/;"	f	class:TorSettings	signature:(AuthenticationMethod method) const
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  QString toString(AuthenticationMethod type) const;$/;"	p	class:TorSettings	access:private	signature:(AuthenticationMethod type) const
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::toString(const IconPosition iconPref)$/;"	f	class:VidaliaSettings	signature:(const IconPosition iconPref)
toString	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  QString toString(const IconPosition iconPref);$/;"	p	class:VidaliaSettings	access:public	signature:(const IconPosition iconPref)
toString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.cpp	/^LogTreeItem::toString() const$/;"	f	class:LogTreeItem	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeItem.h	/^  QString toString() const;$/;"	p	class:LogTreeItem	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.cpp	/^StatusEventItem::toString() const$/;"	f	class:StatusEventItem	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/log/StatusEventItem.h	/^  QString toString() const;$/;"	p	class:StatusEventItem	access:public	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.cpp	/^GeoIpRecord::toString() const$/;"	f	class:GeoIpRecord	signature:() const
toString	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpRecord.h	/^  QString toString() const;$/;"	p	class:GeoIpRecord	access:public	signature:() const
toTorEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.cpp	/^TorEvents::toTorEvent(const QString &event)$/;"	f	class:TorEvents	signature:(const QString &event)
toTorEvent	/Users/chiiph/Code/vidalia/src/torcontrol/TorEvents.h	/^  static Event toTorEvent(const QString &event);$/;"	p	class:TorEvents	access:private	signature:(const QString &event)
toTorrcLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.cpp	/^TorrcParser::toTorrcLines(QString contents)$/;"	f	class:TorrcParser	signature:(QString contents)
toTorrcLines	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  QList<TorrcLine *> toTorrcLines(QString contents);$/;"	p	class:TorrcParser	access:private	signature:(QString contents)
toggleAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::toggleAccounting(int state)$/;"	f	class:ServerPage	signature:(int state)
toggleAccounting	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void toggleAccounting(int state);$/;"	p	class:ServerPage	access:private	signature:(int state)
toggleAttach	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::toggleAttach()$/;"	f	class:VAttachButton	signature:()
toggleAttach	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    void toggleAttach();$/;"	p	class:VAttachButton	access:public	signature:()
toggleAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::toggleAuto(bool)$/;"	f	class:AdvancedPage	signature:(bool)
toggleAuto	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void toggleAuto(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
toggleControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::toggleControl(bool)$/;"	f	class:AdvancedPage	signature:(bool)
toggleControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  void toggleControl(bool);$/;"	p	class:AdvancedPage	access:private	signature:(bool)
toggleDisplayDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::toggleDisplayDay(const QString &str)$/;"	f	class:ServerPage	signature:(const QString &str)
toggleDisplayDay	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void toggleDisplayDay(const QString &str);$/;"	p	class:ServerPage	access:private	signature:(const QString &str)
toggleFullScreen	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::toggleFullScreen()$/;"	f	class:NetViewer	signature:()
toggleFullScreen	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void toggleFullScreen();$/;"	p	class:NetViewer	access:private	signature:()
toggleShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::toggleShowOnStartup(bool checked)$/;"	f	class:StatusTab	signature:(bool checked)
toggleShowOnStartup	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  void toggleShowOnStartup(bool checked);$/;"	p	class:StatusTab	access:private	signature:(bool checked)
torConnectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::torConnectFailed(QString errmsg)$/;"	f	class:TorControl	signature:(QString errmsg)
torConnectFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void torConnectFailed(QString errmsg);$/;"	p	class:TorControl	access:private	signature:(QString errmsg)
torControl	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static TorControl* torControl() { return _torControl; }$/;"	f	class:Vidalia	access:public	signature:()
torControl	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  TorControl* torControl() const { return _torControl; };$/;"	f	class:AbstractTorSettings	access:protected	signature:() const
torCrashed	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torCrashed();$/;"	p	class:BootstrapTestTorKiller	access:public	signature:()
torStartFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::torStartFailed(QString errmsg)$/;"	f	class:TorControl	signature:(QString errmsg)
torStartFailed	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  void torStartFailed(QString errmsg);$/;"	p	class:TorControl	access:private	signature:(QString errmsg)
torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::torStopped()$/;"	f	class:BootstrapTestCase	signature:()
torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestTorKiller::torStopped(int exitCode, QProcess::ExitStatus status)$/;"	f	class:BootstrapTestTorKiller	signature:(int exitCode, QProcess::ExitStatus status)
torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torStopped();$/;"	p	class:BootstrapTestCase	access:private	signature:()
torStopped	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  void torStopped(int exitCode, QProcess::ExitStatus exitStatus);$/;"	p	class:BootstrapTestTorKiller	access:private	signature:(int exitCode, QProcess::ExitStatus exitStatus)
torStopped	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void torStopped();$/;"	p	class:MainWindow	access:public	signature:()
torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::torValue(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant torValue(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.cpp	/^ServerSettings::torValue(const QString &key) const$/;"	f	class:ServerSettings	signature:(const QString &key) const
torValue	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerSettings.h	/^  virtual QVariant torValue(const QString &key) const;$/;"	p	class:ServerSettings	access:protected	signature:(const QString &key) const
torVersionString	/Users/chiiph/Code/vidalia/src/torcontrol/ProtocolInfo.h	/^  QString torVersionString() const { return _torVersion; }$/;"	f	class:ProtocolInfo	access:public	signature:() const
torjumistekniikoita	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/config.html	/^    Vaikka ei tied√§ yhdenk√§√§n siltareitittimen osoitetta, rastittamalla t√§m√§n laatikon voi olla hy√∂dyllist√§. Silloin Tor-ohjelma suojaa yhteydet kryptaamalla ne, joka p√§ihitt√§√§ joitakin torjumistekniikoita, jotka yleens√§ rajoittavat Tor-verkon k√§ytt√∂√§. Jos yhteydet normaaleihin Tor-reitittimiin torjutaan, t√§ytyy jonkin siltareitittimen osoite saada selville ja lis√§t√§ t√§nne. Lue lis√§√§ ohjeenaiheesta <a href="bridges.html#finding">Miten l√∂yd√§n siltareitittimen?<\/a> saadakseen lis√§√§ tietoa siltareitittimien osoitteista ja tunnisteista.$/;"	v
torrc	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static Torrc* torrc() { return _torrc; }$/;"	f	class:Vidalia	access:public	signature:()
torrc	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    speziellen Konfiguarionsdatei, <i>torrc<\/i>, auszuf&uuml;hren.$/;"	v
totalToStr	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::totalToStr(qreal total)$/;"	f	class:GraphFrame	signature:(qreal total)
totalToStr	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  QString totalToStr(qreal total);$/;"	p	class:GraphFrame	access:private	signature:(qreal total)
touch_file	/Users/chiiph/Code/vidalia/src/common/file.cpp	/^touch_file(const QString &filename, bool createdir, QString *errmsg)$/;"	f	signature:(const QString &filename, bool createdir, QString *errmsg)
touch_file	/Users/chiiph/Code/vidalia/src/common/file.h	/^bool touch_file(const QString &filename, bool createdir = false,$/;"	p	signature:(const QString &filename, bool createdir = false, QString *errmsg = 0)
trayIconActivated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::trayIconActivated(QSystemTrayIcon::ActivationReason reason)$/;"	f	class:MainWindow	signature:(QSystemTrayIcon::ActivationReason reason)
trayIconActivated	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void trayIconActivated(QSystemTrayIcon::ActivationReason reason);$/;"	p	class:MainWindow	access:private	signature:(QSystemTrayIcon::ActivationReason reason)
trayMessage	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::trayMessage(const QString &title, const QString &msg,$/;"	f	class:MainWindow	signature:(const QString &title, const QString &msg, QSystemTrayIcon::MessageIcon icon, int milli)
trayMessage	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void trayMessage(const QString &title, const QString &msg,$/;"	p	class:MainWindow	access:public	signature:(const QString &title, const QString &msg, QSystemTrayIcon::MessageIcon icon = QSystemTrayIcon::Information, int milli = 10000)
trow	/Users/chiiph/Code/vidalia/src/common/html.cpp	/^trow(QString str)$/;"	f	signature:(QString str)
trow	/Users/chiiph/Code/vidalia/src/common/html.h	/^QString trow(QString str);$/;"	p	signature:(QString str)
tryCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::tryCookie(const ProtocolInfo &pi)$/;"	f	class:MainWindow	signature:(const ProtocolInfo &pi)
tryCookie	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool tryCookie(const ProtocolInfo &pi);$/;"	p	class:MainWindow	access:private	signature:(const ProtocolInfo &pi)
tryHashed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::tryHashed()$/;"	f	class:MainWindow	signature:()
tryHashed	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  bool tryHashed();$/;"	p	class:MainWindow	access:private	signature:()
tryLoadPlugin	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::tryLoadPlugin(QDir path)$/;"	f	class:PluginEngine	signature:(QDir path)
tryLoadPlugin	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    void tryLoadPlugin(QDir path);$/;"	p	class:PluginEngine	access:protected	signature:(QDir path)
ts2po	/Users/chiiph/Code/vidalia/src/tools/ts2po/ts2po.cpp	/^ts2po(const QDomDocument *ts, QString *po, const QString &encoding,$/;"	f	signature:(const QDomDocument *ts, QString *po, const QString &encoding, QString *errorMessage)
tunnel	/Users/chiiph/Code/vidalia/src/vidalia/help/content/en/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
tunnel	/Users/chiiph/Code/vidalia/src/vidalia/help/content/sv/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
tunnel	/Users/chiiph/Code/vidalia/src/vidalia/help/content/zh_CN/netview.html	/^website), Tor creates a tunnel, or <i>circuit<\/i>, of encrypted connections$/;"	v
type	/Users/chiiph/Code/vidalia/src/common/Log.h	/^    Log::LogLevel type;$/;"	m	struct:Log::LogMessage::Stream	access:public
type	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^      QtMsgType type; \/**< DebugMessage severity level. *\/$/;"	m	struct:tc::DebugMessage::Stream	access:public
type	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/TorrcParser.h	/^  OptType type() const$/;"	f	class:TorOpt	access:public	signature:() const
type	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::type() const$/;"	f	class:GeoIpDatabase	signature:() const
type	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  GeoIpDatabase::DatabaseType type() const;$/;"	p	class:GeoIpDatabase	access:public	signature:() const
u	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/kz.png	/^/;"	v
ui	/Users/chiiph/Code/vidalia/src/crashreporter/CrashReportDialog.h	/^  Ui::CrashReportDialog ui;$/;"	m	class:CrashReportDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/ControlPasswordInputDialog.h	/^    Ui::ControlPasswordInputDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:ControlPasswordInputDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  Ui::MainWindow ui; \/**< Qt Designer generated object. *\/$/;"	m	class:MainWindow	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  Ui::StatusTab ui;$/;"	m	class:StatusTab	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProgressDialog.h	/^  Ui::UpdateProgressDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:UpdateProgressDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/UpdatesAvailableDialog.h	/^  Ui::UpdatesAvailableDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:UpdatesAvailableDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/about/AboutDialog.h	/^  Ui::AboutDialog ui; \/**< Qt Designer generated QObject **\/$/;"	m	class:AboutDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/about/LicenseDialog.h	/^  Ui::LicenseDialog ui;$/;"	m	class:LicenseDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  Ui::BandwidthGraph ui;$/;"	m	class:BandwidthGraph	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  Ui::AdvancedPage ui;$/;"	m	class:AdvancedPage	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  Ui::AppearancePage ui;$/;"	m	class:AppearancePage	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  Ui::BridgeUsageDialog ui;$/;"	m	class:BridgeUsageDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/ConfigDialog.h	/^  Ui::ConfigDialog ui;$/;"	m	class:ConfigDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  Ui::GeneralPage ui;$/;"	m	class:GeneralPage	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  Ui::NetworkPage ui;$/;"	m	class:NetworkPage	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  Ui::ServerPage ui;$/;"	m	class:ServerPage	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  Ui::TorrcDialog ui; \/**< Qt Designer generated object. *\/$/;"	m	class:TorrcDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  Ui::UPNPTestDialog ui;$/;"	m	class:UPNPTestDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/help/browser/HelpBrowser.h	/^  Ui::HelpBrowser ui;$/;"	m	class:HelpBrowser	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  Ui::MessageLog ui;$/;"	m	class:MessageLog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  Ui::NetViewer ui;$/;"	m	class:NetViewer	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterInfoDialog.h	/^  Ui::RouterInfoDialog ui;$/;"	m	class:RouterInfoDialog	access:private
ui	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    Ui::DebugDialog ui;$/;"	m	class:DebugDialog	access:private
uint16_t	/Users/chiiph/Code/vidalia/src/miniupnpc/minissdpc.c	/^#define uint16_t /;"	d	file:
uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::uncompress(const CompressionMethod method,$/;"	f	class:ZlibByteArray	signature:(const CompressionMethod method, QString *errmsg) const
uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.cpp	/^ZlibByteArray::uncompress(const QByteArray in,$/;"	f	class:ZlibByteArray	signature:(const QByteArray in, const CompressionMethod method, QString *errmsg)
uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  QByteArray uncompress(CompressionMethod method = Zlib,$/;"	p	class:ZlibByteArray	access:public	signature:(CompressionMethod method = Zlib, QString *errmsg = 0) const
uncompress	/Users/chiiph/Code/vidalia/src/common/ZlibByteArray.h	/^  static QByteArray uncompress(const QByteArray in,$/;"	p	class:ZlibByteArray	access:public	signature:(const QByteArray in, const CompressionMethod method = Zlib, QString *errmsg = 0)
unescape	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.cpp	/^ReplyLine::unescape(const QString &escaped)$/;"	f	class:ReplyLine	signature:(const QString &escaped)
unescape	/Users/chiiph/Code/vidalia/src/torcontrol/ReplyLine.h	/^  static QString unescape(const QString &escaped);$/;"	p	class:ReplyLine	access:private	signature:(const QString &escaped)
universal_process_list	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^universal_process_list(quint16 port)$/;"	f	signature:(quint16 port)
universal_process_list	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^QHash<qint64, QString> universal_process_list(quint16 port);$/;"	p	signature:(quint16 port)
update	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.cpp	/^BridgeUsageDialog::update(const QDateTime &timeStarted,$/;"	f	class:BridgeUsageDialog	signature:(const QDateTime &timeStarted, const QHash<QString,int> &countrySummary)
update	/Users/chiiph/Code/vidalia/src/vidalia/config/BridgeUsageDialog.h	/^  void update(const QDateTime &timeStarted,$/;"	p	class:BridgeUsageDialog	access:public	signature:(const QDateTime &timeStarted, const QHash<QString,int> &countrySummary)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.cpp	/^CircuitItem::update(const Circuit &circuit)$/;"	f	class:CircuitItem	signature:(const Circuit &circuit)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitItem.h	/^  void update(const Circuit &circuit);$/;"	p	class:CircuitItem	access:public	signature:(const Circuit &circuit)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::update(const RouterDescriptor &rd)$/;"	f	class:RouterListItem	signature:(const RouterDescriptor &rd)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  void update(const RouterDescriptor &rd);$/;"	p	class:RouterListItem	access:public	signature:(const RouterDescriptor &rd)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.cpp	/^StreamItem::update(const Stream &stream)$/;"	f	class:StreamItem	signature:(const Stream &stream)
update	/Users/chiiph/Code/vidalia/src/vidalia/network/StreamItem.h	/^  void update(const Stream &stream);$/;"	p	class:StreamItem	access:public	signature:(const Stream &stream)
updateExecutable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::updateExecutable()$/;"	f	class:UpdateProcess	signature:()
updateExecutable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QString updateExecutable();$/;"	p	class:UpdateProcess	access:public	signature:()
updateGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.cpp	/^BandwidthGraph::updateGraph(quint64 bytesRead, quint64 bytesWritten)$/;"	f	class:BandwidthGraph	signature:(quint64 bytesRead, quint64 bytesWritten)
updateGraph	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/BandwidthGraph.h	/^  void updateGraph(quint64 bytesRead, quint64 bytesWritten);$/;"	p	class:BandwidthGraph	access:private	signature:(quint64 bytesRead, quint64 bytesWritten)
updateNow	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::updateNow()$/;"	f	class:GeneralPage	signature:()
updateNow	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  void updateNow();$/;"	p	class:GeneralPage	access:private	signature:()
updatePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::updatePort(quint16 oldPort, quint16 newPort)$/;"	f	class:UPNPControlThread	signature:(quint16 oldPort, quint16 newPort)
updatePort	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  UPNPControl::UPNPError updatePort(quint16 oldPort, quint16 newPort);$/;"	p	class:UPNPControlThread	access:private	signature:(quint16 oldPort, quint16 newPort)
updateRepositoryDir	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.cpp	/^UpdateProcess::updateRepositoryDir()$/;"	f	class:UpdateProcess	signature:()
updateRepositoryDir	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  static QString updateRepositoryDir();$/;"	p	class:UpdateProcess	access:public	signature:()
updateTitle	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updateTitle()$/;"	f	class:MainWindow	signature:()
updateTitle	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updateTitle();$/;"	p	class:MainWindow	access:private	signature:()
updateTop	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::updateTop(int index)$/;"	f	class:VTabWidget	signature:(int index)
updateTop	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  void updateTop(int index);$/;"	p	class:VTabWidget	access:private	signature:(int index)
updateTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updateTorStatus(TorStatus status)$/;"	f	class:MainWindow	signature:(TorStatus status)
updateTorStatus	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  TorStatus updateTorStatus(TorStatus status);$/;"	p	class:MainWindow	access:private	signature:(TorStatus status)
updateViewport	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::updateViewport(int screendx, int screendy)$/;"	f	class:ZImageView	signature:(int screendx, int screendy)
updateViewport	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void updateViewport(int screendx=0, int screendy=0);$/;"	p	class:ZImageView	access:protected	signature:(int screendx=0, int screendy=0)
updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updatesAvailable(UpdateProcess::BundleInfo bi,$/;"	f	class:MainWindow	signature:(UpdateProcess::BundleInfo bi, const PackageList &packageList)
updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updatesAvailable(UpdateProcess::BundleInfo bi,$/;"	p	class:MainWindow	access:private	signature:(UpdateProcess::BundleInfo bi, const PackageList &packageList)
updatesAvailable	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void updatesAvailable(UpdateProcess::BundleInfo bi, PackageList packages);$/;"	p	class:UpdateProcess	access:public	signature:(UpdateProcess::BundleInfo bi, PackageList packages)
updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::updatesInstalled(int numUpdates)$/;"	f	class:MainWindow	signature:(int numUpdates)
updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void updatesInstalled(int numUpdates);$/;"	p	class:MainWindow	access:private	signature:(int numUpdates)
updatesInstalled	/Users/chiiph/Code/vidalia/src/vidalia/UpdateProcess.h	/^  void updatesInstalled(int nPackagesInstalled);$/;"	p	class:UpdateProcess	access:public	signature:(int nPackagesInstalled)
upnpDiscover	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^LIBSPEC struct UPNPDev * upnpDiscover(int delay, const char * multicastif,$/;"	f	signature:(int delay, const char * multicastif, const char * minissdpdsock, int sameport)
upnpDiscover	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^LIBSPEC struct UPNPDev * upnpDiscover(int delay, const char * multicastif,$/;"	p	signature:(int delay, const char * multicastif, const char * minissdpdsock, int sameport)
upnpError	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::upnpError(UPNPControl::UPNPError error)$/;"	f	class:MainWindow	signature:(UPNPControl::UPNPError error)
upnpError	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void upnpError(UPNPControl::UPNPError error);$/;"	p	class:MainWindow	access:private	signature:(UPNPControl::UPNPError error)
upnpHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::upnpHelp()$/;"	f	class:ServerPage	signature:()
upnpHelp	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  void upnpHelp();$/;"	p	class:ServerPage	access:private	signature:()
upnpStateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.cpp	/^UPNPTestDialog::upnpStateChanged(UPNPControl::UPNPState state)$/;"	f	class:UPNPTestDialog	signature:(UPNPControl::UPNPState state)
upnpStateChanged	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPTestDialog.h	/^  void upnpStateChanged(UPNPControl::UPNPState state);$/;"	p	class:UPNPTestDialog	access:protected	signature:(UPNPControl::UPNPState state)
uptime	/Users/chiiph/Code/vidalia/src/torcontrol/RouterDescriptor.h	/^  quint64 uptime() const { return _uptime; }$/;"	f	class:RouterDescriptor	access:public	signature:() const
url_cpy_or_cat	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.c	/^url_cpy_or_cat(char * dst, const char * src, int n)$/;"	f	file:	signature:(char * dst, const char * src, int n)
urlbase	/Users/chiiph/Code/vidalia/src/miniupnpc/igd_desc_parse.h	/^	char urlbase[MINIUPNPC_URL_MAXSIZE];$/;"	m	struct:IGDdatas	access:public
urls	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpcmodule.c	/^	struct UPNPUrls urls;$/;"	m	struct:__anon1	typeref:struct:__anon1::UPNPUrls	file:	access:public
urls	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  struct UPNPUrls urls;$/;"	m	class:UPNPControlThread	typeref:struct:UPNPControlThread::UPNPUrls	access:private
useFeature	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::useFeature(const QString &feature, QString *errmsg)$/;"	f	class:TorControl	signature:(const QString &feature, QString *errmsg)
useFeature	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool useFeature(const QString &feature, QString *errmsg = 0);$/;"	p	class:TorControl	access:private	signature:(const QString &feature, QString *errmsg = 0)
useLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.cpp	/^VidaliaSettings::useLocalGeoIpDatabase() const$/;"	f	class:VidaliaSettings	signature:() const
useLocalGeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/config/VidaliaSettings.h	/^  bool useLocalGeoIpDatabase() const;$/;"	p	class:VidaliaSettings	access:public	signature:() const
useMicrodescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::useMicrodescriptors(QString *errmsg)$/;"	f	class:TorControl	signature:(QString *errmsg)
useMicrodescriptors	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  bool useMicrodescriptors(QString *errmsg = 0);$/;"	p	class:TorControl	access:public	signature:(QString *errmsg = 0)
useRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.cpp	/^TorSettings::useRandomPassword() const$/;"	f	class:TorSettings	signature:() const
useRandomPassword	/Users/chiiph/Code/vidalia/src/vidalia/config/TorSettings.h	/^  bool useRandomPassword() const;$/;"	p	class:TorSettings	access:public	signature:() const
userlocalfunc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^userlocalfunc(void *cbdata,$/;"	f	signature:(void *cbdata, QDomElement e)
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Systemstart ausge&uuml;hrt wird (<i>nur unter Windows<\/i>).$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Wenn Sie einen Wert f&uuml;r <b>Als folgende Gruppe ausf&uuml;hren<\/b>$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Wenn Sie einen Wert f&uuml;r <b>Als folgender Benutzer ausf&uuml;hren<\/b>$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    angeben, wird Tor mit den Rechten dieses Benutzers ausge&uuml;hrt$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    speziellen Konfiguarionsdatei, <i>torrc<\/i>, auszuf&uuml;hren.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    wird Tor mit den Rechten dieser Gruppe ausgef&uuml;hrt (<i>setgid<\/i>).$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^  Lesen Sie <a href="server.html">diese Hilfeseite<\/a> f&uuml;r detailierte$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^Die Schaltfl&auml;che <i>Startseite<\/i> wird Sie zu dieser Seite zur&uuml;ck$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^f&uuml;hren.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^verf&uuml;gbaren Hilfe-Themen durchzuf&uuml;hren.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/index.html	/^weiterf&uuml;hrende Hilfe und Informationen zu Vidalia und Tor.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/links.html	/^<h1>N&uuml;tzliche Links<\/h1>$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    Tor-Betriebs auftauchen, aber in der Regel f&uuml;r die meisten Nutzer$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    angezeigt werden sollen und deaktivieren Sie die f&uuml;r Sie$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    aufgetreten ist und Tor nicht weiter ausgef&uuml;hrt werden kann. Diese$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    f&uuml;r Entwickler von Bedeutung sind. Es empfiehlt sich nur, diese$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    k&ouml;nnten f&uuml;r Sie interessante Informationen enthalten.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    schwerwiegende Fehler aufgetreten sind und Tor weiterhin ausgef&uuml;hrt$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^  <li>&Ouml;ffnen Sie das Nachrichtenprotokoll aus dem Vidalia Traymen&uuml;.<\/li>$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^  <li>&Ouml;ffnen sie das Nachrichtenprotokoll aus dem Vidalia Traymen&uuml;.<\/li>$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^    in der Systemmen&uuml;leiste Ihres Macintosh-Systems.$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/server.html	/^Teil ihrer &uuml;bersch&uuml;ssigen Bandbreite zum Betrieb eines Servers$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^&Uuml;berpr&uuml;fen Sie die Liste der laufenden Prozesse und beenden Sie den$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls Sie eine solche Fehlermeldung finden, m&uuml;ssen Sie den anderen Tor-Prozess$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls dieses Vorgehen nicht hilft, &uuml;berpr&uuml;fen Sie das$/;"	v
uuml	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^von Tor aufgef&uuml;hrt. Falls Sie zu Ihrem Problem nicht f&uuml;ndig werden,$/;"	v
vApp	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vApp /;"	d
vDebug	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vDebug(/;"	d
vError	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vError(/;"	d
vInfo	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vInfo(/;"	d
vNotice	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vNotice(/;"	d
vWarn	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^#define vWarn(/;"	d
val	/Users/chiiph/Code/vidalia/src/miniupnpc/miniupnpc.h	/^struct UPNParg { const char * elt; const char * val; };$/;"	m	struct:UPNParg	access:public
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::validate(QString &input) const$/;"	f	class:IpValidator	signature:(QString &input) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.cpp	/^IpValidator::validate(QString &input, int &pos) const$/;"	f	class:IpValidator	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  QValidator::State validate(QString &input) const;$/;"	p	class:IpValidator	access:public	signature:(QString &input) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/IpValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:IpValidator	access:public	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.cpp	/^Local8BitStringValidator::validate(QString &input, int &pos) const$/;"	f	class:Local8BitStringValidator	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/Local8BitStringValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:Local8BitStringValidator	access:public	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.cpp	/^NicknameValidator::validate(QString &input, int &pos) const$/;"	f	class:NicknameValidator	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/NicknameValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:NicknameValidator	access:public	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.cpp	/^PortValidator::validate(QString &input, int &pos) const$/;"	f	class:PortValidator	signature:(QString &input, int &pos) const
validate	/Users/chiiph/Code/vidalia/src/vidalia/config/PortValidator.h	/^  QValidator::State validate(QString &input, int &pos) const;$/;"	p	class:PortValidator	access:public	signature:(QString &input, int &pos) const
validateArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::validateArguments(QString &errmsg)$/;"	f	class:Vidalia	signature:(QString &errmsg)
validateArguments	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool validateArguments(QString &errmsg);$/;"	p	class:Vidalia	access:public	signature:(QString &errmsg)
value	/Users/chiiph/Code/vidalia/src/miniupnpc/upnpreplyparse.h	/^    char value[64];$/;"	m	struct:NameValue	access:public
value	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.cpp	/^AbstractTorSettings::value(const QString &key) const$/;"	f	class:AbstractTorSettings	signature:(const QString &key) const
value	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^  virtual QVariant value(const QString &key) const;$/;"	p	class:AbstractTorSettings	access:protected	signature:(const QString &key) const
value	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::value(const QString &key, const QVariant &defaultVal) const$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &defaultVal) const
value	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual QVariant value(const QString &key,$/;"	p	class:VSettings	access:public	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
value	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.cpp	/^Torrc::value(const QString &key) const$/;"	f	class:Torrc	signature:(const QString &key) const
value	/Users/chiiph/Code/vidalia/src/vidalia/config/torrc/Torrc.h	/^  QStringList value(const QString &key) const;$/;"	p	class:Torrc	access:public	signature:(const QString &key) const
vdebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::vdebug(QScriptContext *context, QScriptEngine *engine)$/;"	f	class:PluginEngine	signature:(QScriptContext *context, QScriptEngine *engine)
vdebug	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    static QScriptValue vdebug(QScriptContext *context, QScriptEngine *engine);$/;"	p	class:PluginEngine	access:protected	signature:(QScriptContext *context, QScriptEngine *engine)
veranlassen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Mit dieser Option k&ouml;nnen Sie Vidalia veranlassen, Tor mit einer$/;"	v
version	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.cpp	/^TorProcess::version(const QString &exe)$/;"	f	class:TorProcess	signature:(const QString &exe)
version	/Users/chiiph/Code/vidalia/src/torcontrol/TorProcess.h	/^  static QString version(const QString &exe);$/;"	p	class:TorProcess	access:public	signature:(const QString &exe)
version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.cpp	/^PackageInfo::version() const$/;"	f	class:PackageInfo	signature:() const
version	/Users/chiiph/Code/vidalia/src/vidalia/PackageInfo.h	/^  QString version() const;$/;"	p	class:PackageInfo	access:public	signature:() const
version	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  static QString version() { return VIDALIA_VERSION; }$/;"	f	class:Vidalia	access:public	signature:()
verticalSliderReleased	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.cpp	/^LogTreeWidget::verticalSliderReleased()$/;"	f	class:LogTreeWidget	signature:()
verticalSliderReleased	/Users/chiiph/Code/vidalia/src/vidalia/log/LogTreeWidget.h	/^  void verticalSliderReleased();$/;"	p	class:LogTreeWidget	access:private	signature:()
vidalia_X_fromScriptValue	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static void vidalia_X_fromScriptValue(const QScriptValue &value, X* &out)$/;"	f	file:	signature:(const QScriptValue &value, X* &out)
vidalia_X_fromScriptValue	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static void vidalia_X_fromScriptValue(const QScriptValue &value, X* &out)$/;"	f	file:	signature:(const QScriptValue &value, X* &out)
vidalia_X_fromScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static void vidalia_X_fromScriptValue(const QScriptValue &value, X* &out)$/;"	f	file:	signature:(const QScriptValue &value, X* &out)
vidalia_X_function_lengths	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static const int vidalia_X_function_lengths[] = {$/;"	v	file:
vidalia_X_function_lengths	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static const int vidalia_X_function_lengths[] = {$/;"	v	file:
vidalia_X_function_lengths	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static const int vidalia_X_function_lengths[] = {$/;"	v	file:
vidalia_X_function_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static const char * const vidalia_X_function_names[] = {$/;"	v	file:
vidalia_X_function_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static const char * const vidalia_X_function_names[] = {$/;"	v	file:
vidalia_X_function_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static const char * const vidalia_X_function_names[] = {$/;"	v	file:
vidalia_X_prototype_call	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static QScriptValue vidalia_X_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_prototype_call	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static QScriptValue vidalia_X_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_prototype_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static QScriptValue vidalia_X_prototype_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_static_call	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static QScriptValue vidalia_X_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_static_call	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static QScriptValue vidalia_X_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_static_call	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static QScriptValue vidalia_X_static_call(QScriptContext *context, QScriptEngine *)$/;"	f	file:	signature:(QScriptContext *context, QScriptEngine *)
vidalia_X_toScriptValue	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^static QScriptValue vidalia_X_toScriptValue(QScriptEngine *engine, X* const &in)$/;"	f	file:	signature:(QScriptEngine *engine, X* const &in)
vidalia_X_toScriptValue	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^static QScriptValue vidalia_X_toScriptValue(QScriptEngine *engine, X* const &in)$/;"	f	file:	signature:(QScriptEngine *engine, X* const &in)
vidalia_X_toScriptValue	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^static QScriptValue vidalia_X_toScriptValue(QScriptEngine *engine, X* const &in)$/;"	f	file:	signature:(QScriptEngine *engine, X* const &in)
vidalia_class_functions	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensionsInit.cpp	/^static const QtBindingCreator vidalia_class_functions[] = {$/;"	v	file:
vidalia_class_functions	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp	/^static const QtBindingCreator vidalia_class_functions[] = {$/;"	v	file:
vidalia_class_functions	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp~	/^static const QtBindingCreator vidalia_class_functions[] = {$/;"	v	file:
vidalia_class_functions	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensionsInit.cpp~	/^static const QtBindingCreator vidalia_class_functions[] = {$/;"	v	file:
vidalia_class_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensionsInit.cpp	/^static const char * const vidalia_class_names[] = {$/;"	v	file:
vidalia_class_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp	/^static const char * const vidalia_class_names[] = {$/;"	v	file:
vidalia_class_names	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp~	/^static const char * const vidalia_class_names[] = {$/;"	v	file:
vidalia_class_names	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensionsInit.cpp~	/^static const char * const vidalia_class_names[] = {$/;"	v	file:
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensionsInit.cpp	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine);$/;"	p	file:	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XExtension.cpp	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_extension.cpp~	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine);$/;"	p	file:	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp~	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine);$/;"	p	file:	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.h~	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine);$/;"	p	file:	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensionsInit.cpp~	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine);$/;"	p	file:	signature:(QScriptEngine *engine)
vidalia_create_X_class	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/XExtension.cpp~	/^QScriptValue vidalia_create_X_class(QScriptEngine *engine)$/;"	f	signature:(QScriptEngine *engine)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensions.cpp	/^void vidalia_initialize_bindings(QScriptValue &);$/;"	p	file:	signature:(QScriptValue &)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/VidaliaExtensionsInit.cpp	/^void vidalia_initialize_bindings(QScriptValue &extensionObject)$/;"	f	signature:(QScriptValue &extensionObject)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^void vidalia_initialize_bindings(QScriptValue &);$/;"	p	file:	signature:(QScriptValue &)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp	/^void vidalia_initialize_bindings(QScriptValue &extensionObject)$/;"	f	signature:(QScriptValue &extensionObject)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_init.cpp~	/^void vidalia_initialize_bindings(QScriptValue &extensionObject)$/;"	f	signature:(QScriptValue &extensionObject)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensions.cpp~	/^void vidalia_initialize_bindings(QScriptValue &);$/;"	p	file:	signature:(QScriptValue &)
vidalia_initialize_bindings	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/VidaliaExtensionsInit.cpp~	/^void vidalia_initialize_bindings(QScriptValue &extensionObject)$/;"	f	signature:(QScriptValue &extensionObject)
viesti	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos tulee yll√§ mainitun kaltainen viesti, niin kannattaa sulkea muut p√§√§ll√§ olevat Tor-ohjelmat ennen kuin yritt√§√§ k√§ynnist√§√§ uuden Tor-ohjelman Vidalialla. Windowssissa <i>tor.exe<\/i>-niminen tiedosto pit√§isi l√∂yty√§ Teht√§vienhallinnasta (engl. Task Manager). Useimmissa k√§ytt√∂j√§rjestelmiss√§ <i>ps<\/i>-komennolla on mahdollista l√∂yt√§√§ p√§√§ll√§ olevat Tor-ohjelmat.$/;"	v
virheilmoituksen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^Jos Vidalia ei onnistu k√§ynnist√§m√§√§n Tor-ohjelmaa, niin Vidalia n√§ytt√§√§ virheilmoituksen, jossa kerrotaan mit√§ ongelmia kohtasi Tor. $/;"	v
virheilmoituksen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/running.html	/^Jos Vidalia ei onnistu pys√§ytt√§m√§√§n Tor-ohjelmaa, niin Vidalia n√§ytt√§√§ virheilmoituksen, jossa kerrotaan mit√§ ongelmia kohtasi Tor. $/;"	v
volatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::volatileValue(const QString &key,$/;"	f	class:VSettings	signature:(const QString &key, const QVariant &defaultVal) const
volatileValue	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  virtual QVariant volatileValue(const QString &key,$/;"	p	class:VSettings	access:protected	signature:(const QString &key, const QVariant &defaultVal = QVariant()) const
w	/Users/chiiph/Code/vidalia/src/vidalia/help/content/pl/index.html	/^znajdujƒÖcy siƒô nad listƒÖ temat√≥w, aby wyszukaƒá wszystkie dostƒôpne tematy$/;"	v
waiter	/Users/chiiph/Code/vidalia/src/torcontrol/SendCommandEvent.h	/^  SendWaiter* waiter() { return _waiter; }$/;"	f	class:SendCommandEvent	access:public	signature:()
wakeup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::wakeup()$/;"	f	class:UPNPControlThread	signature:()
wakeup	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  void wakeup();$/;"	p	class:UPNPControlThread	access:public	signature:()
walkdoc	/Users/chiiph/Code/vidalia/src/tools/wixtool/wixtool.cpp	/^walkdoc(QDomDocument *doc,$/;"	f	signature:(QDomDocument *doc, TraverseCallback cb, void * cbdata, QString *errorMessage)
warn	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.cpp	/^warn(const QString &fmt)$/;"	f	namespace:tc	signature:(const QString &fmt)
warn	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^  DebugMessage warn(const QString &fmt);$/;"	p	namespace:tc	signature:(const QString &fmt)
warnDangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::warnDangerousPort(quint16 port, bool rejected)$/;"	f	class:MainWindow	signature:(quint16 port, bool rejected)
warnDangerousPort	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  void warnDangerousPort(quint16 port, bool rejected);$/;"	p	class:MainWindow	access:private	signature:(quint16 port, bool rejected)
warning	/Users/chiiph/Code/vidalia/src/torcontrol/BootstrapStatus.h	/^  QString warning() const { return _warning; }$/;"	f	class:BootstrapStatus	access:public	signature:() const
warning	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.cpp	/^VMessageBox::warning(QWidget *parent, QString caption, QString text,$/;"	f	class:VMessageBox	signature:(QWidget *parent, QString caption, QString text, int button0, int button1, int button2)
warning	/Users/chiiph/Code/vidalia/src/vidalia/VMessageBox.h	/^  static int warning(QWidget *parent, QString caption, QString text,$/;"	p	class:VMessageBox	access:public	signature:(QWidget *parent, QString caption, QString text, int button0, int button1 = NoButton, int button2 = NoButton)
werden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/config.html	/^    Diese Einstellung braucht nur ver&auml;ndert zu werden, wenn Sie einen$/;"	v
werden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^muss nur selten ge&auml;ndert werden, bspw. m&uuml;ssen Sie einen anderen$/;"	v
werden	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^von Tor aufgef&uuml;hrt. Falls Sie zu Ihrem Problem nicht f&uuml;ndig werden,$/;"	v
wheelEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::wheelEvent(QWheelEvent *e)$/;"	f	class:ZImageView	signature:(QWheelEvent *e)
wheelEvent	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  virtual void wheelEvent(QWheelEvent *e);$/;"	p	class:ZImageView	access:protected	signature:(QWheelEvent *e)
win32_app_data_folder	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_app_data_folder()$/;"	f	signature:()
win32_app_data_folder	/Users/chiiph/Code/vidalia/src/common/win32.h	/^QString win32_app_data_folder();$/;"	p	signature:()
win32_end_process_by_filename	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_end_process_by_filename(QString filename)$/;"	f	signature:(QString filename)
win32_end_process_by_filename	/Users/chiiph/Code/vidalia/src/common/win32.h	/^void win32_end_process_by_filename(QString filename);$/;"	p	signature:(QString filename)
win32_end_process_by_pid	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_end_process_by_pid(DWORD pid)$/;"	f	signature:(DWORD pid)
win32_get_folder_location	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_get_folder_location(int folder, QString defaultPath)$/;"	f	signature:(int folder, QString defaultPath)
win32_process_list	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_process_list()$/;"	f	signature:()
win32_process_list	/Users/chiiph/Code/vidalia/src/common/win32.h	/^QHash<qint64, QString> win32_process_list();$/;"	p	signature:()
win32_program_files_folder	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_program_files_folder()$/;"	f	signature:()
win32_program_files_folder	/Users/chiiph/Code/vidalia/src/common/win32.h	/^QString win32_program_files_folder();$/;"	p	signature:()
win32_registry_get_key_value	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_registry_get_key_value(QString keyLocation, QString keyName)$/;"	f	signature:(QString keyLocation, QString keyName)
win32_registry_get_key_value	/Users/chiiph/Code/vidalia/src/common/win32.h	/^QString win32_registry_get_key_value(QString keyLocation, QString keyName);$/;"	p	signature:(QString keyLocation, QString keyName)
win32_registry_remove_key	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_registry_remove_key(QString keyLocation, QString keyName)$/;"	f	signature:(QString keyLocation, QString keyName)
win32_registry_remove_key	/Users/chiiph/Code/vidalia/src/common/win32.h	/^void win32_registry_remove_key(QString keyLocation, QString keyName);$/;"	p	signature:(QString keyLocation, QString keyName)
win32_registry_set_key_value	/Users/chiiph/Code/vidalia/src/common/win32.cpp	/^win32_registry_set_key_value(QString keyLocation, QString keyName, QString keyValue)$/;"	f	signature:(QString keyLocation, QString keyName, QString keyValue)
win32_registry_set_key_value	/Users/chiiph/Code/vidalia/src/common/win32.h	/^void win32_registry_set_key_value(QString keyLocation, QString keyName, QString keyValue);$/;"	p	signature:(QString keyLocation, QString keyName, QString keyValue)
winEventFilter	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::winEventFilter(MSG *msg, long *result)$/;"	f	class:Vidalia	signature:(MSG *msg, long *result)
winEventFilter	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  bool winEventFilter(MSG *msg, long *result);$/;"	p	class:Vidalia	access:protected	signature:(MSG *msg, long *result)
wissen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    Nachrichten aufzuzeichnen, wenn Sie wissen, was Sie tun.$/;"	v
with_torrc_value	/Users/chiiph/Code/vidalia/src/vidalia/config/AbstractTorSettings.h	/^#define with_torrc_value(/;"	d
wollen	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/log.html	/^    wollen, geben Sie entweder ein Verzeichnis und einen Dateinamen an, oder$/;"	v
wrappers	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    QList<PluginWrapper *> wrappers;$/;"	m	class:PluginEngine	access:protected
write_extra_dump_info	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^write_extra_dump_info(const _char_t *path, const _char_t *id, time_t crashTime)$/;"	f	namespace:CrashReporter	signature:(const _char_t *path, const _char_t *id, time_t crashTime)
write_keyval_to_file	/Users/chiiph/Code/vidalia/src/vidalia/CrashReporter.cpp	/^write_keyval_to_file(_file_handle_t hFile, const char *key, const char *val)$/;"	f	namespace:CrashReporter	signature:(_file_handle_t hFile, const char *key, const char *val)
write_pidfile	/Users/chiiph/Code/vidalia/src/common/procutil.cpp	/^write_pidfile(const QString &pidFileName, QString *errmsg)$/;"	f	signature:(const QString &pidFileName, QString *errmsg)
write_pidfile	/Users/chiiph/Code/vidalia/src/common/procutil.h	/^bool write_pidfile(const QString &pidfile, QString *errmsg = 0);$/;"	p	signature:(const QString &pidfile, QString *errmsg = 0)
write_po_output	/Users/chiiph/Code/vidalia/src/tools/nsh2po/nsh2po.cpp	/^write_po_output(const char *poFileName, const QString &po, QTextCodec *codec,$/;"	f	signature:(const char *poFileName, const QString &po, QTextCodec *codec, QString *errmsg)
wurde	/Users/chiiph/Code/vidalia/src/vidalia/help/content/de/troubleshooting.html	/^Falls Tor bereits l&auml;nger als einige Sekunden lief, bevor es beendet wurde,$/;"	v
wz	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/za.png	/^/;"	v
x	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/lc.png	/^/;"	v
xE	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/go-previous.png	/^/;"	v
xml	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xml;	\/* pointer to current character *\/$/;"	m	struct:xmlparser	access:public
xmlend	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xmlend;$/;"	m	struct:xmlparser	access:public
xmlparser	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^struct xmlparser {$/;"	s
xmlparser::attfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*attfunc) (void *, const char *, int, const char *, int);$/;"	m	struct:xmlparser	access:public
xmlparser::data	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void * data;$/;"	m	struct:xmlparser	access:public
xmlparser::datafunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*datafunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
xmlparser::endeltfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*endeltfunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
xmlparser::starteltfunc	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	void (*starteltfunc) (void *, const char *, int);$/;"	m	struct:xmlparser	access:public
xmlparser::xml	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xml;	\/* pointer to current character *\/$/;"	m	struct:xmlparser	access:public
xmlparser::xmlend	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xmlend;$/;"	m	struct:xmlparser	access:public
xmlparser::xmlsize	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	int xmlsize;$/;"	m	struct:xmlparser	access:public
xmlparser::xmlstart	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xmlstart;$/;"	m	struct:xmlparser	access:public
xmlsize	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	int xmlsize;$/;"	m	struct:xmlparser	access:public
xmlstart	/Users/chiiph/Code/vidalia/src/miniupnpc/minixml.h	/^	const char *xmlstart;$/;"	m	struct:xmlparser	access:public
y	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bj.png	/^/;"	v
y	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/mn.png	/^/;"	v
y	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/mz.png	/^/;"	v
yhteydet	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/services.html	/^/;"	v
ynnist	/Users/chiiph/Code/vidalia/src/vidalia/help/content/fi/troubleshooting.html	/^Jos Tor-ohjelma lopettaa yll√§tt√§en, kun sit√§ yritet√§√§n k√§ynnist√§√§, niin kenties Tor-ohjelma on jo p√§√§ll√§. Silloin on suositeltavaa tarkistaa <a href="log.html">tapahtumaloki<\/a>, jos sen lopussa on keltaisella korostettuja viestej√§ ja ovatko ne seuraavan kaltaisia:$/;"	v
yq	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/ch.png	/^/;"	v
z	/Users/chiiph/Code/vidalia/src/vidalia/res/48x48/applications-internet.png	/^i“—Íèa¨£å<´næ©à•ï∫úó‡I≠¯–‡q≤ç0Y¢‰∫ﬁRªU∫¯√kı	3Ú\\◊CΩ¡¶ï≤8&ÿ2L-Ã‰¯ﬁ¬”ók8∂0*›S’4ÈêßÆ6§˝øfw„Ãﬁ8ˇñ]y‹97Ç∑ûƒL!Ö@Fáò˜“qÈ∞z,Se‚øü%=[ôn≈9È#—ò-¶—Æ4(À¡iŸ‡ø¿≈•ù…ÿ 5äúl∞Î≠>∏'&ELTéÃ˝˚veqvµâªY–§ô$/;"	v
z	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/na.png	/^/;"	v
zc	/Users/chiiph/Code/vidalia/src/vidalia/res/32x32/preferences-system-network-sharing.png	/^/;"	v
zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoom(QPoint zoomAt, float pct)$/;"	f	class:ZImageView	signature:(QPoint zoomAt, float pct)
zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoom(float pct)$/;"	f	class:ZImageView	signature:(float pct)
zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoom(QPoint zoomAt, float pct);$/;"	p	class:ZImageView	access:public	signature:(QPoint zoomAt, float pct)
zoom	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoom(float pct);$/;"	p	class:ZImageView	access:public	signature:(float pct)
zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::zoomIn()$/;"	f	class:NetViewer	signature:()
zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void zoomIn();$/;"	p	class:NetViewer	access:private	signature:()
zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoomIn()$/;"	f	class:ZImageView	signature:()
zoomIn	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoomIn();$/;"	p	class:ZImageView	access:public	signature:()
zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::zoomOut()$/;"	f	class:NetViewer	signature:()
zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  void zoomOut();$/;"	p	class:NetViewer	access:private	signature:()
zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.cpp	/^ZImageView::zoomOut()$/;"	f	class:ZImageView	signature:()
zoomOut	/Users/chiiph/Code/vidalia/src/vidalia/network/ZImageView.h	/^  void zoomOut();$/;"	p	class:ZImageView	access:public	signature:()
zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/CircuitListWidget.h	/^  void zoomToCircuit(CircuitId circid);$/;"	p	class:CircuitListWidget	access:public	signature:(CircuitId circid)
zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToCircuit(const CircuitId &circid)$/;"	f	class:TorMapImageView	signature:(const CircuitId &circid)
zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToCircuit(const CircuitId &circid);$/;"	p	class:TorMapImageView	access:public	signature:(const CircuitId &circid)
zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToCircuit(const CircuitId &circid)$/;"	f	class:TorMapWidget	signature:(const CircuitId &circid)
zoomToCircuit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToCircuit(const CircuitId &circid);$/;"	p	class:TorMapWidget	access:public	signature:(const CircuitId &circid)
zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToFit()$/;"	f	class:TorMapImageView	signature:()
zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToFit();$/;"	p	class:TorMapImageView	access:public	signature:()
zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToFit()$/;"	f	class:TorMapWidget	signature:()
zoomToFit	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToFit();$/;"	p	class:TorMapWidget	access:public	signature:()
zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void zoomToRouter(QString id);$/;"	p	class:RouterListWidget	access:public	signature:(QString id)
zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::zoomToRouter(const QString &id)$/;"	f	class:TorMapImageView	signature:(const QString &id)
zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  void zoomToRouter(const QString &id);$/;"	p	class:TorMapImageView	access:public	signature:(const QString &id)
zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::zoomToRouter(const QString &id)$/;"	f	class:TorMapWidget	signature:(const QString &id)
zoomToRouter	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  void zoomToRouter(const QString &id);$/;"	p	class:TorMapWidget	access:public	signature:(const QString &id)
zoomToSelectedRelay	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.cpp	/^RouterListWidget::zoomToSelectedRelay()$/;"	f	class:RouterListWidget	signature:()
zoomToSelectedRelay	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListWidget.h	/^  void zoomToSelectedRelay();$/;"	p	class:RouterListWidget	access:private	signature:()
~7	/Users/chiiph/Code/vidalia/src/vidalia/res/flags/bw.png	/^/;"	v
~AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.cpp	/^AdvancedPage::~AdvancedPage()$/;"	f	class:AdvancedPage	signature:()
~AdvancedPage	/Users/chiiph/Code/vidalia/src/vidalia/config/AdvancedPage.h	/^  ~AdvancedPage();$/;"	p	class:AdvancedPage	access:public	signature:()
~AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.cpp	/^AppearancePage::~AppearancePage()$/;"	f	class:AppearancePage	signature:()
~AppearancePage	/Users/chiiph/Code/vidalia/src/vidalia/config/AppearancePage.h	/^  ~AppearancePage();$/;"	p	class:AppearancePage	access:public	signature:()
~BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.cpp	/^BootstrapTestCase::~BootstrapTestCase(){$/;"	f	class:BootstrapTestCase	signature:()
~BootstrapTestCase	/Users/chiiph/Code/vidalia/src/tests/BootstrapTest.h	/^  ~BootstrapTestCase();$/;"	p	class:BootstrapTestCase	access:public	signature:()
~ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.cpp	/^ControlConnection::~ControlConnection()$/;"	f	class:ControlConnection	signature:()
~ControlConnection	/Users/chiiph/Code/vidalia/src/torcontrol/ControlConnection.h	/^  ~ControlConnection();$/;"	p	class:ControlConnection	access:public	signature:()
~ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^ControlSocket::~ControlSocket()$/;"	f	class:ControlSocket	signature:()
~ControlSocket	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.h	/^  ~ControlSocket();$/;"	p	class:ControlSocket	access:public	signature:()
~DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.cpp	/^DebugDialog::~DebugDialog() {}$/;"	f	class:DebugDialog	signature:()
~DebugDialog	/Users/chiiph/Code/vidalia/src/vidalia/plugin/DebugDialog.h	/^    ~DebugDialog();$/;"	p	class:DebugDialog	access:public	signature:()
~DebugMessage	/Users/chiiph/Code/vidalia/src/torcontrol/tcglobal.h	/^    virtual ~DebugMessage() {$/;"	f	class:tc::DebugMessage	access:public	signature:()
~DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.cpp	/^DefaultSettings::~DefaultSettings()$/;"	f	class:DefaultSettings	signature:()
~DefaultSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/DefaultSettings.h	/^  ~DefaultSettings();$/;"	p	class:DefaultSettings	access:public	signature:()
~ExpTree	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^  ~ExpTree()$/;"	f	class:LogFilterSearchTerm::ExpTree	access:public	signature:()
~FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.cpp	/^FirstRunWizard::~FirstRunWizard()$/;"	f	class:FirstRunWizard	signature:()
~FirstRunWizard	/Users/chiiph/Code/vidalia/src/vidalia/FirstRunWizard.h	/^  virtual ~FirstRunWizard();$/;"	p	class:FirstRunWizard	access:public	signature:()
~GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.cpp	/^GeneralPage::~GeneralPage()$/;"	f	class:GeneralPage	signature:()
~GeneralPage	/Users/chiiph/Code/vidalia/src/vidalia/config/GeneralPage.h	/^  ~GeneralPage();$/;"	p	class:GeneralPage	access:public	signature:()
~GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.cpp	/^GeoIpDatabase::~GeoIpDatabase()$/;"	f	class:GeoIpDatabase	signature:()
~GeoIpDatabase	/Users/chiiph/Code/vidalia/src/vidalia/network/GeoIpDatabase.h	/^  virtual ~GeoIpDatabase();$/;"	p	class:GeoIpDatabase	access:public	signature:()
~GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.cpp	/^GraphFrame::~GraphFrame()$/;"	f	class:GraphFrame	signature:()
~GraphFrame	/Users/chiiph/Code/vidalia/src/vidalia/bwgraph/GraphFrame.h	/^  ~GraphFrame();$/;"	p	class:GraphFrame	access:public	signature:()
~Log	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::~Log()$/;"	f	class:Log	signature:()
~Log	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  ~Log();$/;"	p	class:Log	access:public	signature:()
~LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.cpp	/^LogFile::~LogFile()$/;"	f	class:LogFile	signature:()
~LogFile	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFile.h	/^  ~LogFile();$/;"	p	class:LogFile	access:public	signature:()
~LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilter::~LogFilter()$/;"	f	class:LogFilter	signature:()
~LogFilter	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  virtual ~LogFilter();$/;"	p	class:LogFilter	access:public	signature:()
~LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.cpp	/^LogFilterSearchTerm::~LogFilterSearchTerm()$/;"	f	class:LogFilterSearchTerm	signature:()
~LogFilterSearchTerm	/Users/chiiph/Code/vidalia/src/vidalia/log/LogFilter.h	/^  ~LogFilterSearchTerm();$/;"	p	class:LogFilterSearchTerm	access:public	signature:()
~LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.cpp	/^Log::LogMessage::~LogMessage()$/;"	f	class:Log::LogMessage	signature:()
~LogMessage	/Users/chiiph/Code/vidalia/src/common/Log.h	/^  ~LogMessage();$/;"	p	class:Log::LogMessage	access:public	signature:()
~MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow	signature:()
~MainWindow	/Users/chiiph/Code/vidalia/src/vidalia/MainWindow.h	/^  ~MainWindow();$/;"	p	class:MainWindow	access:public	signature:()
~MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.cpp	/^MessageLog::~MessageLog()$/;"	f	class:MessageLog	signature:()
~MessageLog	/Users/chiiph/Code/vidalia/src/vidalia/log/MessageLog.h	/^  ~MessageLog();$/;"	p	class:MessageLog	access:public	signature:()
~NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.cpp	/^NetViewer::~NetViewer()$/;"	f	class:NetViewer	signature:()
~NetViewer	/Users/chiiph/Code/vidalia/src/vidalia/network/NetViewer.h	/^  ~NetViewer();$/;"	p	class:NetViewer	access:public	signature:()
~NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.cpp	/^NetworkPage::~NetworkPage()$/;"	f	class:NetworkPage	signature:()
~NetworkPage	/Users/chiiph/Code/vidalia/src/vidalia/config/NetworkPage.h	/^  ~NetworkPage();$/;"	p	class:NetworkPage	access:public	signature:()
~PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.cpp	/^PluginEngine::~PluginEngine()$/;"	f	class:PluginEngine	signature:()
~PluginEngine	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginEngine.h	/^    ~PluginEngine();$/;"	p	class:PluginEngine	access:public	signature:()
~PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.cpp	/^PluginWrapper::~PluginWrapper() {}$/;"	f	class:PluginWrapper	signature:()
~PluginWrapper	/Users/chiiph/Code/vidalia/src/vidalia/plugin/PluginWrapper.h	/^    ~PluginWrapper();$/;"	p	class:PluginWrapper	access:public	signature:()
~QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp~	/^QtScriptShell_TorControl::~QtScriptShell_TorControl() {}$/;"	f	class:QtScriptShell_TorControl	signature:()
~QtScriptShell_TorControl	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h~	/^    ~QtScriptShell_TorControl();$/;"	p	class:QtScriptShell_TorControl	file:	access:public	signature:()
~QtScriptShell_TorSignal	/Users/chiiph/Code/vidalia/src/vidalia/plugin/prototypes/qtscriptshell_TorSignal.h~	/^    ~QtScriptShell_TorSignal();$/;"	p	class:QtScriptShell_TorSignal	file:	access:public	signature:()
~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.cpp	/^QtScriptShell_X::~QtScriptShell_X() {}$/;"	f	class:QtScriptShell_X	signature:()
~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/generated_extensions/XShell.h	/^  virtual ~QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.cpp	/^QtScriptShell_X::~QtScriptShell_X() {}$/;"	f	class:QtScriptShell_X	signature:()
~QtScriptShell_X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X_shell.h	/^  ~QtScriptShell_X();$/;"	p	class:QtScriptShell_X	access:public	signature:()
~RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.cpp	/^RouterListItem::~RouterListItem()$/;"	f	class:RouterListItem	signature:()
~RouterListItem	/Users/chiiph/Code/vidalia/src/vidalia/network/RouterListItem.h	/^  ~RouterListItem();$/;"	p	class:RouterListItem	access:public	signature:()
~ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.cpp	/^ServerPage::~ServerPage()$/;"	f	class:ServerPage	signature:()
~ServerPage	/Users/chiiph/Code/vidalia/src/vidalia/config/ServerPage.h	/^  ~ServerPage();$/;"	p	class:ServerPage	access:public	signature:()
~SocketWrapper	/Users/chiiph/Code/vidalia/src/torcontrol/ControlSocket.cpp	/^  ~SocketWrapper()$/;"	f	class:ControlSocket::SocketWrapper	access:public	signature:()
~StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.cpp	/^StatusTab::~StatusTab()$/;"	f	class:StatusTab	signature:()
~StatusTab	/Users/chiiph/Code/vidalia/src/vidalia/StatusTab.h	/^  ~StatusTab();$/;"	p	class:StatusTab	access:public	signature:()
~TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.cpp	/^TorControl::~TorControl()$/;"	f	class:TorControl	signature:()
~TorControl	/Users/chiiph/Code/vidalia/src/torcontrol/TorControl.h	/^  ~TorControl();$/;"	p	class:TorControl	access:public	signature:()
~TorHighlighter	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^    ~TorHighlighter() {}$/;"	f	class:TorHighlighter	access:public	signature:()
~TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.cpp	/^TorMapImageView::~TorMapImageView()$/;"	f	class:TorMapImageView	signature:()
~TorMapImageView	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapImageView.h	/^  ~TorMapImageView();$/;"	p	class:TorMapImageView	access:public	signature:()
~TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.cpp	/^TorMapWidget::~TorMapWidget()$/;"	f	class:TorMapWidget	signature:()
~TorMapWidget	/Users/chiiph/Code/vidalia/src/vidalia/network/TorMapWidget.h	/^  ~TorMapWidget();$/;"	p	class:TorMapWidget	access:public	signature:()
~TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.cpp	/^TorService::~TorService()$/;"	f	class:TorService	signature:()
~TorService	/Users/chiiph/Code/vidalia/src/torcontrol/TorService.h	/^  ~TorService();$/;"	p	class:TorService	access:public	signature:()
~TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.cpp	/^TorrcDialog::~TorrcDialog()$/;"	f	class:TorrcDialog	signature:()
~TorrcDialog	/Users/chiiph/Code/vidalia/src/vidalia/config/TorrcDialog.h	/^  ~TorrcDialog();$/;"	p	class:TorrcDialog	access:public	signature:()
~UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.cpp	/^UPNPControl::~UPNPControl()$/;"	f	class:UPNPControl	signature:()
~UPNPControl	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControl.h	/^  ~UPNPControl();$/;"	p	class:UPNPControl	access:protected	signature:()
~UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.cpp	/^UPNPControlThread::~UPNPControlThread()$/;"	f	class:UPNPControlThread	signature:()
~UPNPControlThread	/Users/chiiph/Code/vidalia/src/vidalia/config/UPNPControlThread.h	/^  ~UPNPControlThread();$/;"	p	class:UPNPControlThread	access:public	signature:()
~VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.cpp	/^VAttachButton::~VAttachButton()$/;"	f	class:VAttachButton	signature:()
~VAttachButton	/Users/chiiph/Code/vidalia/src/vidalia/VAttachButton.h	/^    ~VAttachButton();$/;"	p	class:VAttachButton	access:public	signature:()
~VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.cpp	/^VSettings::~VSettings()$/;"	f	class:VSettings	signature:()
~VSettings	/Users/chiiph/Code/vidalia/src/vidalia/config/VSettings.h	/^  ~VSettings();$/;"	p	class:VSettings	access:public	signature:()
~VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.cpp	/^VTabWidget::~VTabWidget()$/;"	f	class:VTabWidget	signature:()
~VTabWidget	/Users/chiiph/Code/vidalia/src/vidalia/VTabWidget.h	/^  ~VTabWidget();$/;"	p	class:VTabWidget	access:public	signature:()
~Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.cpp	/^Vidalia::~Vidalia()$/;"	f	class:Vidalia	signature:()
~Vidalia	/Users/chiiph/Code/vidalia/src/vidalia/Vidalia.h	/^  ~Vidalia();$/;"	p	class:Vidalia	access:public	signature:()
~VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.cpp	/^VidaliaTab::~VidaliaTab()$/;"	f	class:VidaliaTab	signature:()
~VidaliaTab	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaTab.h	/^  ~VidaliaTab();$/;"	p	class:VidaliaTab	access:public	signature:()
~VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.cpp	/^VidaliaWindow::~VidaliaWindow()$/;"	f	class:VidaliaWindow	signature:()
~VidaliaWindow	/Users/chiiph/Code/vidalia/src/vidalia/VidaliaWindow.h	/^  ~VidaliaWindow();$/;"	p	class:VidaliaWindow	access:public	signature:()
~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^  ~X();$/;"	p	class:X	file:	access:public	signature:()
~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.cpp~	/^X::~X()$/;"	f	class:X	signature:()
~X	/Users/chiiph/Code/vidalia/src/tools/script_extension/tmp/X.h~	/^  ~X();$/;"	p	class:X	file:	access:public	signature:()
